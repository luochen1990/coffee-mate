{"version":3,"file":"utils.js","sources":["utils.coffee"],"names":[],"mappings":"AAAA;AAAA,MAAA,WAAA;IAAA;;EAAA,WAAA,GAAc,SAAA;AACb,QAAA;IAAA,KAAA,GAAQ,SAAC,GAAD;MACP,GAAA,GAAM,GAAG,CAAC,OAAJ,CAAY,6EAAZ,EAA2F,IAA3F;MACN,GAAA,GAAM,GAAG,CAAC,OAAJ,CAAY,uEAAZ,EAAqF,IAArF;MACN,GAAA,GAAM,GAAG,CAAC,OAAJ,CAAY,oDAAZ,EAAkE,IAAlE;AACN,aAAO;IAJA;IAMR,OAAA,GAAU,SAAC,KAAD;AACT,UAAA;MAAA,EAAA,GAAK,GAAA,GAAG,CAAC,KAAK,CAAC,QAAN,CAAA,CAAD,CAAH,GAAqB;MAC1B,EAAA,GAAK,KAAA,CAAM,EAAN;AACL,aAAM,EAAA,KAAM,EAAZ;QACC,EAAA,GAAK;QACL,EAAA,GAAK,KAAA,CAAM,EAAN;MAFN;MAGA,EAAA,GAAK,EAAE,CAAC,OAAH,CAAW,iBAAX,EAA8B,EAA9B;MACL,CAAA,GAAO,EAAE,CAAC,MAAH,IAAa,EAAhB,GAAwB,EAAxB,GAAgC;AACpC,aAAO;IARE;IAUV,QAAA,GAAW,SAAA;aACV,CAAC,IAAI,IAAL,CAAU,CAAC,OAAX,CAAA;IADU;IAGX,GAAA,GAAS,CAAA,SAAA;AACR,UAAA;MAAA,GAAA,GAAS,CAAA,SAAA;AAER,YAAA;QAAA,UAAA,GAAa,CAAK,gDAAL,CAAA,IAAkB,oDAAlB,IAA+B,CAAI,OAAO,CAAC,GAAG,CAAC;QAC5D,OAAA,GACC;UAAA,IAAA,EAAM,WAAN;UACA,GAAA,EAAK,YADL;UAEA,KAAA,EAAO,YAFP;UAGA,MAAA,EAAQ,YAHR;UAIA,IAAA,EAAM,YAJN;UAKA,SAAA,EAAW,YALX;;QAMD,IAAG,CAAI,UAAP;iBACC,SAAC,KAAD;mBAAW,SAAC,CAAD;qBAAO;YAAP;UAAX,EADD;SAAA,MAAA;iBAGC,SAAC,KAAD;mBACC,SAAC,CAAD;qBAAO,EAAA,GAAG,OAAQ,CAAA,KAAA,CAAX,GAAoB,CAApB,GAAwB;YAA/B;UADD,EAHD;;MAVQ,CAAA,CAAH,CAAA;MAgBN,SAAA,GAAe,CAAA,SAAA;AACd,YAAA;QAAA,YAAA,GACC;UAAA,GAAA,EAAK,WAAL;UACA,GAAA,EAAK,OADL;UAEA,GAAA,EAAK,KAFL;UAGA,GAAA,EAAK,QAHL;;QAID,OAAA,GAAU,SAAC,EAAD;UACT,IAAG,EAAA,KAAM,KAAT;mBAAoB,IAApB;WAAA,MAAA;mBAA6B,EAAG,CAAA,CAAA,CAAE,CAAC,WAAN,CAAA,EAA7B;;QADS;eAEV,SAAC,EAAD;AACC,cAAA;UAAA,IAAA,GAAO,OAAA,CAAQ,EAAR;iBACP,GAAA,CAAI,YAAa,CAAA,IAAA,CAAjB,CAAA,CAAwB,IAAxB;QAFD;MARc,CAAA,CAAH,CAAA;MAYZ,SAAA,GAAY;MACZ,OAAA,GAAU,SAAC,EAAD;AACT,YAAA;QAAA,MAAA,GAAS,EAAA,GAAE,CAAC,GAAA,CAAI,WAAJ,CAAA,CAAiB,GAAjB,CAAD,CAAF,GAAyB,CAAC,SAAA,CAAU,EAAV,CAAD;eAClC,SAAA;AACC,cAAA;UADA;UACA,IAAA,GAAO;AACP,eAAA,sCAAA;;YACC,IAAG,OAAO,CAAP,KAAY,UAAf;cACC,IAAA,GAAO,OAAA,CAAQ,CAAR;cACP,UAAA,GAAa,QAAA,CAAA;cACb,WAAA,GAAc,CAAA,CAAA;cACd,SAAA,GAAY,QAAA,CAAA,CAAA,GAAa;cACzB,IAAI,CAAC,IAAL,CAAa,MAAD,GAAQ,GAAR,GAAU,CAAC,GAAA,CAAI,OAAJ,CAAA,CAAa,IAAb,CAAD,CAAV,GAA6B,GAA7B,GAA+B,CAAC,GAAA,CAAI,WAAJ,CAAA,CAAiB,KAAjB,CAAD,CAA3C,EAAsE,WAAtE;cACA,IAA+C,SAAA,GAAY,CAA3D;gBAAA,IAAI,CAAC,IAAL,CAAU,GAAA,CAAI,QAAJ,CAAA,CAAc,GAAA,GAAI,SAAJ,GAAc,KAA5B,CAAV,EAAA;eAND;aAAA,MAAA;cAQC,IAAI,CAAC,IAAL,CAAU,EAAA,GAAG,MAAb,EAAuB,CAAvB,EARD;;AADD;UAUA,OAAQ,CAAA,EAAA,CAAR,gBAAY,IAAZ;UACA,SAAS,CAAC,IAAV,CAAe,IAAf;UACA,IAAqB,SAAS,CAAC,MAAV,IAAoB,EAAzC;YAAA,SAAS,CAAC,KAAV,CAAA,EAAA;;AACA,iBAAO;QAfR;MAFS;MAkBV,GAAA,GAAM,OAAA,CAAQ,KAAR;MACN,GAAG,CAAC,SAAJ,GAAgB;MAChB,GAAG,CAAC,IAAJ,GAAW,OAAA,CAAQ,MAAR;MACX,GAAG,CAAC,IAAJ,GAAW,OAAA,CAAQ,MAAR;MACX,GAAG,CAAC,KAAJ,GAAY,GAAG,CAAC,GAAJ,GAAU,OAAA,CAAQ,OAAR;AACtB,aAAO;IArDC,CAAA,CAAH,CAAA;IAuDN,MAAA,GAAS,SAAC,CAAD,EAAI,GAAJ;AACR,UAAA;MAAA,IAAuB,CAAA,CAAA,CAAA,YAAiB,QAAjB,CAAvB;QAAA,MAAW,CAAC,CAAD,EAAI,GAAJ,CAAX,EAAC,YAAD,EAAM,WAAN;;AACA;QACC,CAAA,GAAI,CAAA,CAAA,EADL;OAAA,aAAA;QAEM;AACL,cAAM,KAAA,CAAM,2BAAA,GAA2B,CAAC,OAAA,CAAQ,CAAR,CAAD,CAA3B,GAAuC,mBAAvC,GAA0D,CAAhE,EAHP;;MAIA,IAAG,CAAI,CAAC,CAAA,KAAK,IAAN,CAAP;QACC,IAAG,aAAA,IAAS,GAAA,YAAe,QAA3B;iBACC,GAAA,CAAI,OAAA,CAAQ,CAAR,CAAJ,EADD;SAAA,MAAA;AAGC,gBAAM,KAAA,CAAM,oBAAA,GAAoB,eAAC,MAAM,OAAA,CAAQ,CAAR,CAAP,CAA1B,EAHP;SADD;;IANQ;IAYT,QAAA,GAAW,SAAC,CAAD,EAAI,CAAJ,EAAO,GAAP;AACV,UAAA;MAAA,IAA6B,CAAA,CAAA,CAAA,YAAiB,QAAjB,CAA7B;QAAA,MAAc,CAAC,CAAD,EAAI,CAAJ,EAAO,GAAP,CAAd,EAAC,YAAD,EAAM,UAAN,EAAS,WAAT;;AACA;QACC,EAAA,GAAK,CAAA,CAAA;QACL,EAAA,GAAK,CAAA,CAAA,EAFN;OAAA,aAAA;QAGM;AACL,cAAM,KAAA,CAAM,4BAAA,GAA4B,CAAC,OAAA,CAAQ,CAAR,CAAD,CAA5B,GAAwC,UAAxC,GAAiD,CAAC,OAAA,CAAQ,CAAR,CAAD,CAAjD,GAA6D,qBAA7D,GAAkF,CAAxF,EAJP;;MAKA,IAAG,EAAA,KAAQ,EAAX;QACC,IAAG,aAAA,IAAS,GAAA,YAAe,QAA3B;iBACC,GAAA,CAAI,OAAA,CAAQ,CAAR,CAAJ,EAAgB,OAAA,CAAQ,CAAR,CAAhB,EADD;SAAA,MAAA;AAGC,gBAAM,KAAA,CAAM,0CAAA,GAA0C,CAAC,OAAA,CAAQ,CAAR,CAAD,CAA1C,GAAsD,mBAAtD,GAAwE,CAAC,OAAA,CAAQ,CAAR,CAAD,CAAxE,GAAoF,mBAApF,GAAuG,EAAvG,GAA0G,mBAA1G,GAA6H,EAA7H,GAAgI,IAAtI,EAHP;SADD;;IAPU;IAaX,UAAA,GAAa,SAAC,CAAD;aAAO,SAAC,CAAD,EAAI,CAAJ,EAAO,GAAP;AACnB,YAAA;QAAA,IAA6B,CAAA,CAAA,CAAA,YAAiB,QAAjB,CAA7B;UAAA,MAAc,CAAC,CAAD,EAAI,CAAJ,EAAO,GAAP,CAAd,EAAC,YAAD,EAAM,UAAN,EAAS,WAAT;;AACA;UACC,EAAA,GAAK,CAAA,CAAA;UACL,EAAA,GAAK,CAAA,CAAA;UACL,GAAA,GAAM,CAAA,CAAE,EAAF;UACN,GAAA,GAAM,CAAA,CAAE,EAAF,EAJP;SAAA,aAAA;UAKM;AACL,gBAAM,KAAA,CAAM,4BAAA,GAA4B,CAAC,OAAA,CAAQ,CAAR,CAAD,CAA5B,GAAwC,UAAxC,GAAiD,CAAC,OAAA,CAAQ,CAAR,CAAD,CAAjD,GAA6D,QAA7D,GAAqE,CAAC,CAAC,IAAvE,GAA4E,mBAA5E,GAA+F,CAArG,EANP;;QAOA,IAAG,GAAA,KAAS,GAAZ;UACC,IAAG,aAAA,IAAS,GAAA,YAAe,QAA3B;mBACC,GAAA,CAAI,OAAA,CAAQ,CAAR,CAAJ,EAAgB,OAAA,CAAQ,CAAR,CAAhB,EAA4B,CAAC,CAAC,IAA9B,EADD;WAAA,MAAA;AAGC,kBAAM,KAAA,CAAM,0CAAA,GAA0C,CAAC,OAAA,CAAQ,CAAR,CAAD,CAA1C,GAAsD,mBAAtD,GAAwE,CAAC,OAAA,CAAQ,CAAR,CAAD,CAAxE,GAAoF,mBAApF,GAAuG,CAAC,CAAC,IAAzG,GAA8G,mBAA9G,GAAiI,GAAjI,GAAqI,mBAArI,GAAwJ,GAAxJ,GAA4J,IAAlK,EAHP;WADD;;MATmB;IAAP;IAeb,MAAA,GAAS,SAAC,CAAD;aACR,SAAA;AACC,YAAA;QADA;QACA,IAAA,GAAO,QAAA,CAAS,IAAT;eACP,CAAA,aAAE,IAAF;MAFD;IADQ;IAKT,IAAA,GAAO,SAAC,KAAD;AACN,UAAA;MAAA,CAAA,GAAI;AACJ,WAAA,uCAAA;wBAAc,YAAG;QAAjB,CAAE,CAAA,CAAA,CAAF,GAAO;AAAP;AACA,aAAO;IAHD;IAKP,MAAsB,CAAA,SAAA;AACrB,UAAA;MAAA,EAAA,GAAK,SAAC,IAAD,EAAO,GAAP;AACJ,YAAA;QAAA,IAAe,GAAA,KAAO,CAAP,IAAgB,cAAhB,IAAyB,OAAO,IAAP,KAAgB,QAAxD;AAAA,iBAAO,KAAP;;QACA,IAAG,IAAA,YAAgB,KAAnB;UACC,CAAA;;AAAK;iBAAA,sCAAA;;2BAAA,EAAA,CAAG,CAAH,EAAM,GAAA,GAAI,CAAV;AAAA;;eADN;SAAA,MAAA;UAGC,CAAA,GAAI;AACJ,eAAA,SAAA;;YAAA,CAAE,CAAA,CAAA,CAAF,GAAO,EAAA,CAAG,CAAH,EAAM,GAAA,GAAI,CAAV;AAAP,WAJD;;AAKA,eAAO;MAPH;aAQL;QAAA,IAAA,EAAM,SAAC,GAAD,EAAM,KAAN;;YAAM,QAAM;;iBAAM,EAAA,CAAG,GAAH,EAAQ,KAAR;QAAlB,CAAN;QACA,QAAA,EAAU,SAAC,GAAD,EAAM,KAAN;;YAAM,QAAM;;iBAAa,EAAA,CAAG,GAAH,EAAQ,KAAR;QAAzB,CADV;;IATqB,CAAA,CAAH,CAAA,CAAnB,EAAC,eAAD,EAAO;IAYP,MAAA,GAAS,SAAC,IAAD;aAAU,SAAA;AAClB,YAAA;QADmB;AACnB,aAAA,0CAAA;;cAAuB;AACtB,iBAAA,MAAA;;;gBAAA,IAAK,CAAA,CAAA,IAAM;;AAAX;;AADD;AAEA,eAAO;MAHW;IAAV;IAKT,MAAA,GAAS,SAAC,IAAD;aAAU,SAAA;AAClB,YAAA;QADmB;AACnB,aAAA,yCAAA;;cAAsB;AACrB,iBAAA,MAAA;;cAAA,IAAK,CAAA,CAAA,CAAL,GAAU;AAAV;;AADD;AAEA,eAAO;MAHW;IAAV;IAKT,QAAA,GAAW,SAAC,EAAD;AACV,UAAA;MAAA,CAAA,GAAI,IAAA,CAAK,EAAL;MACJ,QAAA,GAAW,CAAE,CAAA,GAAA;MACb,IAAG,gBAAH;eACC,SAAA;AACC,cAAA;UADA;iBACA,0CAAkB,QAAlB,CAAA,aAA4B,IAA5B;QADD,EADD;OAAA,MAAA;eAIC,SAAA;AACC,cAAA;UADA;UACA,CAAA,GAAI,CAAE,CAAA,IAAI,CAAC,MAAL;UACN,IAAO,SAAP;AACC,kBAAM,KAAA,CAAM,6BAAA,GAA8B,IAAI,CAAC,MAAnC,GAA0C,OAAhD,EADP;WAAA,MAAA;AAGC,mBAAO,CAAA,aAAE,IAAF,EAHR;;QAFD,EAJD;;IAHU;AAcX,WAAO;MACN,KAAA,GADM;MACD,QAAA,MADC;MACO,UAAA,QADP;MACiB,YAAA,UADjB;MAC6B,MAAA,IAD7B;MACmC,MAAA,IADnC;MACyC,UAAA,QADzC;MACmD,QAAA,MADnD;MAC2D,QAAA,MAD3D;MACmE,QAAA,MADnE;MAC2E,UAAA,QAD3E;;EAjKM;;EAqKd,MAAM,CAAC,OAAP,GAAiB,WAAA,CAAA;AArKjB","sourcesContent":["this_module = () ->\n\tsimpl = (lit) ->\n\t\tlit = lit.replace(/^\\s*\\(\\s*function\\s*\\(\\s*\\)\\s*{\\s*return\\s*([^]*?);?\\s*}\\s*\\)\\s*\\(\\s*\\)\\s*$/, '$1')\n\t\tlit = lit.replace(/^\\s*\\(\\s*\\(\\s*\\)\\s*=>\\s*{\\s*return\\s*([^]*?);?\\s*}\\s*\\)\\s*\\(\\s*\\)\\s*$/, '$1')\n\t\tlit = lit.replace(/^\\s*\\(\\s*\\(\\s*\\)\\s*=>\\s*([^]*?)\\s*\\)\\s*\\(\\s*\\)\\s*$/, '$1')\n\t\treturn lit\n\n\tliteral = (thunk) ->\n\t\ts0 = \"(#{thunk.toString()})()\"\n\t\ts1 = simpl(s0)\n\t\tuntil s1 == s0\n\t\t\ts0 = s1\n\t\t\ts1 = simpl(s1)\n\t\ts2 = s0.replace(/[\\r\\n]{1,2}\\s*/g, '') #inline\n\t\tr = if s2.length <= 60 then s2 else s0\n\t\treturn r\n\n\ttime_now = ->\n\t\t(new Date).getTime()\n\n\tlog = do -> #log an expression with it's literal and time used\n\t\tdye = do ->\n\t\t\t# ANSI Terminal Colors.\n\t\t\tcavailable = (not window?) and process? and not process.env.NODE_DISABLE_COLORS\n\t\t\tpalette =\n\t\t\t\tbold: '\\x1B[0;1m'\n\t\t\t\tred: '\\x1B[0;31m'\n\t\t\t\tgreen: '\\x1B[0;32m'\n\t\t\t\tyellow: '\\x1B[0;33m'\n\t\t\t\tblue: '\\x1B[0;34m'\n\t\t\t\tbold_grey: '\\x1B[1;30m'\n\t\t\tif not cavailable\n\t\t\t\t(color) -> (s) -> s\n\t\t\telse\n\t\t\t\t(color) ->\n\t\t\t\t\t(s) -> \"#{palette[color]}#{s}#{'\\x1B[0m'}\"\n\n\t\tlog_label = do ->\n\t\t\tflag_palette =\n\t\t\t\t'#': 'bold_grey'\n\t\t\t\t'I': 'green'\n\t\t\t\t'E': 'red'\n\t\t\t\t'W': 'yellow'\n\t\t\top_flag = (op) ->\n\t\t\t\tif op == 'log' then '#' else op[0].toUpperCase()\n\t\t\t(op) ->\n\t\t\t\tflag = op_flag(op)\n\t\t\t\tdye(flag_palette[flag]) flag\n\n\t\thistories = []\n\t\tfactory = (op) ->\n\t\t\tprefix = \"#{dye('bold_grey') '#'}#{log_label op}\"\n\t\t\t(args...) ->\n\t\t\t\tball = []\n\t\t\t\tfor f in args\n\t\t\t\t\tif typeof f == 'function'\n\t\t\t\t\t\texpr = literal(f)\n\t\t\t\t\t\tstart_time = time_now()\n\t\t\t\t\t\teval_result = f()\n\t\t\t\t\t\ttime_used = time_now() - start_time\n\t\t\t\t\t\tball.push(\"#{prefix} #{dye('green') expr} #{dye('bold_grey') '==>'}\", eval_result)\n\t\t\t\t\t\tball.push(dye('yellow') \"[#{time_used}ms]\") if time_used > 0\n\t\t\t\t\telse\n\t\t\t\t\t\tball.push(\"#{prefix}\", f)\n\t\t\t\tconsole[op] ball...\n\t\t\t\thistories.push(ball)\n\t\t\t\thistories.shift() if histories.length >= 10\n\t\t\t\treturn null\n\t\tgot = factory('log')\n\t\tgot.histories = histories\n\t\tgot.info = factory('info')\n\t\tgot.warn = factory('warn')\n\t\tgot.error = got.err = factory('error')\n\t\treturn got\n\n\tassert = (f, msg) ->\n\t\t[msg, f] = [f, msg] if f not instanceof Function\n\t\ttry\n\t\t\tr = f()\n\t\tcatch e\n\t\t\tthrow Error \"Assertion Not Available: #{literal(f)}\\n  Inner Error: #{e}\"\n\t\tif not (r is true)\n\t\t\tif msg? and msg instanceof Function\n\t\t\t\tmsg(literal(f))\n\t\t\telse\n\t\t\t\tthrow Error \"Assertion Failed: #{msg ? literal(f)}\"\n\n\tassertEq = (l, r, msg) ->\n\t\t[msg, l, r] = [l, r, msg] if l not instanceof Function\n\t\ttry\n\t\t\tlv = l()\n\t\t\trv = r()\n\t\tcatch e\n\t\t\tthrow Error \"Equation Not Available: ( #{literal(l)} ) == ( #{literal(r)} )\\n  Inner Error: #{e}\"\n\t\tif lv isnt rv\n\t\t\tif msg? and msg instanceof Function\n\t\t\t\tmsg(literal(l), literal(r))\n\t\t\telse\n\t\t\t\tthrow Error \"Equation Does Not Hold:\\n  Left Expr  : #{literal(l)}\\n  Right Expr : #{literal(r)}\\n  Left Value : #{lv}\\n  Right Value: #{rv}\\n\"\n\n\tassertEqOn = (f) -> (l, r, msg) ->\n\t\t[msg, l, r] = [l, r, msg] if l not instanceof Function\n\t\ttry\n\t\t\tlv = l()\n\t\t\trv = r()\n\t\t\tflv = f(lv)\n\t\t\tfrv = f(rv)\n\t\tcatch e\n\t\t\tthrow Error \"Equation Not Available: ( #{literal(l)} ) == ( #{literal(r)} ) ON #{f.name}\\n  Inner Error: #{e}\"\n\t\tif flv isnt frv\n\t\t\tif msg? and msg instanceof Function\n\t\t\t\tmsg(literal(l), literal(r), f.name)\n\t\t\telse\n\t\t\t\tthrow Error \"Equation Does Not Hold:\\n  Left Expr  : #{literal(l)}\\n  Right Expr : #{literal(r)}\\n  Compared On: #{f.name}\\n  Left Value : #{flv}\\n  Right Value: #{frv}\\n\"\n\n\tpurify = (f) -> # ensure a function not to modify it's arguments\n\t\t(args...) ->\n\t\t\targs = deepcopy args\n\t\t\tf(args...)\n\n\tdict = (pairs) -> #for dict comprehensions\n\t\td = {}\n\t\td[k] = v for [k, v] in pairs\n\t\treturn d\n\n\t{copy, deepcopy} = do ->\n\t\tcp = (root, dep) ->\n\t\t\treturn root if dep == 0 or not root? or typeof(root) != 'object'\n\t\t\tif root instanceof Array\n\t\t\t\tr = (cp(v, dep-1) for v in root)\n\t\t\telse\n\t\t\t\tr = {}\n\t\t\t\tr[k] = cp(v, dep-1) for k, v of root\n\t\t\treturn r\n\t\tcopy: (obj, depth=1) -> cp(obj, depth)\n\t\tdeepcopy: (obj, depth=Infinity) -> cp(obj, depth)\n\n\textend = (base) -> (defaults...) -> #NOTE: modified inplace, use copy() to protect it.\n\t\tfor d in defaults when d?\n\t\t\tbase[k] ?= v for k, v of d #NOTE: null values will be replaced if a default value exists.\n\t\treturn base\n\n\tupdate = (base) -> (updates...) -> #NOTE: modified inplace, use copy() to protect it.\n\t\tfor d in updates when d?\n\t\t\tbase[k] = v for k, v of d\n\t\treturn base\n\n\toverload = (_d) ->\n\t\td = copy _d\n\t\tfallback = d['_']\n\t\tif fallback?\n\t\t\t(args...) ->\n\t\t\t\t(d[args.length] ? fallback) args...\n\t\telse\n\t\t\t(args...) ->\n\t\t\t\tf = d[args.length]\n\t\t\t\tif not f?\n\t\t\t\t\tthrow Error \"This Function Can't Accept #{args.length} Args\"\n\t\t\t\telse\n\t\t\t\t\treturn f args...\n\n\treturn {\n\t\tlog, assert, assertEq, assertEqOn, dict, copy, deepcopy, purify, extend, update, overload,\n\t}\n\nmodule.exports = this_module()\n\n"]}