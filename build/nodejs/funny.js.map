{"version":3,"sources":["funny.coffee"],"names":[],"mappings":"AAAA;AAAA,MAAA,WAAA;IAAA,gBAAA;;AAAA,EAAA,WAAA,GAAc,SAAA,GAAA;AACb,QAAA,gCAAA;AAAA,IAAA,MAAA,GAAS,SAAC,CAAD,GAAA;AACR,UAAA,IAAA;AAAA,MAAA,IAAA,GAAO,SAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,GAAA;AACN,QAAA,IAAG,CAAA,KAAK,CAAR;iBAAe,EAAf;SAAA,MAAA;iBAAsB,IAAA,CAAK,CAAL,EAAQ,CAAA,GAAI,CAAZ,EAAe,CAAA,CAAE,CAAF,CAAf,EAAtB;SADM;MAAA,CAAP,CAAA;aAEA,SAAC,CAAD,GAAA;eACC,SAAC,CAAD,GAAA;iBAAO,IAAA,CAAK,CAAL,EAAQ,CAAA,GAAI,CAAZ,EAAe,CAAf,EAAP;QAAA,EADD;MAAA,EAHQ;IAAA,CAAT,CAAA;AAAA,IAMA,CAAA,GAAI,SAAC,CAAD,GAAA;aACH,CAAC,SAAC,CAAD,GAAA;eAAQ,CAAA,CAAE,CAAF,EAAR;MAAA,CAAD,CAAA,CAAe,CAAC,SAAC,CAAD,GAAA;eAAQ,CAAA,CAAE,CAAC,SAAC,CAAD,GAAA;iBAAQ,CAAC,CAAA,CAAE,CAAF,CAAD,CAAA,CAAM,CAAN,EAAR;QAAA,CAAD,CAAF,EAAR;MAAA,CAAD,CAAf,EADG;IAAA,CANJ,CAAA;AAAA,IASA,OAAA,GAAU,SAAC,CAAD,EAAI,OAAJ,GAAA;AACT,UAAA,KAAA;;QADa,UAAU,CAAC,SAAA,GAAA;AAAa,cAAA,IAAA;AAAA,UAAZ,4DAAY,CAAA;iBAAA,IAAA,CAAK,IAAL,EAAb;QAAA,CAAD;OACvB;AAAA,MAAA,KAAA,GAAQ,EAAR,CAAA;aACA,SAAA,GAAA;AACC,YAAA,oBAAA;AAAA,QADA,4DACA,CAAA;AAAA,QAAA,GAAA,GAAM,OAAA,aAAQ,IAAR,CAAN,CAAA;AAAA,QACA,MAAA,GAAS,KAAM,CAAA,GAAA,CADf,CAAA;AAEA,QAAA,IAAG,cAAH;iBACC,OADD;SAAA,MAAA;AAGC,UAAA,CAAA,GAAI,CAAA,aAAE,IAAF,CAAJ,CAAA;AAAA,UACA,KAAM,CAAA,GAAA,CAAN,GAAa,CADb,CAAA;iBAEA,EALD;SAHD;MAAA,EAFS;IAAA,CATV,CAAA;AAAA,IAqBA,GAAA,GAAM,CArBN,CAAA;AAAA,IAuBA,OAAA,GAAU,SAAC,EAAD,GAAA;AACT,UAAA,CAAA;AAAA,MAAA,CAAA,GAAI,OAAA,CAAS,EAAA,CAAG,CAAC,SAAA,GAAA;AAAa,YAAA,IAAA;AAAA,QAAZ,4DAAY,CAAA;eAAA,CAAA,aAAE,IAAF,EAAb;MAAA,CAAD,CAAH,CAAT,CAAJ,CAAA;AACA,aAAO,CAAP,CAFS;IAAA,CAvBV,CAAA;AA2BA,WAAO;AAAA,MACN,QAAA,MADM;AAAA,MACE,GAAA,CADF;AAAA,MACK,SAAA,OADL;AAAA,MACc,KAAA,GADd;AAAA,MACmB,SAAA,OADnB;KAAP,CA5Ba;EAAA,CAAd,CAAA;;AAAA,EAgCA,MAAM,CAAC,OAAP,GAAiB,WAAA,CAAA,CAhCjB,CAAA;AAAA","file":"funny.js","sourceRoot":"/source/","sourcesContent":["this_module = () ->\n\tchurch = (n) -> #the nth church number\n\t\titer = (f, n, r) ->\n\t\t\tif n == 0 then r else iter(f, n - 1, f(r))\n\t\t(f) ->\n\t\t\t(x) -> iter(f, n + 0, x)\n\n\tY = (f) -> #the Y combinator\n\t\t((x) -> (x x)) ((x) -> (f ((y) -> ((x x) y))))\n\n\tmemoize = (f, get_key = ((args...) -> json(args))) ->\n\t\tcache = {}\n\t\t(args...) ->\n\t\t\tkey = get_key(args...)\n\t\t\tcached = cache[key]\n\t\t\tif cached?\n\t\t\t\tcached\n\t\t\telse\n\t\t\t\tr = f(args...)\n\t\t\t\tcache[key] = r\n\t\t\t\tr\n\n\tfix = Y\n\n\tmemoFix = (ff) ->\n\t\tf = memoize (ff ((args...) -> f(args...)))\n\t\treturn f\n\n\treturn {\n\t\tchurch, Y, memoize, fix, memoFix,\n\t}\n\nmodule.exports = this_module()\n\n"]}