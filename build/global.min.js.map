{"version":3,"sources":["/source/node_modules/browserify/node_modules/browser-pack/_prelude.js","global.js","/source/src/global.coffee","/source/node_modules/browserify/node_modules/process/browser.js","/source/node_modules/lazy.coffee/build/lazy.js","/source/src/basics.coffee","/source/src/coffee-mate.coffee","/source/src/convertors.coffee","/source/src/funny.coffee","/source/src/url-helpers.coffee","/source/src/utils.coffee"],"names":["f","exports","module","define","amd","g","window","global","self","this","__CoffeeMate","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"k","mate","v","./coffee-mate",2,"cleanUpNextTick","draining","currentQueue","queue","concat","queueIndex","drainQueue","timeout","setTimeout","len","run","clearTimeout","Item","fun","array","noop","process","nextTick","args","Array","arguments","push","prototype","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","name","cwd","chdir","dir","umask",3,"lazy","this_module","slice","arg","Iterator","LazyList","Symbol","all","any","best","brk","cartProd","cons","drop","dropWhile","enumerate","filter","foldl","foreach","group","groupBy","groupOn","head","iterate","last","list","map","naturals","nil","partition","permutations","primes","randoms","range","ref","repeat","reverse","scanl","sort","sortOn","streak","take","takeWhile","zip","zipWith","iterator","toString","it","next","value","done","stop","start","step","x","p","Infinity","xs","constructor","String","keys","Object","init","st","hash","normal","salt","Math","PI","sin","floor","seed","opts","ref1","rg","next_permutation","m","arr","ls","json","c","iter","ok","finished","j","prevx","got","buf","shift","b","fa","fb","eq","memo","y","results","xss","xs_iter","len1","iters","apply_vector","inc_vector","limits","len_minus_1","vec","space","get_value","inc","results1","ref2","better","all_not","callback","fruit","defineProperties","break","writable","configurable","enumerable",4,"abs","accept_multi_or_array","ceil","combine","curry2","curry3","equal","flip","greaterEqual","greaterThan","lessEqual","lessThan","max","max_index","min","min_index","minus","notEqual","pack","pluck","plus","precise","seek","sum","uncurry2","uncurry3","unpack","attr","d","parseFloat","toPrecision","first","lazy.coffee",5,"basics","convertors","funny","url_helpers","utils","extend","./basics","./convertors","./funny","./url-helpers","./utils",6,"bool","chr","float","hex","int","obj","ord","str","base","parseInt","test","charCodeAt","fromCharCode","indent","JSON","stringify","parse",7,"Y","church","fix","memoFix","memoize","get_key","cache","cached","key","ff",8,"uri_decoder","uri_encoder","component_packer","encodeURIComponent","join","component_unpacker","match","decodeURIComponent",9,"assert","assertEq","assertEqOn","copy","deepcopy","dict","function_literal","log","overload","securely","time_now","update","expr","replace","Date","getTime","dye","factory","histories","log_label","cavailable","palette","NODE_DISABLE_COLORS","bold","red","green","yellow","blue","bold_grey","color","flag_palette","op_flag","#","I","E","W","op","toUpperCase","flag","prefix","ball","eval_result","start_time","time_used","console","info","warn","error","err","msg","Function","_error","lv","rv","flv","frv","pairs","cp","root","dep","depth","defaults","updates","_d","fallback","_process"],"mappings":"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","file":"global.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.__CoffeeMate = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n(function (global){\nvar k, mate, v;\n\nmate = require('./coffee-mate');\n\nfor (k in mate) {\n  v = mate[k];\n  global[k] = v;\n}\n\n\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./coffee-mate\":5}],2:[function(require,module,exports){\n// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            currentQueue[queueIndex].run();\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (!draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],3:[function(require,module,exports){\n(function (global){\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.lazy = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nvar this_module,\n  slice = [].slice;\n\nthis_module = function(arg) {\n  var Iterator, LazyList, Symbol, all, any, best, brk, cartProd, concat, cons, drop, dropWhile, enumerate, filter, foldl, foreach, group, groupBy, groupOn, head, iterate, last, lazy, length, list, map, naturals, nil, partition, permutations, primes, randoms, range, ref, repeat, reverse, scanl, sort, sortOn, streak, take, takeWhile, zip, zipWith;\n  Symbol = arg.Symbol;\n  LazyList = function(f) {\n    f[Symbol.iterator] = function() {\n      return f();\n    };\n    f.toString = function() {\n      return \"LazyList\";\n    };\n    return f;\n  };\n  nil = LazyList(function() {\n    return nil;\n  });\n  nil.toString = function() {\n    return 'nil';\n  };\n  Iterator = function(it) {\n    it.next = function() {\n      var r;\n      r = it();\n      return {\n        value: r,\n        done: r === nil\n      };\n    };\n    it.toString = function() {\n      return \"Iterator\";\n    };\n    return it;\n  };\n  naturals = LazyList(function() {\n    var i;\n    i = -1;\n    return Iterator(function() {\n      return ++i;\n    });\n  });\n  range = function() {\n    var args;\n    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    if (args.length === 0) {\n      return naturals;\n    } else if (args.length === 1) {\n      return LazyList(function() {\n        var i, stop;\n        stop = args[0];\n        i = -1;\n        return Iterator(function() {\n          if (++i < stop) {\n            return i;\n          } else {\n            return nil;\n          }\n        });\n      });\n    } else if (args.length === 2) {\n      return LazyList(function() {\n        var i, start, stop;\n        start = args[0], stop = args[1];\n        if (start < stop) {\n          i = start - 1;\n          return Iterator(function() {\n            if (++i < stop) {\n              return i;\n            } else {\n              return nil;\n            }\n          });\n        } else {\n          i = start + 1;\n          return Iterator(function() {\n            if (--i > stop) {\n              return i;\n            } else {\n              return nil;\n            }\n          });\n        }\n      });\n    } else {\n      return LazyList(function() {\n        var i, start, step, stop;\n        start = args[0], stop = args[1], step = args[2];\n        if (stop !== start && (stop - start) * step < 0) {\n          throw 'ERR IN range(): YOU ARE CREATING AN UNLIMITTED RANGE';\n        }\n        i = start - step;\n        if (start < stop) {\n          return Iterator(function() {\n            if ((i += step) < stop) {\n              return i;\n            } else {\n              return nil;\n            }\n          });\n        } else {\n          return Iterator(function() {\n            if ((i += step) > stop) {\n              return i;\n            } else {\n              return nil;\n            }\n          });\n        }\n      });\n    }\n  };\n  primes = LazyList(function() {\n    return filter(function(x) {\n      return all(function(p) {\n        return x % p !== 0;\n      })(takeWhile(function(p) {\n        return p * p <= x;\n      })(range(2, Infinity)));\n    })(range(2, Infinity))();\n  });\n  lazy = function(xs) {\n    var ref;\n    if (typeof xs === 'function') {\n      if (xs[Symbol.iterator] != null) {\n        return xs;\n      } else {\n        return LazyList(xs);\n      }\n    } else if ((ref = xs.constructor) === Array || ref === String) {\n      return LazyList(function() {\n        var i;\n        i = -1;\n        return Iterator(function() {\n          if ((++i) < xs.length) {\n            return xs[i];\n          } else {\n            return nil;\n          }\n        });\n      });\n    } else if (xs[Symbol.iterator] != null) {\n      return LazyList(function() {\n        var it;\n        it = xs[Symbol.iterator]();\n        return Iterator(function() {\n          var r;\n          r = it.next();\n          if (r.done) {\n            return nil;\n          } else {\n            return r.value;\n          }\n        });\n      });\n    } else {\n      throw Error('lazy(xs): xs is neither Array nor Iterable');\n    }\n  };\n  enumerate = function(it) {\n    if ((it[Symbol.iterator] != null) || it instanceof Array) {\n      return zip(naturals, it);\n    } else {\n      return LazyList(function() {\n        var i, keys;\n        keys = Object.keys(it);\n        i = -1;\n        return Iterator(function() {\n          var k;\n          if (++i < keys.length) {\n            return [(k = keys[i]), it[k]];\n          } else {\n            return nil;\n          }\n        });\n      });\n    }\n  };\n  repeat = function(x) {\n    return LazyList(function() {\n      return Iterator(function() {\n        return x;\n      });\n    });\n  };\n  iterate = function(next, init) {\n    return LazyList(function() {\n      var st;\n      st = init;\n      return Iterator(function() {\n        var r;\n        r = st;\n        st = next(st);\n        return r;\n      });\n    });\n  };\n  randoms = (function() {\n    var hash, normal, salt;\n    salt = Math.PI / 3.0;\n    hash = function(x) {\n      x = Math.sin(x + salt) * 1e4;\n      return x - Math.floor(x);\n    };\n    normal = function(seed) {\n      return iterate(hash, hash(seed));\n    };\n    return function(opts) {\n      var k, ref, ref1, rg, s, seed;\n      if (opts == null) {\n        return normal(0);\n      } else if (typeof opts === 'number') {\n        return normal(opts);\n      } else {\n        seed = (ref = opts.seed) != null ? ref : 0;\n        rg = opts.range;\n        if (rg != null) {\n          if (typeof rg === 'number') {\n            return map(function(x) {\n              return Math.floor(x * rg);\n            })(normal(seed));\n          } else {\n            ref1 = [rg[0], rg[1] - rg[0] + 1], s = ref1[0], k = ref1[1];\n            return map(function(x) {\n              return s + Math.floor(x * k);\n            })(normal(seed));\n          }\n        } else {\n          return normal(seed);\n        }\n      }\n    };\n  })();\n  permutations = (function() {\n    var next_permutation;\n    next_permutation = function(x) {\n      var l, m, r, ref, ref1;\n      x = x.slice(0);\n      l = x.length - 1;\n      while (l >= 1 && x[l] <= x[l - 1]) {\n        --l;\n      }\n      if (l !== 0) {\n        m = x.length - 1;\n        while (m > l - 1 && x[m] <= x[l - 1]) {\n          --m;\n        }\n        ref = [x[l - 1], x[m]], x[m] = ref[0], x[l - 1] = ref[1];\n      }\n      r = x.length - 1;\n      while (l < r) {\n        ref1 = [x[r], x[l]], x[l] = ref1[0], x[r] = ref1[1];\n        ++l;\n        --r;\n      }\n      return x;\n    };\n    return function(xs) {\n      var arr;\n      arr = list(xs);\n      if (arr.length === 0) {\n        return nil;\n      } else {\n        return cons(arr.slice(0))(takeWhile(function(ls) {\n          return json(ls) !== json(arr);\n        })(drop(1)(iterate(next_permutation, arr))));\n      }\n    };\n  })();\n  take = function(n) {\n    return function(xs) {\n      return LazyList(function() {\n        var c, iter;\n        iter = lazy(xs)[Symbol.iterator]();\n        c = -1;\n        return Iterator(function() {\n          if (++c < n) {\n            return iter();\n          } else {\n            return nil;\n          }\n        });\n      });\n    };\n  };\n  takeWhile = function(ok) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter;\n        iter = lazy(xs)[Symbol.iterator]();\n        return Iterator(function() {\n          var x;\n          if ((x = iter()) !== nil && ok(x)) {\n            return x;\n          } else {\n            return nil;\n          }\n        });\n      });\n    };\n  };\n  drop = function(n) {\n    return function(xs) {\n      return LazyList(function() {\n        var finished, i, iter, j, ref;\n        iter = lazy(xs)[Symbol.iterator]();\n        finished = false;\n        for (i = j = 0, ref = n; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n          finished || (finished = iter() === nil);\n          if (finished) {\n            break;\n          }\n        }\n        if (finished) {\n          return function() {\n            return nil;\n          };\n        } else {\n          return iter;\n        }\n      });\n    };\n  };\n  dropWhile = function(ok) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter, x;\n        iter = lazy(xs)[Symbol.iterator]();\n        while (ok(x = iter()) && x !== nil) {\n          null;\n        }\n        return Iterator(function() {\n          var prevx, ref;\n          ref = [x, iter()], prevx = ref[0], x = ref[1];\n          return prevx;\n        });\n      });\n    };\n  };\n  cons = function(x) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter;\n        iter = null;\n        return Iterator(function() {\n          if (iter === null) {\n            iter = lazy(xs)[Symbol.iterator]();\n            return x;\n          } else {\n            return iter();\n          }\n        });\n      });\n    };\n  };\n  map = function(f) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter;\n        iter = lazy(xs)[Symbol.iterator]();\n        return Iterator(function() {\n          var x;\n          if ((x = iter()) !== nil) {\n            return f(x);\n          } else {\n            return nil;\n          }\n        });\n      });\n    };\n  };\n  filter = function(ok) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter;\n        iter = lazy(xs)[Symbol.iterator]();\n        return Iterator(function() {\n          var x;\n          while (!ok(x = iter()) && x !== nil) {\n            null;\n          }\n          return x;\n        });\n      });\n    };\n  };\n  scanl = function(f, r) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter;\n        iter = lazy(xs)[Symbol.iterator]();\n        return Iterator(function() {\n          var got, x;\n          got = r;\n          r = (x = iter()) !== nil ? f(r, x) : nil;\n          return got;\n        });\n      });\n    };\n  };\n  streak = function(n) {\n    if (n < 1) {\n      return nil;\n    } else {\n      return function(xs) {\n        return drop(n - 1)(LazyList(function() {\n          var buf, iter;\n          iter = lazy(xs)[Symbol.iterator]();\n          buf = [];\n          return Iterator(function() {\n            var x;\n            if ((x = iter()) === nil) {\n              return nil;\n            }\n            buf.push(x);\n            if (buf.length > n) {\n              buf.shift(1);\n            }\n            return buf.slice(0);\n          });\n        }));\n      };\n    }\n  };\n  reverse = function(xs) {\n    var ref;\n    if ((ref = xs.constructor) === Array || ref === String) {\n      return LazyList(function() {\n        var i;\n        i = xs.length;\n        return Iterator(function() {\n          if ((--i) >= 0) {\n            return xs[i];\n          } else {\n            return nil;\n          }\n        });\n      });\n    } else {\n      return list(lazy(xs)).reverse();\n    }\n  };\n  sort = function(xs) {\n    var arr;\n    arr = list(lazy(xs));\n    return arr.sort();\n  };\n  sortOn = function(f) {\n    return function(xs) {\n      var arr;\n      arr = list(lazy(xs));\n      return arr.sort(function(a, b) {\n        var fa, fb;\n        return ((fa = f(a)) > (fb = f(b))) - (fa < fb);\n      });\n    };\n  };\n  group = function(xs) {\n    return LazyList(function() {\n      var iter, t, x;\n      iter = lazy(xs)[Symbol.iterator]();\n      t = nil;\n      x = iter();\n      return Iterator(function() {\n        if (x === nil) {\n          return nil;\n        } else if (x !== t) {\n          t = x;\n          return LazyList(function() {\n            return Iterator(function() {\n              var r;\n              if ((r = x) === t) {\n                x = iter();\n                return r;\n              } else {\n                return nil;\n              }\n            });\n          });\n        }\n      });\n    });\n  };\n  groupBy = function(eq) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter, t, x;\n        iter = lazy(xs)[Symbol.iterator]();\n        t = nil;\n        x = iter();\n        return Iterator(function() {\n          if (x === nil) {\n            return nil;\n          } else if (!eq(x, t)) {\n            t = x;\n            return LazyList(function() {\n              return Iterator(function() {\n                var r;\n                if (eq((r = x), t)) {\n                  x = iter();\n                  return r;\n                } else {\n                  return nil;\n                }\n              });\n            });\n          }\n        });\n      });\n    };\n  };\n  groupOn = function(f) {\n    return function(xs) {\n      var k, memo, v;\n      memo = {};\n      foreach(xs, function(x) {\n        var y;\n        y = f(x);\n        if (memo[y] == null) {\n          memo[y] = [];\n        }\n        return memo[y].push(x);\n      });\n      return (function() {\n        var results;\n        results = [];\n        for (k in memo) {\n          v = memo[k];\n          results.push(v);\n        }\n        return results;\n      })();\n    };\n  };\n  partition = function(f) {\n    return function(xs) {\n      var memo;\n      memo = [[], []];\n      foreach(xs, function(x) {\n        var y;\n        y = !f(x) + 0;\n        return memo[y].push(x);\n      });\n      return memo;\n    };\n  };\n  concat = function(xss) {\n    return LazyList(function() {\n      var iter, xs, xs_iter;\n      xs_iter = lazy(xss)[Symbol.iterator]();\n      xs = xs_iter();\n      iter = lazy(xs)[Symbol.iterator]();\n      return Iterator(function() {\n        var x;\n        if ((x = iter()) !== nil) {\n          return x;\n        } else if ((xs = xs_iter()) !== nil) {\n          iter = lazy(xs)[Symbol.iterator]();\n          return iter();\n        } else {\n          return nil;\n        }\n      });\n    });\n  };\n  ref = (function() {\n    var finished, zip, zipWith;\n    finished = function(arr) {\n      var j, len1, x;\n      for (j = 0, len1 = arr.length; j < len1; j++) {\n        x = arr[j];\n        if (x === nil) {\n          return true;\n        }\n      }\n      return false;\n    };\n    zip = function() {\n      var xss;\n      xss = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      return LazyList(function() {\n        var iters, xs;\n        iters = (function() {\n          var j, len1, results;\n          results = [];\n          for (j = 0, len1 = xss.length; j < len1; j++) {\n            xs = xss[j];\n            results.push(lazy(xs)[Symbol.iterator]());\n          }\n          return results;\n        })();\n        return Iterator(function() {\n          var iter, next;\n          next = (function() {\n            var j, len1, results;\n            results = [];\n            for (j = 0, len1 = iters.length; j < len1; j++) {\n              iter = iters[j];\n              results.push(iter());\n            }\n            return results;\n          })();\n          if (finished(next)) {\n            return nil;\n          } else {\n            return next;\n          }\n        });\n      });\n    };\n    zipWith = function(f) {\n      return function() {\n        var xss;\n        xss = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        return LazyList(function() {\n          var iters, xs;\n          iters = (function() {\n            var j, len1, results;\n            results = [];\n            for (j = 0, len1 = xss.length; j < len1; j++) {\n              xs = xss[j];\n              results.push(lazy(xs)[Symbol.iterator]());\n            }\n            return results;\n          })();\n          return Iterator(function() {\n            var iter, next;\n            next = (function() {\n              var j, len1, results;\n              results = [];\n              for (j = 0, len1 = iters.length; j < len1; j++) {\n                iter = iters[j];\n                results.push(iter());\n              }\n              return results;\n            })();\n            if (finished(next)) {\n              return nil;\n            } else {\n              return f.apply(null, next);\n            }\n          });\n        });\n      };\n    };\n    return {\n      zip: zip,\n      zipWith: zipWith\n    };\n  })(), zip = ref.zip, zipWith = ref.zipWith;\n  cartProd = (function() {\n    var apply_vector, inc_vector;\n    inc_vector = function(limits) {\n      var len_minus_1;\n      len_minus_1 = limits.length - 1;\n      return function(vec) {\n        var i;\n        i = len_minus_1;\n        while (!(++vec[i] < limits[i] || i <= 0)) {\n          vec[i--] = 0;\n        }\n        return vec;\n      };\n    };\n    apply_vector = function(space) {\n      var len;\n      len = space.length;\n      return function(vec) {\n        var i, j, ref1, results;\n        results = [];\n        for (i = j = 0, ref1 = len; 0 <= ref1 ? j < ref1 : j > ref1; i = 0 <= ref1 ? ++j : --j) {\n          results.push(space[i][vec[i]]);\n        }\n        return results;\n      };\n    };\n    return function() {\n      var xss;\n      xss = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      return LazyList(function() {\n        var get_value, i, inc, j, len, len1, limits, v, xs;\n        xss = (function() {\n          var j, len1, results;\n          results = [];\n          for (j = 0, len1 = xss.length; j < len1; j++) {\n            xs = xss[j];\n            results.push(list(xs));\n          }\n          return results;\n        })();\n        limits = (function() {\n          var j, ref1, results;\n          results = [];\n          for (i = j = 0, ref1 = xss.length; 0 <= ref1 ? j < ref1 : j > ref1; i = 0 <= ref1 ? ++j : --j) {\n            results.push(xss[i].length);\n          }\n          return results;\n        })();\n        for (j = 0, len1 = limits.length; j < len1; j++) {\n          len = limits[j];\n          if (len === 0) {\n            return nil;\n          }\n        }\n        inc = inc_vector(limits);\n        get_value = apply_vector(xss);\n        v = (function() {\n          var o, ref1, results;\n          results = [];\n          for (i = o = 0, ref1 = xss.length; 0 <= ref1 ? o < ref1 : o > ref1; i = 0 <= ref1 ? ++o : --o) {\n            results.push(0);\n          }\n          return results;\n        })();\n        return Iterator(function() {\n          var r;\n          if (v[0] < limits[0]) {\n            r = get_value(v);\n            inc(v);\n            return r;\n          } else {\n            return nil;\n          }\n        });\n      });\n    };\n  })();\n  list = function(xs) {\n    var it, n, results, results1, x;\n    if (xs instanceof Array) {\n      return xs;\n    } else if (typeof xs === 'function') {\n      it = xs[Symbol.iterator]();\n      results = [];\n      while ((x = it()) !== nil) {\n        results.push(x);\n      }\n      return results;\n    } else if (xs[Symbol.iterator] != null) {\n      it = lazy(xs)[Symbol.iterator]();\n      results1 = [];\n      while ((x = it()) !== nil) {\n        results1.push(x);\n      }\n      return results1;\n    } else if (typeof xs === 'number') {\n      n = xs;\n      return function(xs) {\n        return list(take(n)(xs));\n      };\n    } else {\n      throw Error('list(xs): xs is neither Array nor Iterable');\n    }\n  };\n  head = function(xs) {\n    var iter, ref1, ref2;\n    if ((ref1 = xs.constructor) === Array || ref1 === String) {\n      return (ref2 = xs[0]) != null ? ref2 : nil;\n    } else {\n      iter = lazy(xs)[Symbol.iterator]();\n      return iter();\n    }\n  };\n  last = function(xs) {\n    var iter, r, ref1, ref2, x;\n    if ((ref1 = xs.constructor) === Array || ref1 === String) {\n      return (ref2 = xs[xs.length - 1]) != null ? ref2 : nil;\n    } else {\n      iter = lazy(xs)[Symbol.iterator]();\n      r = nil;\n      while ((x = iter()) !== nil) {\n        r = x;\n      }\n      return r;\n    }\n  };\n  length = function(xs) {\n    var iter, r, ref1, x;\n    if ((ref1 = xs.constructor) === Array || ref1 === String) {\n      return xs.length;\n    } else {\n      iter = lazy(xs)[Symbol.iterator]();\n      r = 0;\n      while ((x = iter()) !== nil) {\n        ++r;\n      }\n      return r;\n    }\n  };\n  foldl = function(f, init) {\n    return function(xs) {\n      var iter, r, x;\n      r = init;\n      iter = lazy(xs)[Symbol.iterator]();\n      while ((x = iter()) !== nil) {\n        r = f(r, x);\n      }\n      return r;\n    };\n  };\n  best = function(better) {\n    return function(xs) {\n      var it, iter, r;\n      iter = lazy(xs)[Symbol.iterator]();\n      if ((r = iter()) === nil) {\n        return null;\n      }\n      while ((it = iter()) !== nil) {\n        r = better(it, r) ? it : r;\n      }\n      return r;\n    };\n  };\n  all = function(f) {\n    if (typeof f !== 'function') {\n      f = (function(x) {\n        return x === f;\n      });\n    }\n    return function(xs) {\n      var iter, x;\n      iter = lazy(xs)[Symbol.iterator]();\n      while ((x = iter()) !== nil) {\n        if (!f(x)) {\n          return false;\n        }\n      }\n      return true;\n    };\n  };\n  any = function(f) {\n    var all_not;\n    all_not = all(function(x) {\n      return !f(x);\n    });\n    return function(xs) {\n      return !(all_not(xs));\n    };\n  };\n  brk = function() {\n    return brk;\n  };\n  brk.toString = function() {\n    return 'foreach.break';\n  };\n  foreach = function(xs, callback, fruit) {\n    var iter, x;\n    iter = lazy(xs)[Symbol.iterator]();\n    while ((x = iter()) !== nil) {\n      if (callback(x, fruit) === brk) {\n        break;\n      }\n    }\n    return fruit;\n  };\n  Object.defineProperties(foreach, {\n    \"break\": {\n      writable: false,\n      configurable: false,\n      enumerable: false,\n      value: brk\n    }\n  });\n  return {\n    nil: nil,\n    LazyList: LazyList,\n    Iterator: Iterator,\n    Symbol: Symbol,\n    naturals: naturals,\n    range: range,\n    primes: primes,\n    lazy: lazy,\n    enumerate: enumerate,\n    repeat: repeat,\n    iterate: iterate,\n    randoms: randoms,\n    permutations: permutations,\n    cons: cons,\n    map: map,\n    filter: filter,\n    take: take,\n    takeWhile: takeWhile,\n    drop: drop,\n    dropWhile: dropWhile,\n    scanl: scanl,\n    streak: streak,\n    reverse: reverse,\n    sort: sort,\n    sortOn: sortOn,\n    group: group,\n    groupBy: groupBy,\n    groupOn: groupOn,\n    partition: partition,\n    concat: concat,\n    zip: zip,\n    zipWith: zipWith,\n    cartProd: cartProd,\n    list: list,\n    head: head,\n    last: last,\n    length: length,\n    foldl: foldl,\n    best: best,\n    all: all,\n    any: any,\n    foreach: foreach\n  };\n};\n\nmodule.exports = this_module({\n  Symbol: typeof Symbol !== \"undefined\" && Symbol !== null ? Symbol : {\n    iterator: 'iter'\n  }\n});\n\n\n},{}]},{},[1])(1)\n});\n\n\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],4:[function(require,module,exports){\nvar this_module,\n  slice = [].slice;\n\nthis_module = function(arg) {\n  var abs, accept_multi_or_array, best, ceil, combine, curry2, curry3, equal, flip, floor, greaterEqual, greaterThan, lessEqual, lessThan, max, max_index, min, min_index, minus, notEqual, pack, pluck, plus, precise, seek, sum, uncurry2, uncurry3, unpack;\n  best = arg.best;\n  flip = function(f) {\n    return function(x) {\n      return function(y) {\n        return f(y)(x);\n      };\n    };\n  };\n  combine = function(f) {\n    return function(g) {\n      return function(x) {\n        return f(g(x));\n      };\n    };\n  };\n  curry2 = function(f) {\n    return function(a) {\n      return function(b) {\n        return f(a, b);\n      };\n    };\n  };\n  curry3 = function(f) {\n    return function(a) {\n      return function(b) {\n        return function(c) {\n          return f(a, b, c);\n        };\n      };\n    };\n  };\n  uncurry2 = function(f) {\n    return function(a, b) {\n      return f(a)(b);\n    };\n  };\n  uncurry3 = function(f) {\n    return function(a, b, c) {\n      return f(a)(b)(c);\n    };\n  };\n  pack = function(f) {\n    return function(arr) {\n      return f.apply(null, arr);\n    };\n  };\n  unpack = function(f) {\n    return function() {\n      var arr;\n      arr = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      return f(arr);\n    };\n  };\n  seek = function(arr) {\n    return function(i) {\n      return arr[i];\n    };\n  };\n  pluck = function(attr) {\n    return function(d) {\n      return d[attr];\n    };\n  };\n  equal = function(it) {\n    return function(x) {\n      return x === it;\n    };\n  };\n  notEqual = function(it) {\n    return function(x) {\n      return x !== it;\n    };\n  };\n  lessThan = function(it) {\n    return function(x) {\n      return x < it;\n    };\n  };\n  greaterThan = function(it) {\n    return function(x) {\n      return x > it;\n    };\n  };\n  lessEqual = function(it) {\n    return function(x) {\n      return x <= it;\n    };\n  };\n  greaterEqual = function(it) {\n    return function(x) {\n      return x >= it;\n    };\n  };\n  plus = function(it) {\n    return function(x) {\n      return x + it;\n    };\n  };\n  minus = function(it) {\n    return function(x) {\n      return x - it;\n    };\n  };\n  abs = Math.abs;\n  floor = Math.floor;\n  ceil = Math.ceil;\n  precise = function(n) {\n    return function(x) {\n      return parseFloat(x.toPrecision(n));\n    };\n  };\n  accept_multi_or_array = function(f) {\n    return function() {\n      var arr;\n      arr = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      return f(arr.length === 1 && arr.first instanceof Array ? arr.first : arr);\n    };\n  };\n  sum = accept_multi_or_array(function(arr) {\n    var k, len, r, x;\n    if (arr.length === 1 && arr.first instanceof Array) {\n      arr = arr.first;\n    }\n    r = 0;\n    for (k = 0, len = arr.length; k < len; k++) {\n      x = arr[k];\n      r += x;\n    }\n    return r;\n  });\n  max = accept_multi_or_array(function(arr) {\n    return best(function(a, b) {\n      return a > b;\n    })(arr);\n  });\n  min = accept_multi_or_array(function(arr) {\n    return best(function(a, b) {\n      return a < b;\n    })(arr);\n  });\n  max_index = accept_multi_or_array(function(arr) {\n    var k, ref, results;\n    return best(function(i, j) {\n      return arr[i] > arr[j];\n    })((function() {\n      results = [];\n      for (var k = 0, ref = arr.length; 0 <= ref ? k < ref : k > ref; 0 <= ref ? k++ : k--){ results.push(k); }\n      return results;\n    }).apply(this));\n  });\n  min_index = accept_multi_or_array(function(arr) {\n    var k, ref, results;\n    return best(function(i, j) {\n      return arr[i] < arr[j];\n    })((function() {\n      results = [];\n      for (var k = 0, ref = arr.length; 0 <= ref ? k < ref : k > ref; 0 <= ref ? k++ : k--){ results.push(k); }\n      return results;\n    }).apply(this));\n  });\n  return {\n    flip: flip,\n    combine: combine,\n    curry2: curry2,\n    curry3: curry3,\n    uncurry2: uncurry2,\n    uncurry3: uncurry3,\n    pack: pack,\n    unpack: unpack,\n    seek: seek,\n    pluck: pluck,\n    equal: equal,\n    notEqual: notEqual,\n    lessThan: lessThan,\n    lessEqual: lessEqual,\n    greaterThan: greaterThan,\n    greaterEqual: greaterEqual,\n    plus: plus,\n    minus: minus,\n    abs: abs,\n    floor: floor,\n    ceil: ceil,\n    precise: precise,\n    sum: sum,\n    max: max,\n    min: min,\n    max_index: max_index,\n    min_index: min_index\n  };\n};\n\nmodule.exports = this_module({\n  best: require('lazy.coffee').best\n});\n\n\n},{\"lazy.coffee\":3}],5:[function(require,module,exports){\nvar basics, convertors, funny, lazy, url_helpers, utils;\n\nutils = require('./utils');\n\nbasics = require('./basics');\n\nlazy = require('lazy.coffee');\n\nfunny = require('./funny');\n\nconvertors = require('./convertors');\n\nurl_helpers = require('./url-helpers');\n\nmodule.exports = utils.extend({})(utils, basics, lazy, funny, convertors, url_helpers);\n\n\n},{\"./basics\":4,\"./convertors\":6,\"./funny\":7,\"./url-helpers\":8,\"./utils\":9,\"lazy.coffee\":3}],6:[function(require,module,exports){\nvar this_module;\n\nthis_module = function() {\n  var bool, chr, float, hex, int, json, obj, ord, str;\n  int = function(s, base) {\n    var r;\n    if (typeof s === 'string') {\n      r = parseInt(s, base);\n      if (!((s.slice != null) && r === parseInt(s.slice(0, -1), base))) {\n        return r;\n      } else {\n        return null;\n      }\n    } else {\n      return parseInt(0 + s);\n    }\n  };\n  float = function(s) {\n    if (/^-?[0-9]*(\\.[0-9]+)?([eE]-?[0-9]+)?$/.test(s)) {\n      return parseFloat(s);\n    } else {\n      return null;\n    }\n  };\n  str = function(x, base) {\n    return x.toString(base);\n  };\n  bool = function(x) {\n    if (x === true || x === false) {\n      return x;\n    } else {\n      return null;\n    }\n  };\n  hex = function(x) {\n    return x.toString(16);\n  };\n  ord = function(c) {\n    return c.charCodeAt();\n  };\n  chr = function(x) {\n    return String.fromCharCode(x);\n  };\n  json = function(it, indent) {\n    return JSON.stringify(it, null, indent);\n  };\n  obj = function(s) {\n    return JSON.parse(s);\n  };\n  return {\n    int: int,\n    float: float,\n    bool: bool,\n    str: str,\n    hex: hex,\n    ord: ord,\n    chr: chr,\n    json: json,\n    obj: obj\n  };\n};\n\nmodule.exports = this_module();\n\n\n},{}],7:[function(require,module,exports){\nvar this_module,\n  slice = [].slice;\n\nthis_module = function() {\n  var Y, church, fix, memoFix, memoize;\n  church = function(n) {\n    var iter;\n    iter = function(f, n, r) {\n      if (n === 0) {\n        return r;\n      } else {\n        return iter(f, n - 1, f(r));\n      }\n    };\n    return function(f) {\n      return function(x) {\n        return iter(f, n + 0, x);\n      };\n    };\n  };\n  Y = function(f) {\n    return (function(x) {\n      return x(x);\n    })((function(x) {\n      return f((function(y) {\n        return (x(x))(y);\n      }));\n    }));\n  };\n  memoize = function(f, get_key) {\n    var cache;\n    if (get_key == null) {\n      get_key = (function() {\n        var args;\n        args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        return json(args);\n      });\n    }\n    cache = {};\n    return function() {\n      var args, cached, key, r;\n      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      key = get_key.apply(null, args);\n      cached = cache[key];\n      if (cached != null) {\n        return cached;\n      } else {\n        r = f.apply(null, args);\n        cache[key] = r;\n        return r;\n      }\n    };\n  };\n  fix = Y;\n  memoFix = function(ff) {\n    var f;\n    f = memoize(ff((function() {\n      var args;\n      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      return f.apply(null, args);\n    })));\n    return f;\n  };\n  return {\n    church: church,\n    Y: Y,\n    memoize: memoize,\n    fix: fix,\n    memoFix: memoFix\n  };\n};\n\nmodule.exports = this_module();\n\n\n},{}],8:[function(require,module,exports){\nvar this_module;\n\nthis_module = function() {\n  var uri_decoder, uri_encoder;\n  uri_encoder = function(component_packer) {\n    if (component_packer == null) {\n      component_packer = str;\n    }\n    return function(obj) {\n      var k, v;\n      return ((function() {\n        var results;\n        results = [];\n        for (k in obj) {\n          v = obj[k];\n          results.push((encodeURIComponent(k)) + \"=\" + (encodeURIComponent(component_packer(v))));\n        }\n        return results;\n      })()).join('&');\n    };\n  };\n  uri_decoder = function(component_unpacker) {\n    if (component_unpacker == null) {\n      component_unpacker = (function(s) {\n        return s;\n      });\n    }\n    return function(str) {\n      var d, i, j, k, len, ref, ref1, ref2, s, v;\n      d = {};\n      ref1 = (ref = str.match(/[^?=&]+=[^&]*/g)) != null ? ref : [];\n      for (i = 0, len = ref1.length; i < len; i++) {\n        s = ref1[i];\n        ref2 = s.match(/([^=]+)=(.*)/), j = ref2.length - 2, k = ref2[j++], v = ref2[j++];\n        d[decodeURIComponent(k)] = component_unpacker(decodeURIComponent(v));\n      }\n      return d;\n    };\n  };\n  return {\n    uri_encoder: uri_encoder,\n    uri_decoder: uri_decoder\n  };\n};\n\nmodule.exports = this_module();\n\n\n},{}],9:[function(require,module,exports){\n(function (process){\nvar this_module,\n  slice = [].slice;\n\nthis_module = function() {\n  var assert, assertEq, assertEqOn, copy, deepcopy, dict, extend, function_literal, log, overload, ref, securely, time_now, update;\n  function_literal = function(f) {\n    var expr;\n    expr = f.toString().replace(/^\\s*function\\s?\\(\\s?\\)\\s?{\\s*return\\s*([^]*?);?\\s*}$/, '$1');\n    if (expr.length <= 100) {\n      expr = expr.replace(/[\\r\\n]{1,2}\\s*/g, '');\n    }\n    return expr;\n  };\n  time_now = function() {\n    return (new Date).getTime();\n  };\n  log = (function() {\n    var dye, factory, got, histories, log_label;\n    dye = (function() {\n      var cavailable, palette;\n      cavailable = (typeof window === \"undefined\" || window === null) && (typeof process !== \"undefined\" && process !== null) && !process.env.NODE_DISABLE_COLORS;\n      palette = {\n        bold: '\\x1B[0;1m',\n        red: '\\x1B[0;31m',\n        green: '\\x1B[0;32m',\n        yellow: '\\x1B[0;33m',\n        blue: '\\x1B[0;34m',\n        bold_grey: '\\x1B[1;30m'\n      };\n      if (!cavailable) {\n        return function(color) {\n          return function(s) {\n            return s;\n          };\n        };\n      } else {\n        return function(color) {\n          return function(s) {\n            return \"\" + palette[color] + s + '\\x1B[0m';\n          };\n        };\n      }\n    })();\n    log_label = (function() {\n      var flag_palette, op_flag;\n      flag_palette = {\n        '#': 'bold_grey',\n        'I': 'green',\n        'E': 'red',\n        'W': 'yellow'\n      };\n      op_flag = function(op) {\n        if (op === 'log') {\n          return '#';\n        } else {\n          return op[0].toUpperCase();\n        }\n      };\n      return function(op) {\n        var flag;\n        flag = op_flag(op);\n        return dye(flag_palette[flag])(flag);\n      };\n    })();\n    histories = [];\n    factory = function(op) {\n      var prefix;\n      prefix = \"\" + (dye('bold_grey')('#')) + (log_label(op));\n      return function() {\n        var args, ball, eval_result, expr, f, i, len, start_time, time_used;\n        args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        ball = [];\n        for (i = 0, len = args.length; i < len; i++) {\n          f = args[i];\n          if (typeof f === 'function') {\n            expr = function_literal(f);\n            start_time = time_now();\n            eval_result = f();\n            time_used = time_now() - start_time;\n            ball.push(prefix + \" \" + (dye('green')(expr)) + \" \" + (dye('bold_grey')('==>')), eval_result);\n            if (time_used > 0) {\n              ball.push(dye('yellow')(\"[\" + time_used + \"ms]\"));\n            }\n          } else {\n            ball.push(\"\" + prefix, f);\n          }\n        }\n        console[op].apply(console, ball);\n        histories.push(ball);\n        if (histories.length >= 10) {\n          histories.shift();\n        }\n        return null;\n      };\n    };\n    got = factory('log');\n    got.histories = histories;\n    got.info = factory('info');\n    got.warn = factory('warn');\n    got.error = got.err = factory('error');\n    return got;\n  })();\n  assert = function(f, msg) {\n    var e, r, ref;\n    if (!(f instanceof Function)) {\n      ref = [msg, f], f = ref[0], msg = ref[1];\n    }\n    try {\n      r = f();\n    } catch (_error) {\n      e = _error;\n      throw Error(\"Assertion \" + (msg != null ? msg : function_literal(f)) + \" Unknown:\\n\" + e);\n    }\n    if (!r) {\n      throw Error(\"Assertion \" + (msg != null ? msg : function_literal(f)) + \" Failed!\");\n    }\n  };\n  assertEq = function(l, r) {\n    var e, lv, rv;\n    try {\n      lv = l();\n      rv = r();\n    } catch (_error) {\n      e = _error;\n      throw Error(\"Equation Between \" + (function_literal(l)) + \" And \" + (function_literal(r)) + \" Unknown:\\n\" + e);\n    }\n    if (lv !== rv) {\n      throw Error(\"Equation Failed:\\n\\t\" + (function_literal(l)) + \" IS \" + lv + \" BUT\\n\\t\" + (function_literal(r)) + \" IS \" + rv + \".\");\n    }\n  };\n  assertEqOn = function(f) {\n    return function(l, r) {\n      var e, flv, frv, lv, rv;\n      try {\n        lv = l();\n        rv = r();\n        flv = f(lv);\n        frv = f(rv);\n      } catch (_error) {\n        e = _error;\n        throw Error(\"MAPPED Equation Between \" + (function_literal(l)) + \" And \" + (function_literal(r)) + \" Unknown:\\n\" + e);\n      }\n      if (flv !== frv) {\n        throw Error(\"Equation Failed:\\n\\t\" + (function_literal(l)) + \" IS \" + lv + \" AND MAPPED TO \" + flv + \" BUT\\n\\t\" + (function_literal(r)) + \" IS \" + rv + \" AND MAPPED TO \" + frv + \".\");\n      }\n    };\n  };\n  securely = function(f) {\n    return function() {\n      var args;\n      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      args = deepcopy(args);\n      return f.apply(null, args);\n    };\n  };\n  dict = function(pairs) {\n    var d, i, k, len, ref, v;\n    d = {};\n    for (i = 0, len = pairs.length; i < len; i++) {\n      ref = pairs[i], k = ref[0], v = ref[1];\n      d[k] = v;\n    }\n    return d;\n  };\n  ref = (function() {\n    var cp;\n    cp = function(root, dep) {\n      var k, r, v;\n      if (dep === 0 || (root == null) || typeof root !== 'object') {\n        return root;\n      }\n      if (root instanceof Array) {\n        r = (function() {\n          var i, len, results;\n          results = [];\n          for (i = 0, len = root.length; i < len; i++) {\n            v = root[i];\n            results.push(cp(v, dep - 1));\n          }\n          return results;\n        })();\n      } else {\n        r = {};\n        for (k in root) {\n          v = root[k];\n          r[k] = cp(v, dep - 1);\n        }\n      }\n      return r;\n    };\n    return {\n      copy: function(obj, depth) {\n        if (depth == null) {\n          depth = 1;\n        }\n        return cp(obj, depth);\n      },\n      deepcopy: function(obj, depth) {\n        if (depth == null) {\n          depth = Infinity;\n        }\n        return cp(obj, depth);\n      }\n    };\n  })(), copy = ref.copy, deepcopy = ref.deepcopy;\n  extend = function(base) {\n    return function() {\n      var d, defaults, i, k, len, v;\n      defaults = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      for (i = 0, len = defaults.length; i < len; i++) {\n        d = defaults[i];\n        if (d != null) {\n          for (k in d) {\n            v = d[k];\n            if (base[k] == null) {\n              base[k] = v;\n            }\n          }\n        }\n      }\n      return base;\n    };\n  };\n  update = function(base) {\n    return function() {\n      var d, i, k, len, updates, v;\n      updates = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      for (i = 0, len = updates.length; i < len; i++) {\n        d = updates[i];\n        if (d != null) {\n          for (k in d) {\n            v = d[k];\n            base[k] = v;\n          }\n        }\n      }\n      return base;\n    };\n  };\n  overload = function(_d) {\n    var d, fallback;\n    d = copy(_d);\n    fallback = d['_'];\n    if (fallback != null) {\n      return function() {\n        var args, ref1;\n        args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        return ((ref1 = d[args.length]) != null ? ref1 : fallback).apply(null, args);\n      };\n    } else {\n      return function() {\n        var args, f;\n        args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        f = d[args.length];\n        if (f == null) {\n          throw Error(\"This Function Can't Accept \" + args.length + \" Args\");\n        } else {\n          return f.apply(null, args);\n        }\n      };\n    }\n  };\n  return {\n    log: log,\n    assert: assert,\n    assertEq: assertEq,\n    assertEqOn: assertEqOn,\n    dict: dict,\n    copy: copy,\n    deepcopy: deepcopy,\n    securely: securely,\n    extend: extend,\n    update: update,\n    overload: overload\n  };\n};\n\nmodule.exports = this_module();\n\n\n\n}).call(this,require('_process'))\n\n},{\"_process\":2}]},{},[1])(1)\n});\n\n\n//# sourceMappingURL=global.js.map","#require './reinforce'\nmate = require('./coffee-mate')\nglobal[k] = v for k, v of mate\n","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            currentQueue[queueIndex].run();\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (!draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.lazy = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nvar this_module,\n  slice = [].slice;\n\nthis_module = function(arg) {\n  var Iterator, LazyList, Symbol, all, any, best, brk, cartProd, concat, cons, drop, dropWhile, enumerate, filter, foldl, foreach, group, groupBy, groupOn, head, iterate, last, lazy, length, list, map, naturals, nil, partition, permutations, primes, randoms, range, ref, repeat, reverse, scanl, sort, sortOn, streak, take, takeWhile, zip, zipWith;\n  Symbol = arg.Symbol;\n  LazyList = function(f) {\n    f[Symbol.iterator] = function() {\n      return f();\n    };\n    f.toString = function() {\n      return \"LazyList\";\n    };\n    return f;\n  };\n  nil = LazyList(function() {\n    return nil;\n  });\n  nil.toString = function() {\n    return 'nil';\n  };\n  Iterator = function(it) {\n    it.next = function() {\n      var r;\n      r = it();\n      return {\n        value: r,\n        done: r === nil\n      };\n    };\n    it.toString = function() {\n      return \"Iterator\";\n    };\n    return it;\n  };\n  naturals = LazyList(function() {\n    var i;\n    i = -1;\n    return Iterator(function() {\n      return ++i;\n    });\n  });\n  range = function() {\n    var args;\n    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    if (args.length === 0) {\n      return naturals;\n    } else if (args.length === 1) {\n      return LazyList(function() {\n        var i, stop;\n        stop = args[0];\n        i = -1;\n        return Iterator(function() {\n          if (++i < stop) {\n            return i;\n          } else {\n            return nil;\n          }\n        });\n      });\n    } else if (args.length === 2) {\n      return LazyList(function() {\n        var i, start, stop;\n        start = args[0], stop = args[1];\n        if (start < stop) {\n          i = start - 1;\n          return Iterator(function() {\n            if (++i < stop) {\n              return i;\n            } else {\n              return nil;\n            }\n          });\n        } else {\n          i = start + 1;\n          return Iterator(function() {\n            if (--i > stop) {\n              return i;\n            } else {\n              return nil;\n            }\n          });\n        }\n      });\n    } else {\n      return LazyList(function() {\n        var i, start, step, stop;\n        start = args[0], stop = args[1], step = args[2];\n        if (stop !== start && (stop - start) * step < 0) {\n          throw 'ERR IN range(): YOU ARE CREATING AN UNLIMITTED RANGE';\n        }\n        i = start - step;\n        if (start < stop) {\n          return Iterator(function() {\n            if ((i += step) < stop) {\n              return i;\n            } else {\n              return nil;\n            }\n          });\n        } else {\n          return Iterator(function() {\n            if ((i += step) > stop) {\n              return i;\n            } else {\n              return nil;\n            }\n          });\n        }\n      });\n    }\n  };\n  primes = LazyList(function() {\n    return filter(function(x) {\n      return all(function(p) {\n        return x % p !== 0;\n      })(takeWhile(function(p) {\n        return p * p <= x;\n      })(range(2, Infinity)));\n    })(range(2, Infinity))();\n  });\n  lazy = function(xs) {\n    var ref;\n    if (typeof xs === 'function') {\n      if (xs[Symbol.iterator] != null) {\n        return xs;\n      } else {\n        return LazyList(xs);\n      }\n    } else if ((ref = xs.constructor) === Array || ref === String) {\n      return LazyList(function() {\n        var i;\n        i = -1;\n        return Iterator(function() {\n          if ((++i) < xs.length) {\n            return xs[i];\n          } else {\n            return nil;\n          }\n        });\n      });\n    } else if (xs[Symbol.iterator] != null) {\n      return LazyList(function() {\n        var it;\n        it = xs[Symbol.iterator]();\n        return Iterator(function() {\n          var r;\n          r = it.next();\n          if (r.done) {\n            return nil;\n          } else {\n            return r.value;\n          }\n        });\n      });\n    } else {\n      throw Error('lazy(xs): xs is neither Array nor Iterable');\n    }\n  };\n  enumerate = function(it) {\n    if ((it[Symbol.iterator] != null) || it instanceof Array) {\n      return zip(naturals, it);\n    } else {\n      return LazyList(function() {\n        var i, keys;\n        keys = Object.keys(it);\n        i = -1;\n        return Iterator(function() {\n          var k;\n          if (++i < keys.length) {\n            return [(k = keys[i]), it[k]];\n          } else {\n            return nil;\n          }\n        });\n      });\n    }\n  };\n  repeat = function(x) {\n    return LazyList(function() {\n      return Iterator(function() {\n        return x;\n      });\n    });\n  };\n  iterate = function(next, init) {\n    return LazyList(function() {\n      var st;\n      st = init;\n      return Iterator(function() {\n        var r;\n        r = st;\n        st = next(st);\n        return r;\n      });\n    });\n  };\n  randoms = (function() {\n    var hash, normal, salt;\n    salt = Math.PI / 3.0;\n    hash = function(x) {\n      x = Math.sin(x + salt) * 1e4;\n      return x - Math.floor(x);\n    };\n    normal = function(seed) {\n      return iterate(hash, hash(seed));\n    };\n    return function(opts) {\n      var k, ref, ref1, rg, s, seed;\n      if (opts == null) {\n        return normal(0);\n      } else if (typeof opts === 'number') {\n        return normal(opts);\n      } else {\n        seed = (ref = opts.seed) != null ? ref : 0;\n        rg = opts.range;\n        if (rg != null) {\n          if (typeof rg === 'number') {\n            return map(function(x) {\n              return Math.floor(x * rg);\n            })(normal(seed));\n          } else {\n            ref1 = [rg[0], rg[1] - rg[0] + 1], s = ref1[0], k = ref1[1];\n            return map(function(x) {\n              return s + Math.floor(x * k);\n            })(normal(seed));\n          }\n        } else {\n          return normal(seed);\n        }\n      }\n    };\n  })();\n  permutations = (function() {\n    var next_permutation;\n    next_permutation = function(x) {\n      var l, m, r, ref, ref1;\n      x = x.slice(0);\n      l = x.length - 1;\n      while (l >= 1 && x[l] <= x[l - 1]) {\n        --l;\n      }\n      if (l !== 0) {\n        m = x.length - 1;\n        while (m > l - 1 && x[m] <= x[l - 1]) {\n          --m;\n        }\n        ref = [x[l - 1], x[m]], x[m] = ref[0], x[l - 1] = ref[1];\n      }\n      r = x.length - 1;\n      while (l < r) {\n        ref1 = [x[r], x[l]], x[l] = ref1[0], x[r] = ref1[1];\n        ++l;\n        --r;\n      }\n      return x;\n    };\n    return function(xs) {\n      var arr;\n      arr = list(xs);\n      if (arr.length === 0) {\n        return nil;\n      } else {\n        return cons(arr.slice(0))(takeWhile(function(ls) {\n          return json(ls) !== json(arr);\n        })(drop(1)(iterate(next_permutation, arr))));\n      }\n    };\n  })();\n  take = function(n) {\n    return function(xs) {\n      return LazyList(function() {\n        var c, iter;\n        iter = lazy(xs)[Symbol.iterator]();\n        c = -1;\n        return Iterator(function() {\n          if (++c < n) {\n            return iter();\n          } else {\n            return nil;\n          }\n        });\n      });\n    };\n  };\n  takeWhile = function(ok) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter;\n        iter = lazy(xs)[Symbol.iterator]();\n        return Iterator(function() {\n          var x;\n          if ((x = iter()) !== nil && ok(x)) {\n            return x;\n          } else {\n            return nil;\n          }\n        });\n      });\n    };\n  };\n  drop = function(n) {\n    return function(xs) {\n      return LazyList(function() {\n        var finished, i, iter, j, ref;\n        iter = lazy(xs)[Symbol.iterator]();\n        finished = false;\n        for (i = j = 0, ref = n; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n          finished || (finished = iter() === nil);\n          if (finished) {\n            break;\n          }\n        }\n        if (finished) {\n          return function() {\n            return nil;\n          };\n        } else {\n          return iter;\n        }\n      });\n    };\n  };\n  dropWhile = function(ok) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter, x;\n        iter = lazy(xs)[Symbol.iterator]();\n        while (ok(x = iter()) && x !== nil) {\n          null;\n        }\n        return Iterator(function() {\n          var prevx, ref;\n          ref = [x, iter()], prevx = ref[0], x = ref[1];\n          return prevx;\n        });\n      });\n    };\n  };\n  cons = function(x) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter;\n        iter = null;\n        return Iterator(function() {\n          if (iter === null) {\n            iter = lazy(xs)[Symbol.iterator]();\n            return x;\n          } else {\n            return iter();\n          }\n        });\n      });\n    };\n  };\n  map = function(f) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter;\n        iter = lazy(xs)[Symbol.iterator]();\n        return Iterator(function() {\n          var x;\n          if ((x = iter()) !== nil) {\n            return f(x);\n          } else {\n            return nil;\n          }\n        });\n      });\n    };\n  };\n  filter = function(ok) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter;\n        iter = lazy(xs)[Symbol.iterator]();\n        return Iterator(function() {\n          var x;\n          while (!ok(x = iter()) && x !== nil) {\n            null;\n          }\n          return x;\n        });\n      });\n    };\n  };\n  scanl = function(f, r) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter;\n        iter = lazy(xs)[Symbol.iterator]();\n        return Iterator(function() {\n          var got, x;\n          got = r;\n          r = (x = iter()) !== nil ? f(r, x) : nil;\n          return got;\n        });\n      });\n    };\n  };\n  streak = function(n) {\n    if (n < 1) {\n      return nil;\n    } else {\n      return function(xs) {\n        return drop(n - 1)(LazyList(function() {\n          var buf, iter;\n          iter = lazy(xs)[Symbol.iterator]();\n          buf = [];\n          return Iterator(function() {\n            var x;\n            if ((x = iter()) === nil) {\n              return nil;\n            }\n            buf.push(x);\n            if (buf.length > n) {\n              buf.shift(1);\n            }\n            return buf.slice(0);\n          });\n        }));\n      };\n    }\n  };\n  reverse = function(xs) {\n    var ref;\n    if ((ref = xs.constructor) === Array || ref === String) {\n      return LazyList(function() {\n        var i;\n        i = xs.length;\n        return Iterator(function() {\n          if ((--i) >= 0) {\n            return xs[i];\n          } else {\n            return nil;\n          }\n        });\n      });\n    } else {\n      return list(lazy(xs)).reverse();\n    }\n  };\n  sort = function(xs) {\n    var arr;\n    arr = list(lazy(xs));\n    return arr.sort();\n  };\n  sortOn = function(f) {\n    return function(xs) {\n      var arr;\n      arr = list(lazy(xs));\n      return arr.sort(function(a, b) {\n        var fa, fb;\n        return ((fa = f(a)) > (fb = f(b))) - (fa < fb);\n      });\n    };\n  };\n  group = function(xs) {\n    return LazyList(function() {\n      var iter, t, x;\n      iter = lazy(xs)[Symbol.iterator]();\n      t = nil;\n      x = iter();\n      return Iterator(function() {\n        if (x === nil) {\n          return nil;\n        } else if (x !== t) {\n          t = x;\n          return LazyList(function() {\n            return Iterator(function() {\n              var r;\n              if ((r = x) === t) {\n                x = iter();\n                return r;\n              } else {\n                return nil;\n              }\n            });\n          });\n        }\n      });\n    });\n  };\n  groupBy = function(eq) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter, t, x;\n        iter = lazy(xs)[Symbol.iterator]();\n        t = nil;\n        x = iter();\n        return Iterator(function() {\n          if (x === nil) {\n            return nil;\n          } else if (!eq(x, t)) {\n            t = x;\n            return LazyList(function() {\n              return Iterator(function() {\n                var r;\n                if (eq((r = x), t)) {\n                  x = iter();\n                  return r;\n                } else {\n                  return nil;\n                }\n              });\n            });\n          }\n        });\n      });\n    };\n  };\n  groupOn = function(f) {\n    return function(xs) {\n      var k, memo, v;\n      memo = {};\n      foreach(xs, function(x) {\n        var y;\n        y = f(x);\n        if (memo[y] == null) {\n          memo[y] = [];\n        }\n        return memo[y].push(x);\n      });\n      return (function() {\n        var results;\n        results = [];\n        for (k in memo) {\n          v = memo[k];\n          results.push(v);\n        }\n        return results;\n      })();\n    };\n  };\n  partition = function(f) {\n    return function(xs) {\n      var memo;\n      memo = [[], []];\n      foreach(xs, function(x) {\n        var y;\n        y = !f(x) + 0;\n        return memo[y].push(x);\n      });\n      return memo;\n    };\n  };\n  concat = function(xss) {\n    return LazyList(function() {\n      var iter, xs, xs_iter;\n      xs_iter = lazy(xss)[Symbol.iterator]();\n      xs = xs_iter();\n      iter = lazy(xs)[Symbol.iterator]();\n      return Iterator(function() {\n        var x;\n        if ((x = iter()) !== nil) {\n          return x;\n        } else if ((xs = xs_iter()) !== nil) {\n          iter = lazy(xs)[Symbol.iterator]();\n          return iter();\n        } else {\n          return nil;\n        }\n      });\n    });\n  };\n  ref = (function() {\n    var finished, zip, zipWith;\n    finished = function(arr) {\n      var j, len1, x;\n      for (j = 0, len1 = arr.length; j < len1; j++) {\n        x = arr[j];\n        if (x === nil) {\n          return true;\n        }\n      }\n      return false;\n    };\n    zip = function() {\n      var xss;\n      xss = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      return LazyList(function() {\n        var iters, xs;\n        iters = (function() {\n          var j, len1, results;\n          results = [];\n          for (j = 0, len1 = xss.length; j < len1; j++) {\n            xs = xss[j];\n            results.push(lazy(xs)[Symbol.iterator]());\n          }\n          return results;\n        })();\n        return Iterator(function() {\n          var iter, next;\n          next = (function() {\n            var j, len1, results;\n            results = [];\n            for (j = 0, len1 = iters.length; j < len1; j++) {\n              iter = iters[j];\n              results.push(iter());\n            }\n            return results;\n          })();\n          if (finished(next)) {\n            return nil;\n          } else {\n            return next;\n          }\n        });\n      });\n    };\n    zipWith = function(f) {\n      return function() {\n        var xss;\n        xss = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        return LazyList(function() {\n          var iters, xs;\n          iters = (function() {\n            var j, len1, results;\n            results = [];\n            for (j = 0, len1 = xss.length; j < len1; j++) {\n              xs = xss[j];\n              results.push(lazy(xs)[Symbol.iterator]());\n            }\n            return results;\n          })();\n          return Iterator(function() {\n            var iter, next;\n            next = (function() {\n              var j, len1, results;\n              results = [];\n              for (j = 0, len1 = iters.length; j < len1; j++) {\n                iter = iters[j];\n                results.push(iter());\n              }\n              return results;\n            })();\n            if (finished(next)) {\n              return nil;\n            } else {\n              return f.apply(null, next);\n            }\n          });\n        });\n      };\n    };\n    return {\n      zip: zip,\n      zipWith: zipWith\n    };\n  })(), zip = ref.zip, zipWith = ref.zipWith;\n  cartProd = (function() {\n    var apply_vector, inc_vector;\n    inc_vector = function(limits) {\n      var len_minus_1;\n      len_minus_1 = limits.length - 1;\n      return function(vec) {\n        var i;\n        i = len_minus_1;\n        while (!(++vec[i] < limits[i] || i <= 0)) {\n          vec[i--] = 0;\n        }\n        return vec;\n      };\n    };\n    apply_vector = function(space) {\n      var len;\n      len = space.length;\n      return function(vec) {\n        var i, j, ref1, results;\n        results = [];\n        for (i = j = 0, ref1 = len; 0 <= ref1 ? j < ref1 : j > ref1; i = 0 <= ref1 ? ++j : --j) {\n          results.push(space[i][vec[i]]);\n        }\n        return results;\n      };\n    };\n    return function() {\n      var xss;\n      xss = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      return LazyList(function() {\n        var get_value, i, inc, j, len, len1, limits, v, xs;\n        xss = (function() {\n          var j, len1, results;\n          results = [];\n          for (j = 0, len1 = xss.length; j < len1; j++) {\n            xs = xss[j];\n            results.push(list(xs));\n          }\n          return results;\n        })();\n        limits = (function() {\n          var j, ref1, results;\n          results = [];\n          for (i = j = 0, ref1 = xss.length; 0 <= ref1 ? j < ref1 : j > ref1; i = 0 <= ref1 ? ++j : --j) {\n            results.push(xss[i].length);\n          }\n          return results;\n        })();\n        for (j = 0, len1 = limits.length; j < len1; j++) {\n          len = limits[j];\n          if (len === 0) {\n            return nil;\n          }\n        }\n        inc = inc_vector(limits);\n        get_value = apply_vector(xss);\n        v = (function() {\n          var o, ref1, results;\n          results = [];\n          for (i = o = 0, ref1 = xss.length; 0 <= ref1 ? o < ref1 : o > ref1; i = 0 <= ref1 ? ++o : --o) {\n            results.push(0);\n          }\n          return results;\n        })();\n        return Iterator(function() {\n          var r;\n          if (v[0] < limits[0]) {\n            r = get_value(v);\n            inc(v);\n            return r;\n          } else {\n            return nil;\n          }\n        });\n      });\n    };\n  })();\n  list = function(xs) {\n    var it, n, results, results1, x;\n    if (xs instanceof Array) {\n      return xs;\n    } else if (typeof xs === 'function') {\n      it = xs[Symbol.iterator]();\n      results = [];\n      while ((x = it()) !== nil) {\n        results.push(x);\n      }\n      return results;\n    } else if (xs[Symbol.iterator] != null) {\n      it = lazy(xs)[Symbol.iterator]();\n      results1 = [];\n      while ((x = it()) !== nil) {\n        results1.push(x);\n      }\n      return results1;\n    } else if (typeof xs === 'number') {\n      n = xs;\n      return function(xs) {\n        return list(take(n)(xs));\n      };\n    } else {\n      throw Error('list(xs): xs is neither Array nor Iterable');\n    }\n  };\n  head = function(xs) {\n    var iter, ref1, ref2;\n    if ((ref1 = xs.constructor) === Array || ref1 === String) {\n      return (ref2 = xs[0]) != null ? ref2 : nil;\n    } else {\n      iter = lazy(xs)[Symbol.iterator]();\n      return iter();\n    }\n  };\n  last = function(xs) {\n    var iter, r, ref1, ref2, x;\n    if ((ref1 = xs.constructor) === Array || ref1 === String) {\n      return (ref2 = xs[xs.length - 1]) != null ? ref2 : nil;\n    } else {\n      iter = lazy(xs)[Symbol.iterator]();\n      r = nil;\n      while ((x = iter()) !== nil) {\n        r = x;\n      }\n      return r;\n    }\n  };\n  length = function(xs) {\n    var iter, r, ref1, x;\n    if ((ref1 = xs.constructor) === Array || ref1 === String) {\n      return xs.length;\n    } else {\n      iter = lazy(xs)[Symbol.iterator]();\n      r = 0;\n      while ((x = iter()) !== nil) {\n        ++r;\n      }\n      return r;\n    }\n  };\n  foldl = function(f, init) {\n    return function(xs) {\n      var iter, r, x;\n      r = init;\n      iter = lazy(xs)[Symbol.iterator]();\n      while ((x = iter()) !== nil) {\n        r = f(r, x);\n      }\n      return r;\n    };\n  };\n  best = function(better) {\n    return function(xs) {\n      var it, iter, r;\n      iter = lazy(xs)[Symbol.iterator]();\n      if ((r = iter()) === nil) {\n        return null;\n      }\n      while ((it = iter()) !== nil) {\n        r = better(it, r) ? it : r;\n      }\n      return r;\n    };\n  };\n  all = function(f) {\n    if (typeof f !== 'function') {\n      f = (function(x) {\n        return x === f;\n      });\n    }\n    return function(xs) {\n      var iter, x;\n      iter = lazy(xs)[Symbol.iterator]();\n      while ((x = iter()) !== nil) {\n        if (!f(x)) {\n          return false;\n        }\n      }\n      return true;\n    };\n  };\n  any = function(f) {\n    var all_not;\n    all_not = all(function(x) {\n      return !f(x);\n    });\n    return function(xs) {\n      return !(all_not(xs));\n    };\n  };\n  brk = function() {\n    return brk;\n  };\n  brk.toString = function() {\n    return 'foreach.break';\n  };\n  foreach = function(xs, callback, fruit) {\n    var iter, x;\n    iter = lazy(xs)[Symbol.iterator]();\n    while ((x = iter()) !== nil) {\n      if (callback(x, fruit) === brk) {\n        break;\n      }\n    }\n    return fruit;\n  };\n  Object.defineProperties(foreach, {\n    \"break\": {\n      writable: false,\n      configurable: false,\n      enumerable: false,\n      value: brk\n    }\n  });\n  return {\n    nil: nil,\n    LazyList: LazyList,\n    Iterator: Iterator,\n    Symbol: Symbol,\n    naturals: naturals,\n    range: range,\n    primes: primes,\n    lazy: lazy,\n    enumerate: enumerate,\n    repeat: repeat,\n    iterate: iterate,\n    randoms: randoms,\n    permutations: permutations,\n    cons: cons,\n    map: map,\n    filter: filter,\n    take: take,\n    takeWhile: takeWhile,\n    drop: drop,\n    dropWhile: dropWhile,\n    scanl: scanl,\n    streak: streak,\n    reverse: reverse,\n    sort: sort,\n    sortOn: sortOn,\n    group: group,\n    groupBy: groupBy,\n    groupOn: groupOn,\n    partition: partition,\n    concat: concat,\n    zip: zip,\n    zipWith: zipWith,\n    cartProd: cartProd,\n    list: list,\n    head: head,\n    last: last,\n    length: length,\n    foldl: foldl,\n    best: best,\n    all: all,\n    any: any,\n    foreach: foreach\n  };\n};\n\nmodule.exports = this_module({\n  Symbol: typeof Symbol !== \"undefined\" && Symbol !== null ? Symbol : {\n    iterator: 'iter'\n  }\n});\n\n\n},{}]},{},[1])(1)\n});\n\n\n//# sourceMappingURL=lazy.js.map","this_module = ({best}) ->\n\t# transformers\n\tflip = (f) ->\n\t\t(x) -> (y) -> f(y)(x)\n\n\tcombine = (f) -> (g) ->\n\t\t(x) -> f g(x)\n\n\tcurry2 = (f) ->\n\t\t(a) -> (b) -> f(a, b)\n\n\tcurry3 = (f) ->\n\t\t(a) -> (b) -> (c) -> f(a, b, c)\n\n\tuncurry2 = (f) ->\n\t\t(a, b) -> f(a)(b)\n\n\tuncurry3 = (f) ->\n\t\t(a, b, c) -> f(a)(b)(c)\n\n\tpack = (f) ->\n\t\t(arr) -> f(arr...)\n\n\tunpack = (f) ->\n\t\t(arr...) -> f(arr)\n\n\t# seek & pluck in Array or Object\n\tseek = (arr) ->\n\t\t(i) -> arr[i]\n\n\tpluck = (attr) ->\n\t\t(d) -> d[attr]\n\n\t# compare\n\tequal = (it) ->\n\t\t(x) -> x == it\n\n\tnotEqual = (it) ->\n\t\t(x) -> x != it\n\n\tlessThan = (it) ->\n\t\t(x) -> x < it\n\n\tgreaterThan = (it) ->\n\t\t(x) -> x > it\n\n\tlessEqual = (it) ->\n\t\t(x) -> x <= it\n\n\tgreaterEqual = (it) ->\n\t\t(x) -> x >= it\n\n\t# math\n\tplus = (it) ->\n\t\t(x) -> x + it\n\n\tminus = (it) ->\n\t\t(x) -> x - it\n\n\tabs = Math.abs\n\tfloor = Math.floor\n\tceil = Math.ceil\n\n\tprecise = (n) ->\n\t\t(x) -> parseFloat x.toPrecision(n)\n\n\taccept_multi_or_array = (f) ->\n\t\t(arr...) ->\n\t\t\tf(if arr.length == 1 and arr.first instanceof Array then arr.first else arr)\n\n\tsum = accept_multi_or_array (arr) ->\n\t\tarr = arr.first if arr.length == 1 and arr.first instanceof Array\n\t\tr = 0\n\t\tr += x for x in arr\n\t\tr\n\n\tmax = accept_multi_or_array (arr) ->\n\t\tbest((a, b) -> a > b) arr\n\n\tmin = accept_multi_or_array (arr) ->\n\t\tbest((a, b) -> a < b) arr\n\n\tmax_index = accept_multi_or_array (arr) ->\n\t\tbest((i, j) -> arr[i] > arr[j]) [0...arr.length]\n\n\tmin_index = accept_multi_or_array (arr) ->\n\t\tbest((i, j) -> arr[i] < arr[j]) [0...arr.length]\n\n\treturn {\n\t\tflip, combine,\n\t\tcurry2, curry3, uncurry2, uncurry3, pack, unpack,\n\t\tseek, pluck,\n\t\tequal, notEqual, lessThan, lessEqual, greaterThan, greaterEqual,\n\t\tplus, minus, abs, floor, ceil, precise,\n\t\tsum, max, min, max_index, min_index,\n\t}\n\nmodule.exports = this_module\n\tbest: require('lazy.coffee').best\n\n","utils = require './utils'\nbasics = require './basics'\nlazy = require 'lazy.coffee'\nfunny = require './funny'\nconvertors = require './convertors'\nurl_helpers = require './url-helpers'\n\nmodule.exports = utils.extend({}) utils, basics, lazy, funny, convertors, url_helpers\n\n","this_module = () ->\n\tint = (s, base) -> if typeof(s) == 'string' then (r = parseInt(s, base); unless s.slice? and r == parseInt(s.slice(0,-1), base) then r else null) else parseInt(0 + s)\n\tfloat = (s) -> if /^-?[0-9]*(\\.[0-9]+)?([eE]-?[0-9]+)?$/.test(s) then parseFloat(s) else null\n\tstr = (x, base) -> x.toString(base)\n\tbool = (x) -> if x in [true, false] then x else null\n\thex = (x) -> x.toString(16)\n\tord = (c) -> c.charCodeAt()\n\tchr = (x) -> String.fromCharCode(x)\n\tjson = (it, indent) -> JSON.stringify(it, null, indent)\n\tobj = (s) -> JSON.parse(s)\n\n\treturn {\n\t\tint, float, bool, str, hex, ord, chr, json, obj,\n\t}\n\nmodule.exports = this_module()\n\n","this_module = () ->\n\tchurch = (n) -> #the nth church number\n\t\titer = (f, n, r) ->\n\t\t\tif n == 0 then r else iter(f, n - 1, f(r))\n\t\t(f) ->\n\t\t\t(x) -> iter(f, n + 0, x)\n\n\tY = (f) -> #the Y combinator\n\t\t((x) -> (x x)) ((x) -> (f ((y) -> ((x x) y))))\n\n\tmemoize = (f, get_key = ((args...) -> json(args))) ->\n\t\tcache = {}\n\t\t(args...) ->\n\t\t\tkey = get_key(args...)\n\t\t\tcached = cache[key]\n\t\t\tif cached?\n\t\t\t\tcached\n\t\t\telse\n\t\t\t\tr = f(args...)\n\t\t\t\tcache[key] = r\n\t\t\t\tr\n\n\tfix = Y\n\n\tmemoFix = (ff) ->\n\t\tf = memoize (ff ((args...) -> f(args...)))\n\t\treturn f\n\n\treturn {\n\t\tchurch, Y, memoize, fix, memoFix,\n\t}\n\nmodule.exports = this_module()\n\n","this_module = () ->\n\turi_encoder = (component_packer = str) ->\n\t\t(obj) ->\n\t\t\t(\"#{encodeURIComponent(k)}=#{encodeURIComponent component_packer v}\" for k, v of obj).join('&')\n\n\turi_decoder = (component_unpacker = ((s) -> s)) ->\n\t\t(str) ->\n\t\t\td = {}\n\t\t\tfor s in (str.match /[^?=&]+=[^&]*/g) ? []\n\t\t\t\t[..., k, v] = s.match /([^=]+)=(.*)/\n\t\t\t\td[decodeURIComponent(k)] = (component_unpacker decodeURIComponent v)\n\t\t\treturn d\n\n\treturn {\n\t\turi_encoder, uri_decoder,\n\t}\n\nmodule.exports = this_module()\n\n","this_module = () ->\n\tfunction_literal = (f) ->\n\t\texpr = f.toString().replace(/^\\s*function\\s?\\(\\s?\\)\\s?{\\s*return\\s*([^]*?);?\\s*}$/, '$1')\n\t\texpr = expr.replace(/[\\r\\n]{1,2}\\s*/g, '') if expr.length <= 100\n\t\treturn expr\n\n\ttime_now = ->\n\t\t(new Date).getTime()\n\n\tlog = do -> #log an expression with it's literal and time used\n\t\tdye = do ->\n\t\t\t# ANSI Terminal Colors.\n\t\t\tcavailable = (not window?) and process? and not process.env.NODE_DISABLE_COLORS\n\t\t\tpalette =\n\t\t\t\tbold: '\\x1B[0;1m'\n\t\t\t\tred: '\\x1B[0;31m'\n\t\t\t\tgreen: '\\x1B[0;32m'\n\t\t\t\tyellow: '\\x1B[0;33m'\n\t\t\t\tblue: '\\x1B[0;34m'\n\t\t\t\tbold_grey: '\\x1B[1;30m'\n\t\t\tif not cavailable\n\t\t\t\t(color) -> (s) -> s\n\t\t\telse\n\t\t\t\t(color) ->\n\t\t\t\t\t(s) -> \"#{palette[color]}#{s}#{'\\x1B[0m'}\"\n\n\t\tlog_label = do ->\n\t\t\tflag_palette =\n\t\t\t\t'#': 'bold_grey'\n\t\t\t\t'I': 'green'\n\t\t\t\t'E': 'red'\n\t\t\t\t'W': 'yellow'\n\t\t\top_flag = (op) ->\n\t\t\t\tif op == 'log' then '#' else op[0].toUpperCase()\n\t\t\t(op) ->\n\t\t\t\tflag = op_flag(op)\n\t\t\t\tdye(flag_palette[flag]) flag\n\n\t\thistories = []\n\t\tfactory = (op) ->\n\t\t\tprefix = \"#{dye('bold_grey') '#'}#{log_label op}\"\n\t\t\t(args...) ->\n\t\t\t\tball = []\n\t\t\t\tfor f in args\n\t\t\t\t\tif typeof f == 'function'\n\t\t\t\t\t\texpr = function_literal(f)\n\t\t\t\t\t\tstart_time = time_now()\n\t\t\t\t\t\teval_result = f()\n\t\t\t\t\t\ttime_used = time_now() - start_time\n\t\t\t\t\t\tball.push(\"#{prefix} #{dye('green') expr} #{dye('bold_grey') '==>'}\", eval_result)\n\t\t\t\t\t\tball.push(dye('yellow') \"[#{time_used}ms]\") if time_used > 0\n\t\t\t\t\telse\n\t\t\t\t\t\tball.push(\"#{prefix}\", f)\n\t\t\t\tconsole[op] ball...\n\t\t\t\thistories.push(ball)\n\t\t\t\thistories.shift() if histories.length >= 10\n\t\t\t\treturn null\n\t\tgot = factory('log')\n\t\tgot.histories = histories\n\t\tgot.info = factory('info')\n\t\tgot.warn = factory('warn')\n\t\tgot.error = got.err = factory('error')\n\t\treturn got\n\n\tassert = (f, msg) ->\n\t\t[f, msg] = [msg, f] if f not instanceof Function\n\t\ttry\n\t\t\tr = f()\n\t\tcatch e\n\t\t\tthrow Error \"Assertion #{msg ? function_literal(f)} Unknown:\\n#{e}\"\n\t\tif not r\n\t\t\tthrow Error \"Assertion #{msg ? function_literal(f)} Failed!\"\n\n\tassertEq = (l, r) ->\n\t\ttry\n\t\t\tlv = l()\n\t\t\trv = r()\n\t\tcatch e\n\t\t\tthrow Error \"Equation Between #{function_literal(l)} And #{function_literal(r)} Unknown:\\n#{e}\"\n\t\tif lv isnt rv\n\t\t\tthrow Error \"Equation Failed:\\n\\t#{function_literal(l)} IS #{lv} BUT\\n\\t#{function_literal(r)} IS #{rv}.\"\n\n\tassertEqOn = (f) -> (l, r) ->\n\t\ttry\n\t\t\tlv = l()\n\t\t\trv = r()\n\t\t\tflv = f(lv)\n\t\t\tfrv = f(rv)\n\t\tcatch e\n\t\t\tthrow Error \"MAPPED Equation Between #{function_literal(l)} And #{function_literal(r)} Unknown:\\n#{e}\"\n\t\tif flv isnt frv\n\t\t\tthrow Error \"Equation Failed:\\n\\t#{function_literal(l)} IS #{lv} AND MAPPED TO #{flv} BUT\\n\\t#{function_literal(r)} IS #{rv} AND MAPPED TO #{frv}.\"\n\n\tsecurely = (f) -> # ensure a function not to modify it's arguments\n\t\t(args...) ->\n\t\t\targs = deepcopy args\n\t\t\tf(args...)\n\n\tdict = (pairs) -> #for dict comprehensions\n\t\td = {}\n\t\td[k] = v for [k, v] in pairs\n\t\treturn d\n\n\t{copy, deepcopy} = do ->\n\t\tcp = (root, dep) ->\n\t\t\treturn root if dep == 0 or not root? or typeof(root) != 'object'\n\t\t\tif root instanceof Array\n\t\t\t\tr = (cp(v, dep-1) for v in root)\n\t\t\telse\n\t\t\t\tr = {}\n\t\t\t\tr[k] = cp(v, dep-1) for k, v of root\n\t\t\treturn r\n\t\tcopy: (obj, depth=1) -> cp(obj, depth)\n\t\tdeepcopy: (obj, depth=Infinity) -> cp(obj, depth)\n\n\textend = (base) -> (defaults...) -> #NOTE: modified inplace, use copy() to protect it.\n\t\tfor d in defaults when d?\n\t\t\tbase[k] ?= v for k, v of d #NOTE: null values will be replaced if a default value exists.\n\t\treturn base\n\n\tupdate = (base) -> (updates...) -> #NOTE: modified inplace, use copy() to protect it.\n\t\tfor d in updates when d?\n\t\t\tbase[k] = v for k, v of d\n\t\treturn base\n\n\toverload = (_d) ->\n\t\td = copy _d\n\t\tfallback = d['_']\n\t\tif fallback?\n\t\t\t(args...) ->\n\t\t\t\t(d[args.length] ? fallback) args...\n\t\telse\n\t\t\t(args...) ->\n\t\t\t\tf = d[args.length]\n\t\t\t\tif not f?\n\t\t\t\t\tthrow Error \"This Function Can't Accept #{args.length} Args\"\n\t\t\t\telse\n\t\t\t\t\treturn f args...\n\n\treturn {\n\t\tlog, assert, assertEq, assertEqOn, dict, copy, deepcopy, securely, extend, update, overload,\n\t}\n\nmodule.exports = this_module()\n\n"],"sourceRoot":"/source/"}