{"version":3,"sources":["/source/node_modules/browserify/node_modules/browser-pack/_prelude.js","global.js","/source/src/global.coffee","/source/node_modules/browserify/node_modules/process/browser.js","/source/node_modules/lazy.coffee/build/lazy.js","/source/src/basics.coffee","/source/src/coffee-mate.coffee","/source/src/convertors.coffee","/source/src/funny.coffee","/source/src/reinforce.coffee","/source/src/url-helpers.coffee","/source/src/utils.coffee"],"names":["f","exports","module","define","amd","g","window","global","self","this","__CoffeeMate","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"k","mate","v","./coffee-mate","./reinforce",2,"cleanUpNextTick","draining","currentQueue","queue","concat","queueIndex","drainQueue","timeout","setTimeout","len","run","clearTimeout","Item","fun","array","noop","process","nextTick","args","Array","arguments","push","prototype","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","name","cwd","chdir","dir","umask",3,"lazy","this_module","slice","arg","Iterator","LazyList","Symbol","all","any","best","brk","cartProd","cons","drop","dropWhile","enumerate","filter","foldl","foreach","group","groupBy","groupOn","head","iterate","last","list","map","naturals","nil","partition","permutations","primes","randoms","range","ref","repeat","reverse","scanl","sort","sortOn","streak","take","takeWhile","zip","zipWith","iterator","toString","it","next","value","done","stop","start","step","x","p","Infinity","xs","constructor","String","keys","Object","init","st","hash","normal","salt","Math","PI","sin","floor","seed","opts","ref1","next_permutation","m","arr","ls","json","c","iter","ok","finished","j","prevx","got","buf","shift","b","fa","fb","eq","memo","y","results","xss","xs_iter","len1","iters","apply_vector","inc_vector","limits","len_minus_1","vec","space","get_value","inc","results1","ref2","better","all_not","callback","fruit","defineProperties","break","writable","configurable","enumerable",4,"abs","accept_multi_or_array","ceil","combine","curry2","curry3","equal","flip","greaterEqual","greaterThan","lessEqual","lessThan","max","max_index","min","min_index","minus","notEqual","pack","pluck","plus","precise","seek","sum","uncurry2","uncurry3","unpack","attr","d","parseFloat","toPrecision","first","lazy.coffee",5,"basics","convertors","funny","url_helpers","utils","extend","./basics","./convertors","./funny","./url-helpers","./utils",6,"bool","chr","float","hex","int","obj","ord","str","base","parseInt","test","charCodeAt","fromCharCode","indent","JSON","stringify","parse",7,"Y","church","fix","memoFix","memoize","get_key","cache","cached","key","ff",8,"format","replace","pat","cut","start_pat","end_pat","search","substr","get","set","second","third","unique","splice","size","defaults","update","updates",9,"uri_decoder","uri_encoder","component_packer","encodeURIComponent","join","component_unpacker","match","decodeURIComponent",10,"assert","assertEq","assertEqOn","copy","deepcopy","dict","function_literal","log","overload","securely","time_now","expr","Date","getTime","dye","factory","histories","log_label","cavailable","palette","NODE_DISABLE_COLORS","bold","red","green","yellow","blue","bold_grey","color","flag_palette","op_flag","#","I","E","W","op","toUpperCase","flag","prefix","ball","eval_result","start_time","time_used","console","info","warn","error","err","msg","Function","_error","lv","rv","flv","frv","pairs","cp","root","dep","depth","_d","fallback","_process"],"mappings":"CAAA,SAAAA,GAAA,GAAA,gBAAAC,UAAA,mBAAAC,QAAAA,OAAAD,QAAAD,QAAA,IAAA,kBAAAG,SAAAA,OAAAC,IAAAD,UAAAH,OAAA,CAAA,GAAAK,EAAAA,GAAA,mBAAAC,QAAAA,OAAA,mBAAAC,QAAAA,OAAA,mBAAAC,MAAAA,KAAAC,KAAAJ,EAAAK,aAAAV,MAAA,WAAA,GAAAG,EAAA,OAAA,SAAAQ,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAhB,GAAA,GAAAqB,OAAA,uBAAAL,EAAA,IAAA,MAAAhB,GAAAsB,KAAA,mBAAAtB,EAAA,GAAAuB,GAAAV,EAAAG,IAAAf,WAAAW,GAAAI,GAAA,GAAAQ,KAAAD,EAAAtB,QAAA,SAAAU,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAY,EAAAA,EAAAtB,QAAAU,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAf,QAAA,IAAA,GAAAmB,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAW,OAAAT,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAW,GAAA,SAAAP,EAAAjB,EAAAD,ICCA,SAAWM,GCDX,GAAAoB,GAAAC,EAAAC,CAAAV,GAAQ,eAARS,EACOT,EAAQ,gBACf,KAAAQ,IAAAC,GDOEC,EAAID,EAAKD,GCPXpB,EAAOoB,GAAKE,IDaTL,KAAKf,KAAuB,mBAAXF,QAAyBA,OAAyB,mBAATC,MAAuBA,KAAyB,mBAAXF,QAAyBA,aAExHwB,gBAAgB,EAAEC,cAAc,IAAIC,GAAG,SAASb,EAAQjB,EAAOD,GETlE,QAAAgC,KACAC,GAAA,EACAC,EAAAV,OACAW,EAAAD,EAAAE,OAAAD,GAEAE,EAAA,GAEAF,EAAAX,QACAc,IAIA,QAAAA,KACA,IAAAL,EAAA,CAGA,GAAAM,GAAAC,WAAAR,EACAC,IAAA,CAGA,KADA,GAAAQ,GAAAN,EAAAX,OACAiB,GAAA,CAGA,IAFAP,EAAAC,EACAA,OACAE,EAAAI,GACAP,EAAAG,GAAAK,KAEAL,GAAA,GACAI,EAAAN,EAAAX,OAEAU,EAAA,KACAD,GAAA,EACAU,aAAAJ,IAiBA,QAAAK,GAAAC,EAAAC,GACAtC,KAAAqC,IAAAA,EACArC,KAAAsC,MAAAA,EAYA,QAAAC,MApEA,GAGAb,GAHAc,EAAA/C,EAAAD,WACAmC,KACAF,GAAA,EAEAI,EAAA,EAoCAW,GAAAC,SAAA,SAAAJ,GACA,GAAAK,GAAA,GAAAC,OAAAC,UAAA5B,OAAA,EACA,IAAA4B,UAAA5B,OAAA,EACA,IAAA,GAAAL,GAAA,EAAAA,EAAAiC,UAAA5B,OAAAL,IACA+B,EAAA/B,EAAA,GAAAiC,UAAAjC,EAGAgB,GAAAkB,KAAA,GAAAT,GAAAC,EAAAK,IACAjB,GACAO,WAAAF,EAAA,IASAM,EAAAU,UAAAZ,IAAA,WACAlC,KAAAqC,IAAAU,MAAA,KAAA/C,KAAAsC,QAEAE,EAAAQ,MAAA,UACAR,EAAAS,SAAA,EACAT,EAAAU,OACAV,EAAAW,QACAX,EAAAY,QAAA,GACAZ,EAAAa,YAIAb,EAAAc,GAAAf,EACAC,EAAAe,YAAAhB,EACAC,EAAAgB,KAAAjB,EACAC,EAAAiB,IAAAlB,EACAC,EAAAkB,eAAAnB,EACAC,EAAAmB,mBAAApB,EACAC,EAAAoB,KAAArB,EAEAC,EAAAqB,QAAA,SAAAC,GACA,KAAA,IAAAlD,OAAA,qCAIA4B,EAAAuB,IAAA,WAAA,MAAA,KACAvB,EAAAwB,MAAA,SAAAC,GACA,KAAA,IAAArD,OAAA,mCAEA4B,EAAA0B,MAAA,WAAA,MAAA,SFoBMC,GAAG,SAASzD,EAAQjB,EAAOD,IACjC,SAAWM,IG9GX,SAAAP,GAAA,GAAA,gBAAAC,IAAA,mBAAAC,GAAAA,EAAAD,QAAAD,QAAA,IAAA,kBAAAG,IAAAA,EAAAC,IAAAD,KAAAH,OAAA,CAAA,GAAAK,EAAAA,GAAA,mBAAAC,QAAAA,OAAA,mBAAAC,GAAAA,EAAA,mBAAAC,MAAAA,KAAAC,KAAAJ,EAAAwE,KAAA7E,MAAA,WAAA,MAAA,SAAAW,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,IAAAA,CAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAhB,GAAA,GAAAqB,OAAA,uBAAAL,EAAA,IAAA,MAAAhB,GAAAsB,KAAA,mBAAAtB,EAAA,GAAAuB,GAAAV,EAAAG,IAAAf,WAAAW,GAAAI,GAAA,GAAAQ,KAAAD,EAAAtB,QAAA,SAAAU,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAY,EAAAA,EAAAtB,QAAAU,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAf,QAAA,IAAA,GAAAmB,GAAA,kBAAAD,IAAAA,EAAAH,EAAA,EAAAA,EAAAF,EAAAW,OAAAT,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAW,GAAA,SAAAP,EAAAjB,EAAAD,GACA,GAAA6E,GACAC,KAAAA,KAEAD,GAAA,SAAAE,GACA,GAAAC,GAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAnD,EAAAoD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAxB,EAAApD,EAAA6E,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,CA41BA,OA31BAtC,GAAAH,EAAAG,OACAD,EAAA,SAAAlF,GAOA,MANAA,GAAAmF,EAAAuC,UAAA,WACA,MAAA1H,MAEAA,EAAA2H,SAAA,WACA,MAAA,YAEA3H,GAEAyG,EAAAvB,EAAA,WACA,MAAAuB,KAEAA,EAAAkB,SAAA,WACA,MAAA,OAEA1C,EAAA,SAAA2C,GAYA,MAXAA,GAAAC,KAAA,WACA,GAAA/G,EAEA,OADAA,GAAA8G,KAEAE,MAAAhH,EACAiH,KAAAjH,IAAA2F,IAGAmB,EAAAD,SAAA,WACA,MAAA,YAEAC,GAEApB,EAAAtB,EAAA,WACA,GAAA9D,EAEA,OADAA,GAAA,GACA6D,EAAA,WACA,QAAA7D,MAGA0F,EAAA,WACA,GAAA3D,EAEA,OADAA,GAAA,GAAAE,UAAA5B,OAAAsD,EAAAvD,KAAA6B,UAAA,MACA,IAAAF,EAAA1B,OACA+E,EAEAtB,EADA,IAAA/B,EAAA1B,OACA,WACA,GAAAL,GAAA4G,CAGA,OAFAA,GAAA7E,EAAA,GACA/B,EAAA,GACA6D,EAAA,WACA,QAAA7D,EAAA4G,EACA5G,EAEAqF,KAIA,IAAAtD,EAAA1B,OACA,WACA,GAAAL,GAAA6G,EAAAD,CAEA,OADAC,GAAA9E,EAAA,GAAA6E,EAAA7E,EAAA,GACA6E,EAAAC,GACA7G,EAAA6G,EAAA,EACAhD,EAAA,WACA,QAAA7D,EAAA4G,EACA5G,EAEAqF,MAIArF,EAAA6G,EAAA,EACAhD,EAAA,WACA,QAAA7D,EAAA4G,EACA5G,EAEAqF,MAMA,WACA,GAAArF,GAAA6G,EAAAC,EAAAF,CAEA,IADAC,EAAA9E,EAAA,GAAA6E,EAAA7E,EAAA,GAAA+E,EAAA/E,EAAA,GACA6E,IAAAC,GAAA,GAAAD,EAAAC,GAAAC,EACA,KAAA,sDAGA,OADA9G,GAAA6G,EAAAC,EAEAjD,EADA+C,EAAAC,EACA,WACA,OAAA7G,GAAA8G,GAAAF,EACA5G,EAEAqF,GAIA,WACA,OAAArF,GAAA8G,GAAAF,EACA5G,EAEAqF,OAOAG,EAAA1B,EAAA,WACA,MAAAW,GAAA,SAAAsC,GACA,MAAA/C,GAAA,SAAAgD,GACA,MAAAD,GAAAC,IAAA,IACAb,EAAA,SAAAa,GACA,MAAAD,IAAAC,EAAAA,IACAtB,EAAA,EAAAuB,EAAAA,OACAvB,EAAA,EAAAuB,EAAAA,QAEAxD,EAAA,SAAAyD,GACA,GAAAvB,EACA,IAAA,kBAAAuB,GACA,MAAA,OAAAA,EAAAnD,EAAAuC,UACAY,EAEApD,EAAAoD,EAEA,KAAAvB,EAAAuB,EAAAC,eAAAnF,OAAA2D,IAAAyB,OACA,MAAAtD,GAAA,WACA,GAAA9D,EAEA,OADAA,GAAA,GACA6D,EAAA,WACA,QAAA7D,EAAAkH,EAAA7G,OACA6G,EAAAlH,GAEAqF,KAIA,IAAA,MAAA6B,EAAAnD,EAAAuC,UACA,MAAAxC,GAAA,WACA,GAAA0C,EAEA,OADAA,GAAAU,EAAAnD,EAAAuC,YACAzC,EAAA,WACA,GAAAnE,EAEA,OADAA,GAAA8G,EAAAC,OACA/G,EAAAiH,KACAtB,EAEA3F,EAAAgH,SAKA,MAAAzG,OAAA,+CAGAuE,EAAA,SAAAgC,GACA,MAAA,OAAAA,EAAAzC,EAAAuC,WAAAE,YAAAxE,OACAoE,EAAAhB,EAAAoB,GAEA1C,EAAA,WACA,GAAA9D,GAAAqH,CAGA,OAFAA,GAAAC,OAAAD,KAAAb,GACAxG,EAAA,GACA6D,EAAA,WACA,GAAAtD,EACA,SAAAP,EAAAqH,EAAAhH,QACAE,EAAA8G,EAAArH,GAAAwG,EAAAjG,IAEA8E,OAMAO,EAAA,SAAAmB,GACA,MAAAjD,GAAA,WACA,MAAAD,GAAA,WACA,MAAAkD,QAIA/B,EAAA,SAAAyB,EAAAc,GACA,MAAAzD,GAAA,WACA,GAAA0D,EAEA,OADAA,GAAAD,EACA1D,EAAA,WACA,GAAAnE,EAGA,OAFAA,GAAA8H,EACAA,EAAAf,EAAAe,GACA9H,OAIA+F,EAAA,WACA,GAAAgC,GAAAC,EAAAC,CASA,OARAA,GAAAC,KAAAC,GAAA,EACAJ,EAAA,SAAAV,GAEA,MADAA,GAAA,IAAAa,KAAAE,IAAAf,EAAAY,GACAZ,EAAAa,KAAAG,MAAAhB,IAEAW,EAAA,SAAAM,GACA,MAAAhD,GAAAyC,EAAAA,EAAAO,KAEA,SAAAC,GACA,GAAA1H,GAAAoF,EAAAuC,EAAAvI,EAAAqI,CAIA,OAHA,OAAAC,IACAA,EAAA,GAEA,gBAAAA,GACAP,EAAAO,IAEAD,EAAA,OAAArC,EAAAsC,EAAAD,MAAArC,EAAA,EACAD,EAAAuC,EAAAvC,MACA,MAAAA,EACA,gBAAAA,GACAP,EAAA,SAAA4B,GACA,MAAAa,MAAAG,MAAAhB,EAAArB,KACAgC,EAAAM,KAEAE,GAAAxC,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAA,GAAA/F,EAAAuI,EAAA,GAAA3H,EAAA2H,EAAA,GACA/C,EAAA,SAAA4B,GACA,MAAApH,GAAAiI,KAAAG,MAAAhB,EAAAxG,KACAmH,EAAAM,KAGAN,EAAAM,QAKAzC,EAAA,WACA,GAAA4C,EAuBA,OAtBAA,GAAA,SAAApB,GACA,GAAA5G,GAAAiI,EAAA1I,EAAAiG,EAAAuC,CAGA,KAFAnB,EAAAA,EAAApD,MAAA,GACAxD,EAAA4G,EAAA1G,OAAA,EACAF,GAAA,GAAA4G,EAAA5G,IAAA4G,EAAA5G,EAAA,MACAA,CAEA,IAAA,IAAAA,EAAA,CAEA,IADAiI,EAAArB,EAAA1G,OAAA,EACA+H,EAAAjI,EAAA,GAAA4G,EAAAqB,IAAArB,EAAA5G,EAAA,MACAiI,CAEAzC,IAAAoB,EAAA5G,EAAA,GAAA4G,EAAAqB,IAAArB,EAAAqB,GAAAzC,EAAA,GAAAoB,EAAA5G,EAAA,GAAAwF,EAAA,GAGA,IADAjG,EAAAqH,EAAA1G,OAAA,EACAX,EAAAS,GACA+H,GAAAnB,EAAArH,GAAAqH,EAAA5G,IAAA4G,EAAA5G,GAAA+H,EAAA,GAAAnB,EAAArH,GAAAwI,EAAA,KACA/H,IACAT,CAEA,OAAAqH,IAEA,SAAAG,GACA,GAAAmB,EAEA,OADAA,GAAAnD,EAAAgC,GACA,IAAAmB,EAAAhI,OACAgF,EAEAhB,EAAAgE,EAAA1E,MAAA,IAAAwC,EAAA,SAAAmC,GACA,MAAAC,MAAAD,KAAAC,KAAAF,KACA/D,EAAA,GAAAU,EAAAmD,EAAAE,UAIAnC,EAAA,SAAAzG,GACA,MAAA,UAAAyH,GACA,MAAApD,GAAA,WACA,GAAA0E,GAAAC,CAGA,OAFAA,GAAAhF,EAAAyD,GAAAnD,EAAAuC,YACAkC,EAAA,GACA3E,EAAA,WACA,QAAA2E,EAAA/I,EACAgJ,IAEApD,QAMAc,EAAA,SAAAuC,GACA,MAAA,UAAAxB,GACA,MAAApD,GAAA,WACA,GAAA2E,EAEA,OADAA,GAAAhF,EAAAyD,GAAAnD,EAAAuC,YACAzC,EAAA,WACA,GAAAkD,EACA,QAAAA,EAAA0B,OAAApD,GAAAqD,EAAA3B,GACAA,EAEA1B,QAMAf,EAAA,SAAA7E,GACA,MAAA,UAAAyH,GACA,MAAApD,GAAA,WACA,GAAA6E,GAAA3I,EAAAyI,EAAAG,EAAAjD,CAGA,KAFA8C,EAAAhF,EAAAyD,GAAAnD,EAAAuC,YACAqC,GAAA,EACA3I,EAAA4I,EAAA,EAAAjD,EAAAlG,GAAAkG,GAAA,EAAAA,EAAAiD,EAAAA,EAAAjD,KACAgD,IAAAA,EAAAF,MAAApD,IACAsD,GAFA3I,EAAA2F,GAAA,IAAAiD,IAAAA,GAMA,MAAAD,GACA,WACA,MAAAtD,IAGAoD,MAKAlE,EAAA,SAAAmE,GACA,MAAA,UAAAxB,GACA,MAAApD,GAAA,WACA,GAAA2E,GAAA1B,CAEA,KADA0B,EAAAhF,EAAAyD,GAAAnD,EAAAuC,YACAoC,EAAA3B,EAAA0B,MAAA1B,IAAA1B,IAGA,MAAAxB,GAAA,WACA,GAAAgF,GAAAlD,CAEA,OADAA,IAAAoB,EAAA0B,KAAAI,EAAAlD,EAAA,GAAAoB,EAAApB,EAAA,GACAkD,QAKAxE,EAAA,SAAA0C,GACA,MAAA,UAAAG,GACA,MAAApD,GAAA,WACA,GAAA2E,EAEA,OADAA,GAAA,KACA5E,EAAA,WACA,MAAA,QAAA4E,GACAA,EAAAhF,EAAAyD,GAAAnD,EAAAuC,YACAS,GAEA0B,UAMAtD,EAAA,SAAAvG,GACA,MAAA,UAAAsI,GACA,MAAApD,GAAA,WACA,GAAA2E,EAEA,OADAA,GAAAhF,EAAAyD,GAAAnD,EAAAuC,YACAzC,EAAA,WACA,GAAAkD,EACA,QAAAA,EAAA0B,OAAApD,EACAzG,EAAAmI,GAEA1B,QAMAZ,EAAA,SAAAiE,GACA,MAAA,UAAAxB,GACA,MAAApD,GAAA,WACA,GAAA2E,EAEA,OADAA,GAAAhF,EAAAyD,GAAAnD,EAAAuC,YACAzC,EAAA,WAEA,IADA,GAAAkD,IACA2B,EAAA3B,EAAA0B,MAAA1B,IAAA1B,IAGA,MAAA0B,SAKAjB,EAAA,SAAAlH,EAAAc,GACA,MAAA,UAAAwH,GACA,MAAApD,GAAA,WACA,GAAA2E,EAEA,OADAA,GAAAhF,EAAAyD,GAAAnD,EAAAuC,YACAzC,EAAA,WACA,GAAAiF,GAAA/B,CAGA,OAFA+B,GAAApJ,EACAA,GAAAqH,EAAA0B,OAAApD,EAAAzG,EAAAc,EAAAqH,GAAA1B,EACAyD,QAKA7C,EAAA,SAAAxG,GACA,MAAA,GAAAA,EACA4F,EAEA,SAAA6B,GACA,MAAA5C,GAAA7E,EAAA,GAAAqE,EAAA,WACA,GAAAiF,GAAAN,CAGA,OAFAA,GAAAhF,EAAAyD,GAAAnD,EAAAuC,YACAyC,KACAlF,EAAA,WACA,GAAAkD,EACA,QAAAA,EAAA0B,OAAApD,EACAA,GAEA0D,EAAA7G,KAAA6E,GACAgC,EAAA1I,OAAAZ,GACAsJ,EAAAC,MAAA,GAEAD,EAAApF,MAAA,WAMAkC,EAAA,SAAAqB,GACA,GAAAvB,EACA,QAAAA,EAAAuB,EAAAC,eAAAnF,OAAA2D,IAAAyB,OACAtD,EAAA,WACA,GAAA9D,EAEA,OADAA,GAAAkH,EAAA7G,OACAwD,EAAA,WACA,QAAA7D,GAAA,EACAkH,EAAAlH,GAEAqF,MAKAH,EAAAzB,EAAAyD,IAAArB,WAGAE,EAAA,SAAAmB,GACA,GAAAmB,EAEA,OADAA,GAAAnD,EAAAzB,EAAAyD,IACAmB,EAAAtC,QAEAC,EAAA,SAAApH,GACA,MAAA,UAAAsI,GACA,GAAAmB,EAEA,OADAA,GAAAnD,EAAAzB,EAAAyD,IACAmB,EAAAtC,KAAA,SAAAjG,EAAAmJ,GACA,GAAAC,GAAAC,CACA,SAAAD,EAAAtK,EAAAkB,KAAAqJ,EAAAvK,EAAAqK,MAAAE,EAAAD,OAIAtE,EAAA,SAAAsC,GACA,MAAApD,GAAA,WACA,GAAA2E,GAAAjJ,EAAAuH,CAIA,OAHA0B,GAAAhF,EAAAyD,GAAAnD,EAAAuC,YACA9G,EAAA6F,EACA0B,EAAA0B,IACA5E,EAAA,WACA,MAAAkD,KAAA1B,EACAA,EACA0B,IAAAvH,GACAA,EAAAuH,EACAjD,EAAA,WACA,MAAAD,GAAA,WACA,GAAAnE,EACA,QAAAA,EAAAqH,KAAAvH,GACAuH,EAAA0B,IACA/I,GAEA2F,OATA,YAiBAR,EAAA,SAAAuE,GACA,MAAA,UAAAlC,GACA,MAAApD,GAAA,WACA,GAAA2E,GAAAjJ,EAAAuH,CAIA,OAHA0B,GAAAhF,EAAAyD,GAAAnD,EAAAuC,YACA9G,EAAA6F,EACA0B,EAAA0B,IACA5E,EAAA,WACA,MAAAkD,KAAA1B,EACAA,EACA+D,EAAArC,EAAAvH,GAAA,QACAA,EAAAuH,EACAjD,EAAA,WACA,MAAAD,GAAA,WACA,GAAAnE,EACA,OAAA0J,GAAA1J,EAAAqH,EAAAvH,IACAuH,EAAA0B,IACA/I,GAEA2F,aASAP,EAAA,SAAAlG,GACA,MAAA,UAAAsI,GACA,GAAA3G,GAAA8I,EAAA5I,CAUA,OATA4I,MACA1E,EAAAuC,EAAA,SAAAH,GACA,GAAAuC,EAKA,OAJAA,GAAA1K,EAAAmI,GACA,MAAAsC,EAAAC,KACAD,EAAAC,OAEAD,EAAAC,GAAApH,KAAA6E,KAEA,WACA,GAAAwC,EACAA,KACA,KAAAhJ,IAAA8I,GACA5I,EAAA4I,EAAA9I,GACAgJ,EAAArH,KAAAzB,EAEA,OAAA8I,QAIAjE,EAAA,SAAA1G,GACA,MAAA,UAAAsI,GACA,GAAAmC,EAOA,OANAA,WACA1E,EAAAuC,EAAA,SAAAH,GACA,GAAAuC,EAEA,OADAA,IAAA1K,EAAAmI,GAAA,EACAsC,EAAAC,GAAApH,KAAA6E,KAEAsC,IAGApI,EAAA,SAAAuI,GACA,MAAA1F,GAAA,WACA,GAAA2E,GAAAvB,EAAAuC,CAIA,OAHAA,GAAAhG,EAAA+F,GAAAzF,EAAAuC,YACAY,EAAAuC,IACAhB,EAAAhF,EAAAyD,GAAAnD,EAAAuC,YACAzC,EAAA,WACA,GAAAkD,EACA,QAAAA,EAAA0B,OAAApD,EACA0B,GACAG,EAAAuC,OAAApE,GACAoD,EAAAhF,EAAAyD,GAAAnD,EAAAuC,eAGAjB,OAKAM,EAAA,WACA,GAAAgD,GAAAvC,EAAAC,CA+EA,OA9EAsC,GAAA,SAAAN,GACA,GAAAO,GAAAc,EAAA3C,CACA,KAAA6B,EAAA,EAAAc,EAAArB,EAAAhI,OAAAqJ,EAAAd,EAAAA,IAEA,GADA7B,EAAAsB,EAAAO,GACA7B,IAAA1B,EACA,OAAA,CAGA,QAAA,GAEAe,EAAA,WACA,GAAAoD,EAEA,OADAA,GAAA,GAAAvH,UAAA5B,OAAAsD,EAAAvD,KAAA6B,UAAA,MACA6B,EAAA,WACA,GAAA6F,GAAAzC,CAUA,OATAyC,GAAA,WACA,GAAAf,GAAAc,EAAAH,CAEA,KADAA,KACAX,EAAA,EAAAc,EAAAF,EAAAnJ,OAAAqJ,EAAAd,EAAAA,IACA1B,EAAAsC,EAAAZ,GACAW,EAAArH,KAAAuB,EAAAyD,GAAAnD,EAAAuC,YAEA,OAAAiD,MAEA1F,EAAA,WACA,GAAA4E,GAAAhC,CAUA,OATAA,GAAA,WACA,GAAAmC,GAAAc,EAAAH,CAEA,KADAA,KACAX,EAAA,EAAAc,EAAAC,EAAAtJ,OAAAqJ,EAAAd,EAAAA,IACAH,EAAAkB,EAAAf,GACAW,EAAArH,KAAAuG,IAEA,OAAAc,MAEAZ,EAAAlC,GACApB,EAEAoB,OAKAJ,EAAA,SAAAzH,GACA,MAAA,YACA,GAAA4K,EAEA,OADAA,GAAA,GAAAvH,UAAA5B,OAAAsD,EAAAvD,KAAA6B,UAAA,MACA6B,EAAA,WACA,GAAA6F,GAAAzC,CAUA,OATAyC,GAAA,WACA,GAAAf,GAAAc,EAAAH,CAEA,KADAA,KACAX,EAAA,EAAAc,EAAAF,EAAAnJ,OAAAqJ,EAAAd,EAAAA,IACA1B,EAAAsC,EAAAZ,GACAW,EAAArH,KAAAuB,EAAAyD,GAAAnD,EAAAuC,YAEA,OAAAiD,MAEA1F,EAAA,WACA,GAAA4E,GAAAhC,CAUA,OATAA,GAAA,WACA,GAAAmC,GAAAc,EAAAH,CAEA,KADAA,KACAX,EAAA,EAAAc,EAAAC,EAAAtJ,OAAAqJ,EAAAd,EAAAA,IACAH,EAAAkB,EAAAf,GACAW,EAAArH,KAAAuG,IAEA,OAAAc,MAEAZ,EAAAlC,GACApB,EAEAzG,EAAAwD,MAAA,KAAAqE,UAOAL,IAAAA,EACAC,QAAAA,MAEAD,EAAAT,EAAAS,IAAAC,EAAAV,EAAAU,QACAjC,EAAA,WACA,GAAAwF,GAAAC,CAyBA,OAxBAA,GAAA,SAAAC,GACA,GAAAC,EAEA,OADAA,GAAAD,EAAAzJ,OAAA,EACA,SAAA2J,GACA,GAAAhK,EAEA,KADAA,EAAA+J,MACAC,EAAAhK,GAAA8J,EAAA9J,IAAA,GAAAA,IACAgK,EAAAhK,KAAA,CAEA,OAAAgK,KAGAJ,EAAA,SAAAK,GACA,GAAA3I,EAEA,OADAA,GAAA2I,EAAA5J,OACA,SAAA2J,GACA,GAAAhK,GAAA4I,EAAAV,EAAAqB,CAEA,KADAA,KACAvJ,EAAA4I,EAAA,EAAAV,EAAA5G,EAAA4G,GAAA,EAAAA,EAAAU,EAAAA,EAAAV,EAAAlI,EAAAkI,GAAA,IAAAU,IAAAA,EACAW,EAAArH,KAAA+H,EAAAjK,GAAAgK,EAAAhK,IAEA,OAAAuJ,KAGA,WACA,GAAAC,EAEA,OADAA,GAAA,GAAAvH,UAAA5B,OAAAsD,EAAAvD,KAAA6B,UAAA,MACA6B,EAAA,WACA,GAAAoG,GAAAlK,EAAAmK,EAAAvB,EAAAtH,EAAAoI,EAAAI,EAAArJ,EAAAyG,CAkBA,KAjBAsC,EAAA,WACA,GAAAZ,GAAAc,EAAAH,CAEA,KADAA,KACAX,EAAA,EAAAc,EAAAF,EAAAnJ,OAAAqJ,EAAAd,EAAAA,IACA1B,EAAAsC,EAAAZ,GACAW,EAAArH,KAAAgD,EAAAgC,GAEA,OAAAqC,MAEAO,EAAA,WACA,GAAAlB,GAAAV,EAAAqB,CAEA,KADAA,KACAvJ,EAAA4I,EAAA,EAAAV,EAAAsB,EAAAnJ,OAAA6H,GAAA,EAAAA,EAAAU,EAAAA,EAAAV,EAAAlI,EAAAkI,GAAA,IAAAU,IAAAA,EACAW,EAAArH,KAAAsH,EAAAxJ,GAAAK,OAEA,OAAAkJ,MAEAX,EAAA,EAAAc,EAAAI,EAAAzJ,OAAAqJ,EAAAd,EAAAA,IAEA,GADAtH,EAAAwI,EAAAlB,GACA,IAAAtH,EACA,MAAA+D,EAaA,OAVA8E,GAAAN,EAAAC,GACAI,EAAAN,EAAAJ,GACA/I,EAAA,WACA,GAAAb,GAAAsI,EAAAqB,CAEA,KADAA,KACAvJ,EAAAJ,EAAA,EAAAsI,EAAAsB,EAAAnJ,OAAA6H,GAAA,EAAAA,EAAAtI,EAAAA,EAAAsI,EAAAlI,EAAAkI,GAAA,IAAAtI,IAAAA,EACA2J,EAAArH,KAAA,EAEA,OAAAqH,MAEA1F,EAAA,WACA,GAAAnE,EACA,OAAAe,GAAA,GAAAqJ,EAAA,IACApK,EAAAwK,EAAAzJ,GACA0J,EAAA1J,GACAf,GAEA2F,UAMAH,EAAA,SAAAgC,GACA,GAAAV,GAAA/G,EAAA8J,EAAAa,EAAArD,CACA,IAAAG,YAAAlF,OACA,MAAAkF,EACA,IAAA,kBAAAA,GAAA,CAGA,IAFAV,EAAAU,EAAAnD,EAAAuC,YACAiD,MACAxC,EAAAP,OAAAnB,GACAkE,EAAArH,KAAA6E,EAEA,OAAAwC,GACA,GAAA,MAAArC,EAAAnD,EAAAuC,UAAA,CAGA,IAFAE,EAAA/C,EAAAyD,GAAAnD,EAAAuC,YACA8D,MACArD,EAAAP,OAAAnB,GACA+E,EAAAlI,KAAA6E,EAEA,OAAAqD,GACA,GAAA,gBAAAlD,GAEA,MADAzH,GAAAyH,EACA,SAAAA,GACA,MAAAhC,GAAAgB,EAAAzG,GAAAyH,IAGA,MAAAjH,OAAA,+CAGA8E,EAAA,SAAAmC,GACA,GAAAuB,GAAAP,EAAAmC,CACA,QAAAnC,EAAAhB,EAAAC,eAAAnF,OAAAkG,IAAAd,OACA,OAAAiD,EAAAnD,EAAA,IAAAmD,EAAAhF,GAEAoD,EAAAhF,EAAAyD,GAAAnD,EAAAuC,gBAIArB,EAAA,SAAAiC,GACA,GAAAuB,GAAA/I,EAAAwI,EAAAmC,EAAAtD,CACA,KAAAmB,EAAAhB,EAAAC,eAAAnF,OAAAkG,IAAAd,OACA,MAAA,QAAAiD,EAAAnD,EAAAA,EAAA7G,OAAA,IAAAgK,EAAAhF,CAIA,KAFAoD,EAAAhF,EAAAyD,GAAAnD,EAAAuC,YACA5G,EAAA2F,GACA0B,EAAA0B,OAAApD,GACA3F,EAAAqH,CAEA,OAAArH,IAGAW,EAAA,SAAA6G,GACA,GAAAuB,GAAA/I,EAAAwI,EAAAnB,CACA,KAAAmB,EAAAhB,EAAAC,eAAAnF,OAAAkG,IAAAd,OACA,MAAAF,GAAA7G,MAIA,KAFAoI,EAAAhF,EAAAyD,GAAAnD,EAAAuC,YACA5G,EAAA,GACAqH,EAAA0B,OAAApD,KACA3F,CAEA,OAAAA,IAGAgF,EAAA,SAAA9F,EAAA2I,GACA,MAAA,UAAAL,GACA,GAAAuB,GAAA/I,EAAAqH,CAGA,KAFArH,EAAA6H,EACAkB,EAAAhF,EAAAyD,GAAAnD,EAAAuC,aACAS,EAAA0B,OAAApD,GACA3F,EAAAd,EAAAc,EAAAqH,EAEA,OAAArH,KAGAwE,EAAA,SAAAoG,GACA,MAAA,UAAApD,GACA,GAAAV,GAAAiC,EAAA/I,CAEA,IADA+I,EAAAhF,EAAAyD,GAAAnD,EAAAuC,aACA5G,EAAA+I,OAAApD,EACA,MAAA,KAEA,OAAAmB,EAAAiC,OAAApD,GACA3F,EAAA4K,EAAA9D,EAAA9G,GAAA8G,EAAA9G,CAEA,OAAAA,KAGAsE,EAAA,SAAApF,GAMA,MALA,kBAAAA,KACAA,EAAA,SAAAmI,GACA,MAAAA,KAAAnI,IAGA,SAAAsI,GACA,GAAAuB,GAAA1B,CAEA,KADA0B,EAAAhF,EAAAyD,GAAAnD,EAAAuC,aACAS,EAAA0B,OAAApD,GACA,IAAAzG,EAAAmI,GACA,OAAA,CAGA,QAAA,IAGA9C,EAAA,SAAArF,GACA,GAAA2L,EAIA,OAHAA,GAAAvG,EAAA,SAAA+C,GACA,OAAAnI,EAAAmI,KAEA,SAAAG,GACA,OAAAqD,EAAArD,KAGA/C,EAAA,WACA,MAAAA,IAEAA,EAAAoC,SAAA,WACA,MAAA,iBAEA5B,EAAA,SAAAuC,EAAAsD,EAAAC,GACA,GAAAhC,GAAA1B,CAEA,KADA0B,EAAAhF,EAAAyD,GAAAnD,EAAAuC,aACAS,EAAA0B,OAAApD,GACAmF,EAAAzD,EAAA0D,KAAAtG,IAIA,MAAAsG,IAEAnD,OAAAoD,iBAAA/F,GACAgG,SACAC,UAAA,EACAC,cAAA,EACAC,YAAA,EACApE,MAAAvC,MAIAkB,IAAAA,EACAvB,SAAAA,EACAD,SAAAA,EACAE,OAAAA,EACAqB,SAAAA,EACAM,MAAAA,EACAF,OAAAA,EACA/B,KAAAA,EACAe,UAAAA,EACAoB,OAAAA,EACAZ,QAAAA,EACAS,QAAAA,EACAF,aAAAA,EACAlB,KAAAA,EACAc,IAAAA,EACAV,OAAAA,EACAyB,KAAAA,EACAC,UAAAA,EACA7B,KAAAA,EACAC,UAAAA,EACAuB,MAAAA,EACAG,OAAAA,EACAJ,QAAAA,EACAE,KAAAA,EACAC,OAAAA,EACApB,MAAAA,EACAC,QAAAA,EACAC,QAAAA,EACAQ,UAAAA,EACArE,OAAAA,EACAmF,IAAAA,EACAC,QAAAA,EACAjC,SAAAA,EACAc,KAAAA,EACAH,KAAAA,EACAE,KAAAA,EACA5E,OAAAA,EACAqE,MAAAA,EACAR,KAAAA,EACAF,IAAAA,EACAC,IAAAA,EACAU,QAAAA,IAIA7F,EAAAD,QAAA6E,GACAK,OAAA,mBAAAA,SAAA,OAAAA,OAAAA,QACAuC,SAAA,oBAKA,IAAA,OHoHGlG,KAAKf,KAAuB,mBAAXF,QAAyBA,OAAyB,mBAATC,MAAuBA,KAAyB,mBAAXF,QAAyBA,gBAErH6L,GAAG,SAAShL,EAAQjB,EAAOD,GI5gCjC,GAAA6E,GAAAC,KAAAA,KAAAD,GAAc,SAACE,GAEd,GAAAoH,GAAAC,EAAA/G,EAAAgH,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAxD,EAAAyD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,CAsFA,OAxFexI,GAADN,EAACM,KAEfqH,EAAO,SAAC3M,GJkhCL,MIjhCF,UAACmI,GJkhCG,MIlhCG,UAACuC,GJmhCF,MInhCQ1K,GAAE0K,GAAGvC,MAEpBoE,EAAU,SAACvM,GJshCR,MIthCc,UAACK,GJuhCb,MIthCJ,UAAC8H,GJuhCK,MIvhCCnI,GAAEK,EAAE8H,OAEZqE,EAAS,SAACxM,GJ0hCP,MIzhCF,UAACkB,GJ0hCG,MI1hCG,UAACmJ,GJ2hCF,MI3hCQrK,GAAEkB,EAAGmJ,MAEpBoC,EAAS,SAACzM,GJ8hCP,MI7hCF,UAACkB,GJ8hCG,MI9hCG,UAACmJ,GJ+hCF,MI/hCQ,UAACT,GJgiCP,MIhiCa5J,GAAEkB,EAAGmJ,EAAGT,OAE9BgE,EAAW,SAAC5N,GJoiCT,MIniCF,UAACkB,EAAGmJ,GJoiCA,MIpiCMrK,GAAEkB,GAAGmJ,KAEhBwD,EAAW,SAAC7N,GJsiCT,MIriCF,UAACkB,EAAGmJ,EAAGT,GJsiCH,MItiCS5J,GAAEkB,GAAGmJ,GAAGT,KAEtB0D,EAAO,SAACtN,GJwiCL,MIviCF,UAACyJ,GJwiCG,MIxiCKzJ,GAAAwD,MAAA,KAAEiG,KAEZqE,EAAS,SAAC9N,GJ0iCP,MIziCF,YAAY,GAAAyJ,EJ4iCR,OI5iCHA,GAAA,GAAApG,UAAA5B,OAAAsD,EAAAvD,KAAA6B,UAAA,MAAWrD,EAAEyJ,KAGfiE,EAAO,SAACjE,GJ6iCL,MI5iCF,UAACrI,GJ6iCG,MI7iCGqI,GAAIrI,KAEZmM,EAAQ,SAACQ,GJ+iCN,MI9iCF,UAACC,GJ+iCG,MI/iCGA,GAAED,KAGVrB,EAAQ,SAAC9E,GJgjCN,MI/iCF,UAACO,GJgjCG,MIhjCGA,KAAKP,IAEbyF,EAAW,SAACzF,GJkjCT,MIjjCF,UAACO,GJkjCG,MIljCGA,KAAKP,IAEbmF,EAAW,SAACnF,GJojCT,MInjCF,UAACO,GJojCG,MIpjCOP,GAAJO,IAER0E,EAAc,SAACjF,GJsjCZ,MIrjCF,UAACO,GJsjCG,MItjCGA,GAAIP,IAEZkF,EAAY,SAAClF,GJwjCV,MIvjCF,UAACO,GJwjCG,MIxjCQP,IAALO,IAERyE,EAAe,SAAChF,GJ0jCb,MIzjCF,UAACO,GJ0jCG,MI1jCGA,IAAKP,IAGb4F,EAAO,SAAC5F,GJ2jCL,MI1jCF,UAACO,GJ2jCG,MI3jCGA,GAAIP,IAEZwF,EAAQ,SAACxF,GJ6jCN,MI5jCF,UAACO,GJ6jCG,MI7jCGA,GAAIP,IAEZwE,EAAMpD,KAAKoD,IACXjD,EAAQH,KAAKG,MACbmD,EAAOtD,KAAKsD,KAEZmB,EAAU,SAAC5M,GJ8jCR,MI7jCF,UAACsH,GJ8jCG,MI9jCG8F,YAAW9F,EAAE+F,YAAYrN,MAEjCwL,EAAwB,SAACrM,GJgkCtB,MI/jCF,YACC,GAAAyJ,EJikCG,OIlkCHA,GAAA,GAAApG,UAAA5B,OAAAsD,EAAAvD,KAAA6B,UAAA,MACArD,EAAmB,IAAdyJ,EAAIhI,QAAgBgI,EAAI0E,gBAAiB/K,OAAWqG,EAAI0E,MAAW1E,KAE1EkE,EAAMtB,EAAsB,SAAC5C,GAC5B,GAAA9H,GAAAe,EAAA5B,EAAAqH,CAEA,KAFiC,IAAdsB,EAAIhI,QAAgBgI,EAAI0E,gBAAiB/K,SAA5DqG,EAAMA,EAAI0E,OACVrN,EAAI,EACJa,EAAA,EAAAe,EAAA+G,EAAAhI,OAAAiB,EAAAf,EAAAA,IJskCIwG,EAAIsB,EAAI9H,GItkCZb,GAAKqH,CJykCH,OIxkCFrH,KAEDkM,EAAMX,EAAsB,SAAC5C,GJykC1B,MIxkCFnE,GAAK,SAACpE,EAAGmJ,GJykCL,MIzkCWnJ,GAAImJ,IAAGZ,KAEvByD,EAAMb,EAAsB,SAAC5C,GJ2kC1B,MI1kCFnE,GAAK,SAACpE,EAAGmJ,GJ2kCL,MI3kCeA,GAAJnJ,IAAOuI,KAEvBwD,EAAYZ,EAAsB,SAAC5C,GAClC,GAAAkB,EJ6kCE,OI7kCFrF,GAAK,SAAClE,EAAG4I,GJ8kCL,MI9kCWP,GAAIrI,GAAKqI,EAAIO,KAAI,WJglC5BW,IACA,KAAK,GAAIhJ,GAAI,EAAGoF,EAAM0C,EAAIhI,OAAasF,GAAL,EAAeA,EAAJpF,EAAUA,EAAIoF,EAAUA,GAAL,EAAWpF,IAAMA,IAAMgJ,EAAQrH,KAAK3B,EACpG,OAAOgJ,IACNnH,MAAM/C,SIjlCZ0M,EAAYd,EAAsB,SAAC5C,GAClC,GAAAkB,EJolCE,OIplCFrF,GAAK,SAAClE,EAAG4I,GJqlCL,MIrlCWP,GAAIrI,GAAKqI,EAAIO,KAAI,WJulC5BW,IACA,KAAK,GAAIhJ,GAAI,EAAGoF,EAAM0C,EAAIhI,OAAasF,GAAL,EAAeA,EAAJpF,EAAUA,EAAIoF,EAAUA,GAAL,EAAWpF,IAAMA,IAAMgJ,EAAQrH,KAAK3B,EACpG,OAAOgJ,IACNnH,MAAM/C,UIvlCXkM,KAAAA,EAAMJ,QAAAA,EACNC,OAAAA,EAAQC,OAAAA,EAAQmB,SAAAA,EAAUC,SAAAA,EAAUP,KAAAA,EAAMQ,OAAAA,EAC1CJ,KAAAA,EAAMH,MAAAA,EACNb,MAAAA,EAAOW,SAAAA,EAAUN,SAAAA,EAAUD,UAAAA,EAAWD,YAAAA,EAAaD,aAAAA,EACnDY,KAAAA,EAAMJ,MAAAA,EAAOhB,IAAAA,EAAKjD,MAAAA,EAAOmD,KAAAA,EAAMmB,QAAAA,EAC/BE,IAAAA,EAAKX,IAAAA,EAAKE,IAAAA,EAAKD,UAAAA,EAAWE,UAAAA,IA9F5BjN,EAiGOD,QAAU6E,GAChBQ,KAAMnE,EAAQ,eAAemE,SJonC3B8I,cAAc,IAAIC,GAAG,SAASlN,EAAQjB,EAAOD,GKttChD,GAAAqO,GAAAC,EAAAC,EAAA3J,EAAA4J,EAAAC,CAAAA,GAAQvN,EAAQ,WAAhBmN,EACSnN,EAAQ,YADjB0D,EAEO1D,EAAQ,eAFfqN,EAGQrN,EAAQ,WAHhBoN,EAIapN,EAAQ,gBAJrBsN,EAKctN,EAAQ,iBALtBjB,EAOOD,QAAUyO,EAAMC,WAAWD,EAAOJ,EAAQzJ,EAAM2J,EAAOD,EAAYE,KLiuCvEG,WAAW,EAAEC,eAAe,EAAEC,UAAU,EAAEC,gBAAgB,EAAEC,UAAU,GAAGZ,cAAc,IAAIa,GAAG,SAAS9N,EAAQjB,EAAOD,GMxuCzH,GAAA6E,EAAAA,GAAc,WACb,GAAAoK,GAAAC,EAAAC,EAAAC,EAAAC,EAAA3F,EAAA4F,EAAAC,EAAAC,CAUA,OAVAH,GAAM,SAACvO,EAAG2O,GAAS,GAAA5O,EAAA,OAAgB,gBAAbC,IAA4BD,EAAI6O,SAAS5O,EAAG2O,GAAc,MAAA3O,EAAAgE,OAAajE,IAAK6O,SAAS5O,EAAEgE,MAAM,EAAE,IAAK2K,GAAW5O,EAAO,MAAW6O,SAAS,EAAI5O,IACpKqO,EAAQ,SAACrO,GAAM,MAAG,uCAAuC6O,KAAK7O,GAAQkN,WAAWlN,GAAQ,MACzF0O,EAAM,SAACtH,EAAGuH,GN+vCP,MM/vCgBvH,GAAER,SAAS+H,IAC9BR,EAAO,SAAC/G,GAAM,MAAGA,MAAM,GAANA,KAAY,EAAYA,EAAO,MAChDkH,EAAM,SAAClH,GNuwCJ,MMvwCUA,GAAER,SAAS,KACxB6H,EAAM,SAAC5F,GNywCJ,MMzwCUA,GAAEiG,cACfV,EAAM,SAAChH,GN2wCJ,MM3wCUK,QAAOsH,aAAa3H,IACjCwB,EAAO,SAAC/B,EAAImI,GN6wCT,MM7wCoBC,MAAKC,UAAUrI,EAAI,KAAMmI,IAChDR,EAAM,SAACxO,GN+wCJ,MM/wCUiP,MAAKE,MAAMnP,KAGvBuO,MAAAA,EAAKF,QAAAA,EAAOF,KAAAA,EAAMO,IAAAA,EAAKJ,IAAAA,EAAKG,IAAAA,EAAKL,IAAAA,EAAKxF,KAAAA,EAAM4F,IAAAA,IAZ9CrP,EAeOD,QAAU6E,SN2xCXqL,GAAG,SAAShP,EAAQjB,EAAOD,GO1yCjC,GAAA6E,GAAAC,KAAAA,KAAAD,GAAc,WACb,GAAAsL,GAAAC,EAAAC,EAAAC,EAAAC,CA2BA,OA3BAH,GAAS,SAACxP,GACT,GAAAgJ,EPuzCE,OOvzCFA,GAAO,SAAC7J,EAAGa,EAAGC,GACb,MAAQ,KAALD,EAAYC,EAAO+I,EAAK7J,EAAGa,EAAI,EAAGb,EAAEc,KACxC,SAACd,GPszCG,MOrzCH,UAACmI,GPszCI,MOtzCE0B,GAAK7J,EAAGa,EAAI,EAAGsH,MAExBiI,EAAI,SAACpQ,GPyzCF,MOxzCF,UAAEmI,GPyzCE,MOzzCKA,GAAEA,IAAI,SAAEA,GP2zCb,MO3zCoBnI,GAAE,SAAE0K,GP4zCtB,MO5zC8BvC,GAAEA,GAAGuC,QAE1C8F,EAAU,SAACxQ,EAAGyQ,GACb,GAAAC,EPu0CE,OARe,OAAXD,IOh0COA,EAAU,WAAc,GAAAtN,EPo0C/B,OOp0CmBA,GAAA,GAAAE,UAAA5B,OAAAsD,EAAAvD,KAAA6B,UAAA,MAAYsG,KAAKxG,KAC1CuN,KACA,WACC,GAAAvN,GAAAwN,EAAAC,EAAA9P,CAEA,OAHAqC,GAAA,GAAAE,UAAA5B,OAAAsD,EAAAvD,KAAA6B,UAAA,MACAuN,EAAMH,EAAAjN,MAAA,KAAQL,GACdwN,EAASD,EAAME,GACZ,MAAAD,EACFA,GAEA7P,EAAId,EAAAwD,MAAA,KAAEL,GACNuN,EAAME,GAAO9P,EACbA,KAEHwP,EAAMF,EAENG,EAAU,SAACM,GACV,GAAA7Q,EACA,OADAA,GAAIwQ,EAASK,EAAG,WAAc,GAAA1N,EP60C1B,OO70CcA,GAAA,GAAAE,UAAA5B,OAAAsD,EAAAvD,KAAA6B,UAAA,MAAYrD,EAAAwD,MAAA,KAAEL,QAIhCkN,OAAAA,EAAQD,EAAAA,EAAGI,QAAAA,EAASF,IAAAA,EAAKC,QAAAA,IA7B3BrQ,EAgCOD,QAAU6E,SPs1CXgM,GAAG,SAAS3P,EAAQjB,EAAOD,GQt3CjC,GAAA6E,GAAAC,KAAAA,KAAAD,GAAc,SAACE,GAGd,GAAA5B,GAAAsF,EAAAF,CAoFA,OAvFeA,GAAAxD,EAAAwD,OAAQpF,EAAA4B,EAAA5B,MAAOsF,EAAA1D,EAAA0D,OAG9BA,EAAOoD,iBAAiBtD,EAAOjF,WAC9BwN,QACC7E,YAAY,EACZpE,MAAO,SAAC3E,GR23CH,MQ13CJ1C,MAAEuQ,QAAQ,aAAc,SAACxH,EAAGpI,GAAM,MAAG,OAAA+B,EAAA/B,GAAc+B,EAAK/B,GAAQoI,MAClExC,QACCkF,YAAY,EACZpE,MAAO,SAACjH,GACP,GAAAoQ,GAAAnQ,EAAAiG,CACA,KADAA,GAAY,GAAItG,MAAfK,EAAAiG,EAAA,GAAGkK,EAAAlK,EAAA,GACElG,EAAI,GACO,EAAJA,IAAZC,GAAKmQ,GACLpQ,IAAM,EACNoQ,GAAOA,CACR,OAAOnQ,KACToQ,KACChF,YAAY,EACZpE,MAAO,SAACqJ,EAAWC,GAClB,GAAAhQ,GAAA4I,CACA,OADA5I,GAAIX,KAAE4Q,OAAOF,GAAa,EACN,IAAL/P,EAAR,MACP4I,EAAIvJ,KAAE6Q,OAAOlQ,GAAGiQ,OAAOD,GACH,KAALpH,EAAR,KACPvJ,KAAE6Q,OAAOlQ,EAAG4I,QAIftB,EAAOoD,iBAAiB1I,EAAMG,WAC7B4K,OACCoD,IAAK,WR84CA,MQ94CG9Q,MAAE,IACV+Q,IAAK,SAAC3P,GRg5CD,MQh5COpB,MAAE,GAAKoB,IACpB4P,QACCF,IAAK,WRm5CA,MQn5CG9Q,MAAE,IACV+Q,IAAK,SAAC3P,GRq5CD,MQr5COpB,MAAE,GAAKoB,IACpB6P,OACCH,IAAK,WRw5CA,MQx5CG9Q,MAAE,IACV+Q,IAAK,SAAC3P,GR05CD,MQ15COpB,MAAE,GAAKoB,IACpBwE,MACCkL,IAAK,WR65CA,MQ75CG9Q,MAAEA,KAACgB,OAAS,IACpB+P,IAAK,SAAC3P,GR+5CD,MQ/5COpB,MAAEA,KAACgB,OAAS,GAAKI,IAC9BmF,QACCkF,YAAY,EACZpE,MAAO,SAACjH,GACP,GAAAoQ,GAAAnQ,EAAAiG,CACA,KADAA,MAAgBtG,MAAfK,EAAAiG,EAAA,GAAGkK,EAAAlK,EAAA,GACElG,EAAI,GACgB,EAAJA,IAArBC,EAAIA,EAAEuB,OAAO4O,IACbpQ,IAAM,EACNoQ,EAAMA,EAAI5O,OAAO4O,EAClB,OAAOnQ,KACT6Q,QACCzF,YAAY,EACZpE,MAAU,WACT,GAAAa,ERy6CI,OQz6CJA,GAAO,GAAAD,GACP,SAACgE,GACA,GAAAtL,GAAA4I,EAAAzI,EAAAmB,EAAAoI,EAAA9J,EAAAJ,EAAAuH,CAEA,IAFA/G,EAAI,EACJR,EAAI+H,EACG,MAAA+D,EACN,IAAA1C,EAAAzI,EAAA,EAAAmB,EAAAjC,KAAAgB,OAAAiB,EAAAnB,EAAAyI,IAAAzI,ER06CQ4G,EAAI1H,KAAKuJ,GQ16CE7B,IAAKvH,IACvBH,KAAEW,GAAKR,EAAIuH,EACX/G,GAAK,OAEN,KAAA4I,EAAAhJ,EAAA,EAAA8J,EAAArK,KAAAgB,OAAAqJ,EAAA9J,EAAAgJ,IAAAhJ,ER+6CQmH,EAAI1H,KAAKuJ,GQ/6CEpJ,IAAK+H,GAAQ+D,EAAUvE,EAAGvH,KAC5CH,KAAEW,GAAKR,EAAIuH,EACX/G,GAAK,EAEP,OADAX,MAACmR,OAAOxQ,EAAGiH,EAAAA,GACJ5H,YAIXiI,EAAOoD,iBAAiBpD,GACvBmJ,MACC3F,YAAY,EACZpE,MAAO,SAACkG,GRs7CH,MQt7CStF,GAAOD,KAAKuF,GAAGvM,SAC9BkN,QACCzC,YAAY,EACZpE,MAAO,WACN,GAAA4H,GAAA1B,EAAA8D,EAAAnQ,EAAAJ,EAAAmB,EAAAb,CAAA,KADO6N,EAAArM,UAAA,GAAMyO,EAAA,GAAAzO,UAAA5B,OAAAsD,EAAAvD,KAAA6B,UAAA,MACb9B,EAAA,EAAAmB,EAAAoP,EAAArQ,OAAAiB,EAAAnB,EAAAA,IR47CM,GADAyM,EAAI8D,EAASvQ,GQ37CI,MAAAyM,EACtB,IAAArM,IAAAqM,GR67CSnM,EAAImM,EAAErM,GACS,MAAX+N,EAAK/N,KQ97ClB+N,EAAK/N,GAAME,EACZ,OAAO6N,KACTqC,QACC7F,YAAY,EACZpE,MAAO,WACN,GAAA4H,GAAA1B,EAAArM,EAAAJ,EAAAmB,EAAAsP,EAAAnQ,CAAA,KADO6N,EAAArM,UAAA,GAAM2O,EAAA,GAAA3O,UAAA5B,OAAAsD,EAAAvD,KAAA6B,UAAA,MACb9B,EAAA,EAAAmB,EAAAsP,EAAAvQ,OAAAiB,EAAAnB,EAAAA,IRy8CM,GADAyM,EAAIgE,EAAQzQ,GQx8CI,MAAAyM,EACrB,IAAArM,IAAAqM,GR08CSnM,EAAImM,EAAErM,GQ18Cf+N,EAAK/N,GAAKE,CACX,OAAO6N,QAGTlH,OAAAA,EAAQpF,MAAAA,EAAOsF,OAAAA,IAxFjBxI,EA2FOD,QAAU6E,GAAa0D,OAAAA,OAAQpF,MAAAA,MAAOsF,OAAAA,cR09CvCuJ,GAAG,SAAS9Q,EAAQjB,EAAOD,GSrjDjC,GAAA6E,EAAAA,GAAc,WACb,GAAAoN,GAAAC,CAYA,OAZAA,GAAc,SAACC,GT6jDZ,MAHwB,OAApBA,IS1jDQA,EAAmB3C,KACjC,SAACF,GACA,GAAA5N,GAAAE,CT6jDG,OS7jDH,YT8jDK,GAAI8I,ES9jDRA,KTgkDI,KShkDJhJ,IAAA4N,GTikDM1N,EAAI0N,EAAI5N,GSjkDdgJ,EAAArH,KAAG+O,mBAAmB1Q,GAAG,IAAG0Q,mBAAmBD,EAAiBvQ,ITokD5D,OAAO8I,MSpkD0E2H,KAAK,OAE7FJ,EAAc,SAACK,GT4kDZ,MAL0B,OAAtBA,ISvkDQA,EAAqB,SAAExR,GTykD/B,MSzkDqCA,KAC3C,SAAC0O,GACA,GAAAzB,GAAA5M,EAAA4I,EAAArI,EAAAe,EAAAqE,EAAAuC,EAAAmC,EAAA1K,EAAAc,CACA,KADAmM,KACA1E,EAAA,OAAAvC,EAAA0I,EAAA+C,MAAA,mBAAAzL,KAAA3F,EAAA,EAAAsB,EAAA4G,EAAA7H,OAAAiB,EAAAtB,EAAAA,IT8kDKL,EAAIuI,EAAKlI,GS7kDbqK,EAAc1K,EAAEyR,MAAM,gBAAtBxI,EAAAyB,EAAAhK,OAAA,EAAME,EAAA8J,EAAAzB,KAAGnI,EAAA4J,EAAAzB,KACTgE,EAAEyE,mBAAmB9Q,IAAO4Q,EAAmBE,mBAAmB5Q,GACnE,OAAOmM,MAGRmE,YAAAA,EAAaD,YAAAA,IAdfhS,EAiBOD,QAAU6E,STqlDX4N,IAAI,SAASvR,EAAQjB,EAAOD,IAClC,SAAWgD,GUvmDX,GAAA6B,GAAAC,KAAAA,KAAAD,GAAc,WACb,GAAA6N,GAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAArE,EAAAsE,EAAAC,EAAAC,EAAApM,EAAAqM,EAAAC,EAAAtB,CA0IA,OA1IAkB,GAAmB,SAACjT,GACnB,GAAAsT,EAEA,OAFAA,GAAOtT,EAAE2H,WAAWqJ,QAAQ,uDAAwD,MACtCsC,EAAK7R,QAAU,MAA7D6R,EAAOA,EAAKtC,QAAQ,kBAAmB,KAChCsC,GAERD,EAAW,WVgnDR,OU/mDF,GAACE,OAAUC,WAEZN,EAAS,WACR,GAAAO,GAAAC,EAAAxJ,EAAAyJ,EAAAC,CAoDA,OApDAH,GAAS,WAER,GAAAI,GAAAC,CAQA,OARAD,IAAkB,mBAAAvT,SAAA,OAAAA,SAAa,mBAAA2C,IAAA,OAAAA,IAAaA,EAAYU,IAAIoQ,oBAC5DD,GACCE,KAAM,SACNC,IAAK,UACLC,MAAO,UACPC,OAAQ,UACRC,KAAM,UACNC,UAAW,WACTR,EAGF,SAACS,GVsnDK,MUrnDL,UAACvT,GVsnDM,MUtnDA,GAAG+S,EAAQQ,GAASvT,EAAI,SAHhC,SAACuT,GVknDK,MUlnDK,UAACvT,GVmnDJ,MUnnDUA,QAKpB6S,EAAe,WACd,GAAAW,GAAAC,CVuoDG,OUvoDHD,IACCE,IAAK,YACLC,EAAK,QACLC,EAAK,MACLC,EAAK,UACNJ,EAAU,SAACK,GACV,MAAS,QAANA,EAAiB,IAASA,EAAG,GAAGC,eACpC,SAACD,GACA,GAAAE,EVkoDI,OUloDJA,GAAOP,EAAQK,GACfpB,EAAIc,EAAaQ,IAAOA,OAE1BpB,KACAD,EAAU,SAACmB,GACV,GAAAG,EVooDG,OUpoDHA,GAAS,GAAGvB,EAAI,aAAa,KAAMG,EAAUiB,GAC7C,WACC,GAAA1R,GAAA8R,EAAAC,EAAA5B,EAAAtT,EAAAoB,EAAAsB,EAAAyS,EAAAC,CACA,KAFAjS,EAAA,GAAAE,UAAA5B,OAAAsD,EAAAvD,KAAA6B,UAAA,MACA4R,KACA7T,EAAA,EAAAsB,EAAAS,EAAA1B,OAAAiB,EAAAtB,EAAAA,IVsoDMpB,EAAImD,EAAK/B,GUroDC,kBAAZpB,IACFsT,EAAOL,EAAiBjT,GACxBmV,EAAa9B,IACb6B,EAAclV,IACdoV,EAAY/B,IAAa8B,EACzBF,EAAK3R,KAAQ0R,EAAO,IAAGvB,EAAI,SAASH,GAAK,IAAGG,EAAI,aAAa,OAASyB,GACvBE,EAAY,GAA3DH,EAAK3R,KAAKmQ,EAAI,UAAU,IAAI2B,EAAU,SAEtCH,EAAK3R,KAAK,GAAG0R,EAAUhV,EAIzB,OAHAqV,SAAQR,GAARrR,MAAA6R,QAAYJ,GACZtB,EAAUrQ,KAAK2R,GACMtB,EAAUlS,QAAU,IAAzCkS,EAAUvJ,QACH,OACTF,EAAMwJ,EAAQ,OACdxJ,EAAIyJ,UAAYA,EAChBzJ,EAAIoL,KAAO5B,EAAQ,QACnBxJ,EAAIqL,KAAO7B,EAAQ,QACnBxJ,EAAIsL,MAAQtL,EAAIuL,IAAM/B,EAAQ,SACvBxJ,KAERyI,EAAS,SAAC3S,EAAG0V,GACZ,GAAA/U,GAAAG,EAAAiG,CAAuB/G,aAAiB2V,YAAxC5O,GAAY2O,EAAK1V,GAAhBA,EAAA+G,EAAA,GAAG2O,EAAA3O,EAAA,GACJ,KACCjG,EAAId,IADL,MAAA4V,GAGC,KADKjV,GAAAiV,EACCvU,MAAM,cAAY,MAAAqU,EAACA,EAAMzC,EAAiBjT,IAAG,cAAaW,GACjE,IAAGG,EACF,KAAMO,OAAM,cAAY,MAAAqU,EAACA,EAAMzC,EAAiBjT,IAAG,aAErD4S,EAAW,SAACrR,EAAGT,GACd,GAAAH,GAAAkV,EAAAC,CAAA,KACCD,EAAKtU,IACLuU,EAAKhV,IAFN,MAAA8U,GAIC,KADKjV,GAAAiV,EACCvU,MAAM,oBAAoB4R,EAAiB1R,GAAG,QAAO0R,EAAiBnS,GAAG,cAAaH,GAC7F,GAAGkV,IAAQC,EACV,KAAMzU,OAAM,sBAAuB4R,EAAiB1R,GAAG,OAAMsU,EAAG,UAAU5C,EAAiBnS,GAAG,OAAMgV,EAAG,MAEzGjD,EAAa,SAAC7S,GVypDX,MUzpDiB,UAACuB,EAAGT,GACvB,GAAAH,GAAAoV,EAAAC,EAAAH,EAAAC,CAAA,KACCD,EAAKtU,IACLuU,EAAKhV,IACLiV,EAAM/V,EAAE6V,GACRG,EAAMhW,EAAE8V,GAJT,MAAAF,GAMC,KADKjV,GAAAiV,EACCvU,MAAM,2BAA2B4R,EAAiB1R,GAAG,QAAO0R,EAAiBnS,GAAG,cAAaH,GACpG,GAAGoV,IAASC,EACX,KAAM3U,OAAM,sBAAuB4R,EAAiB1R,GAAG,OAAMsU,EAAG,kBAAiBE,EAAI,UAAU9C,EAAiBnS,GAAG,OAAMgV,EAAG,kBAAiBE,EAAI,OAEnJ5C,EAAW,SAACpT,GV+pDT,MU9pDF,YACC,GAAAmD,EViqDG,OUlqDHA,GAAA,GAAAE,UAAA5B,OAAAsD,EAAAvD,KAAA6B,UAAA,MACAF,EAAO4P,EAAS5P,GAChBnD,EAAAwD,MAAA,KAAEL,KAEJ6P,EAAO,SAACiD,GACP,GAAAjI,GAAA5M,EAAAO,EAAAe,EAAAqE,EAAAlF,CACA,KADAmM,KACA5M,EAAA,EAAAsB,EAAAuT,EAAAxU,OAAAiB,EAAAtB,EAAAA,IAAA2F,EAAAkP,EAAA7U,GAAcO,EAAAoF,EAAA,GAAGlF,EAAAkF,EAAA,GAAjBiH,EAAErM,GAAKE,CACP,OAAOmM,IAERjH,EAAsB,WACrB,GAAAmP,EV8rDE,OU9rDFA,GAAK,SAACC,EAAMC,GACX,GAAAzU,GAAAb,EAAAe,CAAA,IAAsB,IAAPuU,GAAgB,MAAAD,GAAyB,gBAAhBA,GAAxC,MAAOA,EACP,IAAGA,YAAgB/S,OAClBtC,EAAA,WV0qDM,GAAIM,GAAGsB,EAAKiI,CAEZ,KU5qDDA,KAAAvJ,EAAA,EAAAsB,EAAAyT,EAAA1U,OAAAiB,EAAAtB,EAAAA,IV6qDGS,EAAIsU,EAAK/U,GU7qDZuJ,EAAArH,KAAA4S,EAAGrU,EAAGuU,EAAI,GVgrDT,OAAOzL,UUjrDd,CAGC7J,IACA,KAAAa,IAAAwU,GVkrDMtU,EAAIsU,EAAKxU,GUlrDfb,EAAEa,GAAKuU,EAAGrU,EAAGuU,EAAI,GAClB,MAAOtV,KACRgS,KAAM,SAACvD,EAAK8G,GV2rDN,MAHa,OAATA,IUxrDEA,EAAM,GAAMH,EAAG3G,EAAK8G,IAChCtD,SAAU,SAACxD,EAAK8G,GVgsDV,MAHa,OAATA,IU7rDMA,EAAMhO,EAAAA,GAAa6N,EAAG3G,EAAK8G,QAV3CvD,EAAA/L,EAAA+L,KAAMC,EAAAhM,EAAAgM,SAYPpE,EAAS,SAACe,GVmsDP,MUnsDgB,YAClB,GAAA1B,GAAA8D,EAAA1Q,EAAAO,EAAAe,EAAAb,CAAA,KADmBiQ,EAAA,GAAAzO,UAAA5B,OAAAsD,EAAAvD,KAAA6B,UAAA,MACnBjC,EAAA,EAAAsB,EAAAoP,EAAArQ,OAAAiB,EAAAtB,EAAAA,IVusDM,GADA4M,EAAI8D,EAAS1Q,GUtsDI,MAAA4M,EACtB,IAAArM,IAAAqM,GVwsDSnM,EAAImM,EAAErM,GACS,MAAX+N,EAAK/N,KUzsDlB+N,EAAK/N,GAAME,EACZ,OAAO6N,KAERqC,EAAS,SAACrC,GVgtDP,MUhtDgB,YAClB,GAAA1B,GAAA5M,EAAAO,EAAAe,EAAAsP,EAAAnQ,CAAA,KADmBmQ,EAAA,GAAA3O,UAAA5B,OAAAsD,EAAAvD,KAAA6B,UAAA,MACnBjC,EAAA,EAAAsB,EAAAsP,EAAAvQ,OAAAiB,EAAAtB,EAAAA,IVotDM,GADA4M,EAAIgE,EAAQ5Q,GUntDI,MAAA4M,EACrB,IAAArM,IAAAqM,GVqtDSnM,EAAImM,EAAErM,GUrtDf+N,EAAK/N,GAAKE,CACX,OAAO6N,KAERyD,EAAW,SAACmD,GACX,GAAAtI,GAAAuI,CAEA,OAFAvI,GAAI8E,EAAKwD,GACTC,EAAWvI,EAAE,EACV,MAAAuI,EACF,WACC,GAAApT,GAAAmG,CV6tDI,OU9tDJnG,GAAA,GAAAE,UAAA5B,OAAAsD,EAAAvD,KAAA6B,UAAA,OACA,OAAAiG,EAAA0E,EAAA7K,EAAA1B,SAAA6H,EAAkBiN,GAAlB/S,MAAA,KAA4BL,IAE7B,WACC,GAAAA,GAAAnD,CACA,IAFAmD,EAAA,GAAAE,UAAA5B,OAAAsD,EAAAvD,KAAA6B,UAAA,MACArD,EAAIgO,EAAE7K,EAAK1B,QACJ,MAAAzB,EACN,KAAMqB,OAAM,8BAA8B8B,EAAK1B,OAAO,QAEtD,OAAOzB,GAAAwD,MAAA,KAAEL,MAGZ+P,IAAAA,EAAKP,OAAAA,EAAQC,SAAAA,EAAUC,WAAAA,EAAYG,KAAAA,EAAMF,KAAAA,EAAMC,SAAAA,EAAUK,SAAAA,EAAUzE,OAAAA,EAAQoD,OAAAA,EAAQoB,SAAAA,IA5IrFjT,EA+IOD,QAAU6E,MVkvDdtD,KAAKf,KAAKU,EAAQ,eAElBqV,SAAW,SAAS,IAAI","file":"global.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.__CoffeeMate = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n(function (global){\nvar k, mate, v;\n\nrequire('./reinforce');\n\nmate = require('./coffee-mate');\n\nfor (k in mate) {\n  v = mate[k];\n  global[k] = v;\n}\n\n\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./coffee-mate\":5,\"./reinforce\":8}],2:[function(require,module,exports){\n// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            currentQueue[queueIndex].run();\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (!draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],3:[function(require,module,exports){\n(function (global){\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.lazy = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nvar this_module,\n  slice = [].slice;\n\nthis_module = function(arg) {\n  var Iterator, LazyList, Symbol, all, any, best, brk, cartProd, concat, cons, drop, dropWhile, enumerate, filter, foldl, foreach, group, groupBy, groupOn, head, iterate, last, lazy, length, list, map, naturals, nil, partition, permutations, primes, randoms, range, ref, repeat, reverse, scanl, sort, sortOn, streak, take, takeWhile, zip, zipWith;\n  Symbol = arg.Symbol;\n  LazyList = function(f) {\n    f[Symbol.iterator] = function() {\n      return f();\n    };\n    f.toString = function() {\n      return \"LazyList\";\n    };\n    return f;\n  };\n  nil = LazyList(function() {\n    return nil;\n  });\n  nil.toString = function() {\n    return 'nil';\n  };\n  Iterator = function(it) {\n    it.next = function() {\n      var r;\n      r = it();\n      return {\n        value: r,\n        done: r === nil\n      };\n    };\n    it.toString = function() {\n      return \"Iterator\";\n    };\n    return it;\n  };\n  naturals = LazyList(function() {\n    var i;\n    i = -1;\n    return Iterator(function() {\n      return ++i;\n    });\n  });\n  range = function() {\n    var args;\n    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    if (args.length === 0) {\n      return naturals;\n    } else if (args.length === 1) {\n      return LazyList(function() {\n        var i, stop;\n        stop = args[0];\n        i = -1;\n        return Iterator(function() {\n          if (++i < stop) {\n            return i;\n          } else {\n            return nil;\n          }\n        });\n      });\n    } else if (args.length === 2) {\n      return LazyList(function() {\n        var i, start, stop;\n        start = args[0], stop = args[1];\n        if (start < stop) {\n          i = start - 1;\n          return Iterator(function() {\n            if (++i < stop) {\n              return i;\n            } else {\n              return nil;\n            }\n          });\n        } else {\n          i = start + 1;\n          return Iterator(function() {\n            if (--i > stop) {\n              return i;\n            } else {\n              return nil;\n            }\n          });\n        }\n      });\n    } else {\n      return LazyList(function() {\n        var i, start, step, stop;\n        start = args[0], stop = args[1], step = args[2];\n        if (stop !== start && (stop - start) * step < 0) {\n          throw 'ERR IN range(): YOU ARE CREATING AN UNLIMITTED RANGE';\n        }\n        i = start - step;\n        if (start < stop) {\n          return Iterator(function() {\n            if ((i += step) < stop) {\n              return i;\n            } else {\n              return nil;\n            }\n          });\n        } else {\n          return Iterator(function() {\n            if ((i += step) > stop) {\n              return i;\n            } else {\n              return nil;\n            }\n          });\n        }\n      });\n    }\n  };\n  primes = LazyList(function() {\n    return filter(function(x) {\n      return all(function(p) {\n        return x % p !== 0;\n      })(takeWhile(function(p) {\n        return p * p <= x;\n      })(range(2, Infinity)));\n    })(range(2, Infinity))();\n  });\n  lazy = function(xs) {\n    var ref;\n    if (typeof xs === 'function') {\n      if (xs[Symbol.iterator] != null) {\n        return xs;\n      } else {\n        return LazyList(xs);\n      }\n    } else if ((ref = xs.constructor) === Array || ref === String) {\n      return LazyList(function() {\n        var i;\n        i = -1;\n        return Iterator(function() {\n          if ((++i) < xs.length) {\n            return xs[i];\n          } else {\n            return nil;\n          }\n        });\n      });\n    } else if (xs[Symbol.iterator] != null) {\n      return LazyList(function() {\n        var it;\n        it = xs[Symbol.iterator]();\n        return Iterator(function() {\n          var r;\n          r = it.next();\n          if (r.done) {\n            return nil;\n          } else {\n            return r.value;\n          }\n        });\n      });\n    } else {\n      throw Error('lazy(xs): xs is neither Array nor Iterable');\n    }\n  };\n  enumerate = function(it) {\n    if ((it[Symbol.iterator] != null) || it instanceof Array) {\n      return zip(naturals, it);\n    } else {\n      return LazyList(function() {\n        var i, keys;\n        keys = Object.keys(it);\n        i = -1;\n        return Iterator(function() {\n          var k;\n          if (++i < keys.length) {\n            return [(k = keys[i]), it[k]];\n          } else {\n            return nil;\n          }\n        });\n      });\n    }\n  };\n  repeat = function(x) {\n    return LazyList(function() {\n      return Iterator(function() {\n        return x;\n      });\n    });\n  };\n  iterate = function(next, init) {\n    return LazyList(function() {\n      var st;\n      st = init;\n      return Iterator(function() {\n        var r;\n        r = st;\n        st = next(st);\n        return r;\n      });\n    });\n  };\n  randoms = (function() {\n    var hash, normal, salt;\n    salt = Math.PI / 3.0;\n    hash = function(x) {\n      x = Math.sin(x + salt) * 1e4;\n      return x - Math.floor(x);\n    };\n    normal = function(seed) {\n      return iterate(hash, hash(seed));\n    };\n    return function(opts) {\n      var k, ref, ref1, s, seed;\n      if (opts == null) {\n        opts = 0;\n      }\n      if (typeof opts === 'number') {\n        return normal(opts);\n      } else {\n        seed = (ref = opts.seed) != null ? ref : 0;\n        range = opts.range;\n        if (range != null) {\n          if (typeof range === 'number') {\n            return map(function(x) {\n              return Math.floor(x * range);\n            })(normal(seed));\n          } else {\n            ref1 = [range[0], range[1] - range[0] + 1], s = ref1[0], k = ref1[1];\n            return map(function(x) {\n              return s + Math.floor(x * k);\n            })(normal(seed));\n          }\n        } else {\n          return normal(seed);\n        }\n      }\n    };\n  })();\n  permutations = (function() {\n    var next_permutation;\n    next_permutation = function(x) {\n      var l, m, r, ref, ref1;\n      x = x.slice(0);\n      l = x.length - 1;\n      while (l >= 1 && x[l] <= x[l - 1]) {\n        --l;\n      }\n      if (l !== 0) {\n        m = x.length - 1;\n        while (m > l - 1 && x[m] <= x[l - 1]) {\n          --m;\n        }\n        ref = [x[l - 1], x[m]], x[m] = ref[0], x[l - 1] = ref[1];\n      }\n      r = x.length - 1;\n      while (l < r) {\n        ref1 = [x[r], x[l]], x[l] = ref1[0], x[r] = ref1[1];\n        ++l;\n        --r;\n      }\n      return x;\n    };\n    return function(xs) {\n      var arr;\n      arr = list(xs);\n      if (arr.length === 0) {\n        return nil;\n      } else {\n        return cons(arr.slice(0))(takeWhile(function(ls) {\n          return json(ls) !== json(arr);\n        })(drop(1)(iterate(next_permutation, arr))));\n      }\n    };\n  })();\n  take = function(n) {\n    return function(xs) {\n      return LazyList(function() {\n        var c, iter;\n        iter = lazy(xs)[Symbol.iterator]();\n        c = -1;\n        return Iterator(function() {\n          if (++c < n) {\n            return iter();\n          } else {\n            return nil;\n          }\n        });\n      });\n    };\n  };\n  takeWhile = function(ok) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter;\n        iter = lazy(xs)[Symbol.iterator]();\n        return Iterator(function() {\n          var x;\n          if ((x = iter()) !== nil && ok(x)) {\n            return x;\n          } else {\n            return nil;\n          }\n        });\n      });\n    };\n  };\n  drop = function(n) {\n    return function(xs) {\n      return LazyList(function() {\n        var finished, i, iter, j, ref;\n        iter = lazy(xs)[Symbol.iterator]();\n        finished = false;\n        for (i = j = 0, ref = n; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n          finished || (finished = iter() === nil);\n          if (finished) {\n            break;\n          }\n        }\n        if (finished) {\n          return function() {\n            return nil;\n          };\n        } else {\n          return iter;\n        }\n      });\n    };\n  };\n  dropWhile = function(ok) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter, x;\n        iter = lazy(xs)[Symbol.iterator]();\n        while (ok(x = iter()) && x !== nil) {\n          null;\n        }\n        return Iterator(function() {\n          var prevx, ref;\n          ref = [x, iter()], prevx = ref[0], x = ref[1];\n          return prevx;\n        });\n      });\n    };\n  };\n  cons = function(x) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter;\n        iter = null;\n        return Iterator(function() {\n          if (iter === null) {\n            iter = lazy(xs)[Symbol.iterator]();\n            return x;\n          } else {\n            return iter();\n          }\n        });\n      });\n    };\n  };\n  map = function(f) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter;\n        iter = lazy(xs)[Symbol.iterator]();\n        return Iterator(function() {\n          var x;\n          if ((x = iter()) !== nil) {\n            return f(x);\n          } else {\n            return nil;\n          }\n        });\n      });\n    };\n  };\n  filter = function(ok) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter;\n        iter = lazy(xs)[Symbol.iterator]();\n        return Iterator(function() {\n          var x;\n          while (!ok(x = iter()) && x !== nil) {\n            null;\n          }\n          return x;\n        });\n      });\n    };\n  };\n  scanl = function(f, r) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter;\n        iter = lazy(xs)[Symbol.iterator]();\n        return Iterator(function() {\n          var got, x;\n          got = r;\n          r = (x = iter()) !== nil ? f(r, x) : nil;\n          return got;\n        });\n      });\n    };\n  };\n  streak = function(n) {\n    if (n < 1) {\n      return nil;\n    } else {\n      return function(xs) {\n        return drop(n - 1)(LazyList(function() {\n          var buf, iter;\n          iter = lazy(xs)[Symbol.iterator]();\n          buf = [];\n          return Iterator(function() {\n            var x;\n            if ((x = iter()) === nil) {\n              return nil;\n            }\n            buf.push(x);\n            if (buf.length > n) {\n              buf.shift(1);\n            }\n            return buf.slice(0);\n          });\n        }));\n      };\n    }\n  };\n  reverse = function(xs) {\n    var ref;\n    if ((ref = xs.constructor) === Array || ref === String) {\n      return LazyList(function() {\n        var i;\n        i = xs.length;\n        return Iterator(function() {\n          if ((--i) >= 0) {\n            return xs[i];\n          } else {\n            return nil;\n          }\n        });\n      });\n    } else {\n      return list(lazy(xs)).reverse();\n    }\n  };\n  sort = function(xs) {\n    var arr;\n    arr = list(lazy(xs));\n    return arr.sort();\n  };\n  sortOn = function(f) {\n    return function(xs) {\n      var arr;\n      arr = list(lazy(xs));\n      return arr.sort(function(a, b) {\n        var fa, fb;\n        return ((fa = f(a)) > (fb = f(b))) - (fa < fb);\n      });\n    };\n  };\n  group = function(xs) {\n    return LazyList(function() {\n      var iter, t, x;\n      iter = lazy(xs)[Symbol.iterator]();\n      t = nil;\n      x = iter();\n      return Iterator(function() {\n        if (x === nil) {\n          return nil;\n        } else if (x !== t) {\n          t = x;\n          return LazyList(function() {\n            return Iterator(function() {\n              var r;\n              if ((r = x) === t) {\n                x = iter();\n                return r;\n              } else {\n                return nil;\n              }\n            });\n          });\n        }\n      });\n    });\n  };\n  groupBy = function(eq) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter, t, x;\n        iter = lazy(xs)[Symbol.iterator]();\n        t = nil;\n        x = iter();\n        return Iterator(function() {\n          if (x === nil) {\n            return nil;\n          } else if (!eq(x, t)) {\n            t = x;\n            return LazyList(function() {\n              return Iterator(function() {\n                var r;\n                if (eq((r = x), t)) {\n                  x = iter();\n                  return r;\n                } else {\n                  return nil;\n                }\n              });\n            });\n          }\n        });\n      });\n    };\n  };\n  groupOn = function(f) {\n    return function(xs) {\n      var k, memo, v;\n      memo = {};\n      foreach(xs, function(x) {\n        var y;\n        y = f(x);\n        if (memo[y] == null) {\n          memo[y] = [];\n        }\n        return memo[y].push(x);\n      });\n      return (function() {\n        var results;\n        results = [];\n        for (k in memo) {\n          v = memo[k];\n          results.push(v);\n        }\n        return results;\n      })();\n    };\n  };\n  partition = function(f) {\n    return function(xs) {\n      var memo;\n      memo = [[], []];\n      foreach(xs, function(x) {\n        var y;\n        y = !f(x) + 0;\n        return memo[y].push(x);\n      });\n      return memo;\n    };\n  };\n  concat = function(xss) {\n    return LazyList(function() {\n      var iter, xs, xs_iter;\n      xs_iter = lazy(xss)[Symbol.iterator]();\n      xs = xs_iter();\n      iter = lazy(xs)[Symbol.iterator]();\n      return Iterator(function() {\n        var x;\n        if ((x = iter()) !== nil) {\n          return x;\n        } else if ((xs = xs_iter()) !== nil) {\n          iter = lazy(xs)[Symbol.iterator]();\n          return iter();\n        } else {\n          return nil;\n        }\n      });\n    });\n  };\n  ref = (function() {\n    var finished, zip, zipWith;\n    finished = function(arr) {\n      var j, len1, x;\n      for (j = 0, len1 = arr.length; j < len1; j++) {\n        x = arr[j];\n        if (x === nil) {\n          return true;\n        }\n      }\n      return false;\n    };\n    zip = function() {\n      var xss;\n      xss = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      return LazyList(function() {\n        var iters, xs;\n        iters = (function() {\n          var j, len1, results;\n          results = [];\n          for (j = 0, len1 = xss.length; j < len1; j++) {\n            xs = xss[j];\n            results.push(lazy(xs)[Symbol.iterator]());\n          }\n          return results;\n        })();\n        return Iterator(function() {\n          var iter, next;\n          next = (function() {\n            var j, len1, results;\n            results = [];\n            for (j = 0, len1 = iters.length; j < len1; j++) {\n              iter = iters[j];\n              results.push(iter());\n            }\n            return results;\n          })();\n          if (finished(next)) {\n            return nil;\n          } else {\n            return next;\n          }\n        });\n      });\n    };\n    zipWith = function(f) {\n      return function() {\n        var xss;\n        xss = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        return LazyList(function() {\n          var iters, xs;\n          iters = (function() {\n            var j, len1, results;\n            results = [];\n            for (j = 0, len1 = xss.length; j < len1; j++) {\n              xs = xss[j];\n              results.push(lazy(xs)[Symbol.iterator]());\n            }\n            return results;\n          })();\n          return Iterator(function() {\n            var iter, next;\n            next = (function() {\n              var j, len1, results;\n              results = [];\n              for (j = 0, len1 = iters.length; j < len1; j++) {\n                iter = iters[j];\n                results.push(iter());\n              }\n              return results;\n            })();\n            if (finished(next)) {\n              return nil;\n            } else {\n              return f.apply(null, next);\n            }\n          });\n        });\n      };\n    };\n    return {\n      zip: zip,\n      zipWith: zipWith\n    };\n  })(), zip = ref.zip, zipWith = ref.zipWith;\n  cartProd = (function() {\n    var apply_vector, inc_vector;\n    inc_vector = function(limits) {\n      var len_minus_1;\n      len_minus_1 = limits.length - 1;\n      return function(vec) {\n        var i;\n        i = len_minus_1;\n        while (!(++vec[i] < limits[i] || i <= 0)) {\n          vec[i--] = 0;\n        }\n        return vec;\n      };\n    };\n    apply_vector = function(space) {\n      var len;\n      len = space.length;\n      return function(vec) {\n        var i, j, ref1, results;\n        results = [];\n        for (i = j = 0, ref1 = len; 0 <= ref1 ? j < ref1 : j > ref1; i = 0 <= ref1 ? ++j : --j) {\n          results.push(space[i][vec[i]]);\n        }\n        return results;\n      };\n    };\n    return function() {\n      var xss;\n      xss = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      return LazyList(function() {\n        var get_value, i, inc, j, len, len1, limits, v, xs;\n        xss = (function() {\n          var j, len1, results;\n          results = [];\n          for (j = 0, len1 = xss.length; j < len1; j++) {\n            xs = xss[j];\n            results.push(list(xs));\n          }\n          return results;\n        })();\n        limits = (function() {\n          var j, ref1, results;\n          results = [];\n          for (i = j = 0, ref1 = xss.length; 0 <= ref1 ? j < ref1 : j > ref1; i = 0 <= ref1 ? ++j : --j) {\n            results.push(xss[i].length);\n          }\n          return results;\n        })();\n        for (j = 0, len1 = limits.length; j < len1; j++) {\n          len = limits[j];\n          if (len === 0) {\n            return nil;\n          }\n        }\n        inc = inc_vector(limits);\n        get_value = apply_vector(xss);\n        v = (function() {\n          var o, ref1, results;\n          results = [];\n          for (i = o = 0, ref1 = xss.length; 0 <= ref1 ? o < ref1 : o > ref1; i = 0 <= ref1 ? ++o : --o) {\n            results.push(0);\n          }\n          return results;\n        })();\n        return Iterator(function() {\n          var r;\n          if (v[0] < limits[0]) {\n            r = get_value(v);\n            inc(v);\n            return r;\n          } else {\n            return nil;\n          }\n        });\n      });\n    };\n  })();\n  list = function(xs) {\n    var it, n, results, results1, x;\n    if (xs instanceof Array) {\n      return xs;\n    } else if (typeof xs === 'function') {\n      it = xs[Symbol.iterator]();\n      results = [];\n      while ((x = it()) !== nil) {\n        results.push(x);\n      }\n      return results;\n    } else if (xs[Symbol.iterator] != null) {\n      it = lazy(xs)[Symbol.iterator]();\n      results1 = [];\n      while ((x = it()) !== nil) {\n        results1.push(x);\n      }\n      return results1;\n    } else if (typeof xs === 'number') {\n      n = xs;\n      return function(xs) {\n        return list(take(n)(xs));\n      };\n    } else {\n      throw Error('list(xs): xs is neither Array nor Iterable');\n    }\n  };\n  head = function(xs) {\n    var iter, ref1, ref2;\n    if ((ref1 = xs.constructor) === Array || ref1 === String) {\n      return (ref2 = xs[0]) != null ? ref2 : nil;\n    } else {\n      iter = lazy(xs)[Symbol.iterator]();\n      return iter();\n    }\n  };\n  last = function(xs) {\n    var iter, r, ref1, ref2, x;\n    if ((ref1 = xs.constructor) === Array || ref1 === String) {\n      return (ref2 = xs[xs.length - 1]) != null ? ref2 : nil;\n    } else {\n      iter = lazy(xs)[Symbol.iterator]();\n      r = nil;\n      while ((x = iter()) !== nil) {\n        r = x;\n      }\n      return r;\n    }\n  };\n  length = function(xs) {\n    var iter, r, ref1, x;\n    if ((ref1 = xs.constructor) === Array || ref1 === String) {\n      return xs.length;\n    } else {\n      iter = lazy(xs)[Symbol.iterator]();\n      r = 0;\n      while ((x = iter()) !== nil) {\n        ++r;\n      }\n      return r;\n    }\n  };\n  foldl = function(f, init) {\n    return function(xs) {\n      var iter, r, x;\n      r = init;\n      iter = lazy(xs)[Symbol.iterator]();\n      while ((x = iter()) !== nil) {\n        r = f(r, x);\n      }\n      return r;\n    };\n  };\n  best = function(better) {\n    return function(xs) {\n      var it, iter, r;\n      iter = lazy(xs)[Symbol.iterator]();\n      if ((r = iter()) === nil) {\n        return null;\n      }\n      while ((it = iter()) !== nil) {\n        r = better(it, r) ? it : r;\n      }\n      return r;\n    };\n  };\n  all = function(f) {\n    if (typeof f !== 'function') {\n      f = (function(x) {\n        return x === f;\n      });\n    }\n    return function(xs) {\n      var iter, x;\n      iter = lazy(xs)[Symbol.iterator]();\n      while ((x = iter()) !== nil) {\n        if (!f(x)) {\n          return false;\n        }\n      }\n      return true;\n    };\n  };\n  any = function(f) {\n    var all_not;\n    all_not = all(function(x) {\n      return !f(x);\n    });\n    return function(xs) {\n      return !(all_not(xs));\n    };\n  };\n  brk = function() {\n    return brk;\n  };\n  brk.toString = function() {\n    return 'foreach.break';\n  };\n  foreach = function(xs, callback, fruit) {\n    var iter, x;\n    iter = lazy(xs)[Symbol.iterator]();\n    while ((x = iter()) !== nil) {\n      if (callback(x, fruit) === brk) {\n        break;\n      }\n    }\n    return fruit;\n  };\n  Object.defineProperties(foreach, {\n    \"break\": {\n      writable: false,\n      configurable: false,\n      enumerable: false,\n      value: brk\n    }\n  });\n  return {\n    nil: nil,\n    LazyList: LazyList,\n    Iterator: Iterator,\n    Symbol: Symbol,\n    naturals: naturals,\n    range: range,\n    primes: primes,\n    lazy: lazy,\n    enumerate: enumerate,\n    repeat: repeat,\n    iterate: iterate,\n    randoms: randoms,\n    permutations: permutations,\n    cons: cons,\n    map: map,\n    filter: filter,\n    take: take,\n    takeWhile: takeWhile,\n    drop: drop,\n    dropWhile: dropWhile,\n    scanl: scanl,\n    streak: streak,\n    reverse: reverse,\n    sort: sort,\n    sortOn: sortOn,\n    group: group,\n    groupBy: groupBy,\n    groupOn: groupOn,\n    partition: partition,\n    concat: concat,\n    zip: zip,\n    zipWith: zipWith,\n    cartProd: cartProd,\n    list: list,\n    head: head,\n    last: last,\n    length: length,\n    foldl: foldl,\n    best: best,\n    all: all,\n    any: any,\n    foreach: foreach\n  };\n};\n\nmodule.exports = this_module({\n  Symbol: typeof Symbol !== \"undefined\" && Symbol !== null ? Symbol : {\n    iterator: 'iter'\n  }\n});\n\n\n},{}]},{},[1])(1)\n});\n\n\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],4:[function(require,module,exports){\nvar this_module,\n  slice = [].slice;\n\nthis_module = function(arg) {\n  var abs, accept_multi_or_array, best, ceil, combine, curry2, curry3, equal, flip, floor, greaterEqual, greaterThan, lessEqual, lessThan, max, max_index, min, min_index, minus, notEqual, pack, pluck, plus, precise, seek, sum, uncurry2, uncurry3, unpack;\n  best = arg.best;\n  flip = function(f) {\n    return function(x) {\n      return function(y) {\n        return f(y)(x);\n      };\n    };\n  };\n  combine = function(f) {\n    return function(g) {\n      return function(x) {\n        return f(g(x));\n      };\n    };\n  };\n  curry2 = function(f) {\n    return function(a) {\n      return function(b) {\n        return f(a, b);\n      };\n    };\n  };\n  curry3 = function(f) {\n    return function(a) {\n      return function(b) {\n        return function(c) {\n          return f(a, b, c);\n        };\n      };\n    };\n  };\n  uncurry2 = function(f) {\n    return function(a, b) {\n      return f(a)(b);\n    };\n  };\n  uncurry3 = function(f) {\n    return function(a, b, c) {\n      return f(a)(b)(c);\n    };\n  };\n  pack = function(f) {\n    return function(arr) {\n      return f.apply(null, arr);\n    };\n  };\n  unpack = function(f) {\n    return function() {\n      var arr;\n      arr = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      return f(arr);\n    };\n  };\n  seek = function(arr) {\n    return function(i) {\n      return arr[i];\n    };\n  };\n  pluck = function(attr) {\n    return function(d) {\n      return d[attr];\n    };\n  };\n  equal = function(it) {\n    return function(x) {\n      return x === it;\n    };\n  };\n  notEqual = function(it) {\n    return function(x) {\n      return x !== it;\n    };\n  };\n  lessThan = function(it) {\n    return function(x) {\n      return x < it;\n    };\n  };\n  greaterThan = function(it) {\n    return function(x) {\n      return x > it;\n    };\n  };\n  lessEqual = function(it) {\n    return function(x) {\n      return x <= it;\n    };\n  };\n  greaterEqual = function(it) {\n    return function(x) {\n      return x >= it;\n    };\n  };\n  plus = function(it) {\n    return function(x) {\n      return x + it;\n    };\n  };\n  minus = function(it) {\n    return function(x) {\n      return x - it;\n    };\n  };\n  abs = Math.abs;\n  floor = Math.floor;\n  ceil = Math.ceil;\n  precise = function(n) {\n    return function(x) {\n      return parseFloat(x.toPrecision(n));\n    };\n  };\n  accept_multi_or_array = function(f) {\n    return function() {\n      var arr;\n      arr = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      return f(arr.length === 1 && arr.first instanceof Array ? arr.first : arr);\n    };\n  };\n  sum = accept_multi_or_array(function(arr) {\n    var k, len, r, x;\n    if (arr.length === 1 && arr.first instanceof Array) {\n      arr = arr.first;\n    }\n    r = 0;\n    for (k = 0, len = arr.length; k < len; k++) {\n      x = arr[k];\n      r += x;\n    }\n    return r;\n  });\n  max = accept_multi_or_array(function(arr) {\n    return best(function(a, b) {\n      return a > b;\n    })(arr);\n  });\n  min = accept_multi_or_array(function(arr) {\n    return best(function(a, b) {\n      return a < b;\n    })(arr);\n  });\n  max_index = accept_multi_or_array(function(arr) {\n    var k, ref, results;\n    return best(function(i, j) {\n      return arr[i] > arr[j];\n    })((function() {\n      results = [];\n      for (var k = 0, ref = arr.length; 0 <= ref ? k < ref : k > ref; 0 <= ref ? k++ : k--){ results.push(k); }\n      return results;\n    }).apply(this));\n  });\n  min_index = accept_multi_or_array(function(arr) {\n    var k, ref, results;\n    return best(function(i, j) {\n      return arr[i] < arr[j];\n    })((function() {\n      results = [];\n      for (var k = 0, ref = arr.length; 0 <= ref ? k < ref : k > ref; 0 <= ref ? k++ : k--){ results.push(k); }\n      return results;\n    }).apply(this));\n  });\n  return {\n    flip: flip,\n    combine: combine,\n    curry2: curry2,\n    curry3: curry3,\n    uncurry2: uncurry2,\n    uncurry3: uncurry3,\n    pack: pack,\n    unpack: unpack,\n    seek: seek,\n    pluck: pluck,\n    equal: equal,\n    notEqual: notEqual,\n    lessThan: lessThan,\n    lessEqual: lessEqual,\n    greaterThan: greaterThan,\n    greaterEqual: greaterEqual,\n    plus: plus,\n    minus: minus,\n    abs: abs,\n    floor: floor,\n    ceil: ceil,\n    precise: precise,\n    sum: sum,\n    max: max,\n    min: min,\n    max_index: max_index,\n    min_index: min_index\n  };\n};\n\nmodule.exports = this_module({\n  best: require('lazy.coffee').best\n});\n\n\n},{\"lazy.coffee\":3}],5:[function(require,module,exports){\nvar basics, convertors, funny, lazy, url_helpers, utils;\n\nutils = require('./utils');\n\nbasics = require('./basics');\n\nlazy = require('lazy.coffee');\n\nfunny = require('./funny');\n\nconvertors = require('./convertors');\n\nurl_helpers = require('./url-helpers');\n\nmodule.exports = utils.extend({})(utils, basics, lazy, funny, convertors, url_helpers);\n\n\n},{\"./basics\":4,\"./convertors\":6,\"./funny\":7,\"./url-helpers\":9,\"./utils\":10,\"lazy.coffee\":3}],6:[function(require,module,exports){\nvar this_module;\n\nthis_module = function() {\n  var bool, chr, float, hex, int, json, obj, ord, str;\n  int = function(s, base) {\n    var r;\n    if (typeof s === 'string') {\n      r = parseInt(s, base);\n      if (!((s.slice != null) && r === parseInt(s.slice(0, -1), base))) {\n        return r;\n      } else {\n        return null;\n      }\n    } else {\n      return parseInt(0 + s);\n    }\n  };\n  float = function(s) {\n    if (/^-?[0-9]*(\\.[0-9]+)?([eE]-?[0-9]+)?$/.test(s)) {\n      return parseFloat(s);\n    } else {\n      return null;\n    }\n  };\n  str = function(x, base) {\n    return x.toString(base);\n  };\n  bool = function(x) {\n    if (x === true || x === false) {\n      return x;\n    } else {\n      return null;\n    }\n  };\n  hex = function(x) {\n    return x.toString(16);\n  };\n  ord = function(c) {\n    return c.charCodeAt();\n  };\n  chr = function(x) {\n    return String.fromCharCode(x);\n  };\n  json = function(it, indent) {\n    return JSON.stringify(it, null, indent);\n  };\n  obj = function(s) {\n    return JSON.parse(s);\n  };\n  return {\n    int: int,\n    float: float,\n    bool: bool,\n    str: str,\n    hex: hex,\n    ord: ord,\n    chr: chr,\n    json: json,\n    obj: obj\n  };\n};\n\nmodule.exports = this_module();\n\n\n},{}],7:[function(require,module,exports){\nvar this_module,\n  slice = [].slice;\n\nthis_module = function() {\n  var Y, church, fix, memoFix, memoize;\n  church = function(n) {\n    var iter;\n    iter = function(f, n, r) {\n      if (n === 0) {\n        return r;\n      } else {\n        return iter(f, n - 1, f(r));\n      }\n    };\n    return function(f) {\n      return function(x) {\n        return iter(f, n + 0, x);\n      };\n    };\n  };\n  Y = function(f) {\n    return (function(x) {\n      return x(x);\n    })((function(x) {\n      return f((function(y) {\n        return (x(x))(y);\n      }));\n    }));\n  };\n  memoize = function(f, get_key) {\n    var cache;\n    if (get_key == null) {\n      get_key = (function() {\n        var args;\n        args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        return json(args);\n      });\n    }\n    cache = {};\n    return function() {\n      var args, cached, key, r;\n      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      key = get_key.apply(null, args);\n      cached = cache[key];\n      if (cached != null) {\n        return cached;\n      } else {\n        r = f.apply(null, args);\n        cache[key] = r;\n        return r;\n      }\n    };\n  };\n  fix = Y;\n  memoFix = function(ff) {\n    var f;\n    f = memoize(ff((function() {\n      var args;\n      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      return f.apply(null, args);\n    })));\n    return f;\n  };\n  return {\n    church: church,\n    Y: Y,\n    memoize: memoize,\n    fix: fix,\n    memoFix: memoFix\n  };\n};\n\nmodule.exports = this_module();\n\n\n},{}],8:[function(require,module,exports){\nvar this_module,\n  slice = [].slice;\n\nthis_module = function(arg) {\n  var Array, Object, String;\n  String = arg.String, Array = arg.Array, Object = arg.Object;\n  Object.defineProperties(String.prototype, {\n    format: {\n      enumerable: false,\n      value: function(args) {\n        return this.replace(/\\{(\\w+)\\}/g, function(m, i) {\n          if (args[i] != null) {\n            return args[i];\n          } else {\n            return m;\n          }\n        });\n      }\n    },\n    repeat: {\n      enumerable: false,\n      value: function(n) {\n        var pat, r, ref;\n        ref = ['', this], r = ref[0], pat = ref[1];\n        while (n > 0) {\n          if (n & 1) {\n            r += pat;\n          }\n          n >>= 1;\n          pat += pat;\n        }\n        return r;\n      }\n    },\n    cut: {\n      enumerable: false,\n      value: function(start_pat, end_pat) {\n        var i, j;\n        i = this.search(start_pat) + 1;\n        if (i === 0) {\n          return null;\n        }\n        j = this.substr(i).search(end_pat);\n        if (j === -1) {\n          return null;\n        }\n        return this.substr(i, j);\n      }\n    }\n  });\n  Object.defineProperties(Array.prototype, {\n    first: {\n      get: function() {\n        return this[0];\n      },\n      set: function(v) {\n        return this[0] = v;\n      }\n    },\n    second: {\n      get: function() {\n        return this[1];\n      },\n      set: function(v) {\n        return this[1] = v;\n      }\n    },\n    third: {\n      get: function() {\n        return this[2];\n      },\n      set: function(v) {\n        return this[2] = v;\n      }\n    },\n    last: {\n      get: function() {\n        return this[this.length - 1];\n      },\n      set: function(v) {\n        return this[this.length - 1] = v;\n      }\n    },\n    repeat: {\n      enumerable: false,\n      value: function(n) {\n        var pat, r, ref;\n        ref = [[], this], r = ref[0], pat = ref[1];\n        while (n > 0) {\n          if (n & 1) {\n            r = r.concat(pat);\n          }\n          n >>= 1;\n          pat = pat.concat(pat);\n        }\n        return r;\n      }\n    },\n    unique: {\n      enumerable: false,\n      value: (function() {\n        var init;\n        init = new Object;\n        return function(equal) {\n          var i, j, l, len, len1, o, t, x;\n          i = 0;\n          t = init;\n          if (equal == null) {\n            for (j = l = 0, len = this.length; l < len; j = ++l) {\n              x = this[j];\n              if (!(x !== t)) {\n                continue;\n              }\n              this[i] = t = x;\n              i += 1;\n            }\n          } else {\n            for (j = o = 0, len1 = this.length; o < len1; j = ++o) {\n              x = this[j];\n              if (!(t === init || !equal(x, t))) {\n                continue;\n              }\n              this[i] = t = x;\n              i += 1;\n            }\n          }\n          this.splice(i, Infinity);\n          return this;\n        };\n      })()\n    }\n  });\n  Object.defineProperties(Object, {\n    size: {\n      enumerable: false,\n      value: function(d) {\n        return Object.keys(d).length;\n      }\n    },\n    extend: {\n      enumerable: false,\n      value: function() {\n        var base, d, defaults, k, l, len, v;\n        base = arguments[0], defaults = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n        for (l = 0, len = defaults.length; l < len; l++) {\n          d = defaults[l];\n          if (d != null) {\n            for (k in d) {\n              v = d[k];\n              if (base[k] == null) {\n                base[k] = v;\n              }\n            }\n          }\n        }\n        return base;\n      }\n    },\n    update: {\n      enumerable: false,\n      value: function() {\n        var base, d, k, l, len, updates, v;\n        base = arguments[0], updates = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n        for (l = 0, len = updates.length; l < len; l++) {\n          d = updates[l];\n          if (d != null) {\n            for (k in d) {\n              v = d[k];\n              base[k] = v;\n            }\n          }\n        }\n        return base;\n      }\n    }\n  });\n  return {\n    String: String,\n    Array: Array,\n    Object: Object\n  };\n};\n\nmodule.exports = this_module({\n  String: String,\n  Array: Array,\n  Object: Object\n});\n\n\n},{}],9:[function(require,module,exports){\nvar this_module;\n\nthis_module = function() {\n  var uri_decoder, uri_encoder;\n  uri_encoder = function(component_packer) {\n    if (component_packer == null) {\n      component_packer = str;\n    }\n    return function(obj) {\n      var k, v;\n      return ((function() {\n        var results;\n        results = [];\n        for (k in obj) {\n          v = obj[k];\n          results.push((encodeURIComponent(k)) + \"=\" + (encodeURIComponent(component_packer(v))));\n        }\n        return results;\n      })()).join('&');\n    };\n  };\n  uri_decoder = function(component_unpacker) {\n    if (component_unpacker == null) {\n      component_unpacker = (function(s) {\n        return s;\n      });\n    }\n    return function(str) {\n      var d, i, j, k, len, ref, ref1, ref2, s, v;\n      d = {};\n      ref1 = (ref = str.match(/[^?=&]+=[^&]*/g)) != null ? ref : [];\n      for (i = 0, len = ref1.length; i < len; i++) {\n        s = ref1[i];\n        ref2 = s.match(/([^=]+)=(.*)/), j = ref2.length - 2, k = ref2[j++], v = ref2[j++];\n        d[decodeURIComponent(k)] = component_unpacker(decodeURIComponent(v));\n      }\n      return d;\n    };\n  };\n  return {\n    uri_encoder: uri_encoder,\n    uri_decoder: uri_decoder\n  };\n};\n\nmodule.exports = this_module();\n\n\n},{}],10:[function(require,module,exports){\n(function (process){\nvar this_module,\n  slice = [].slice;\n\nthis_module = function() {\n  var assert, assertEq, assertEqOn, copy, deepcopy, dict, extend, function_literal, log, overload, ref, securely, time_now, update;\n  function_literal = function(f) {\n    var expr;\n    expr = f.toString().replace(/^\\s*function\\s?\\(\\s?\\)\\s?{\\s*return\\s*([^]*?);?\\s*}$/, '$1');\n    if (expr.length <= 100) {\n      expr = expr.replace(/[\\r\\n]{1,2}\\s*/g, '');\n    }\n    return expr;\n  };\n  time_now = function() {\n    return (new Date).getTime();\n  };\n  log = (function() {\n    var dye, factory, got, histories, log_label;\n    dye = (function() {\n      var cavailable, palette;\n      cavailable = (typeof window === \"undefined\" || window === null) && (typeof process !== \"undefined\" && process !== null) && !process.env.NODE_DISABLE_COLORS;\n      palette = {\n        bold: '\\x1B[0;1m',\n        red: '\\x1B[0;31m',\n        green: '\\x1B[0;32m',\n        yellow: '\\x1B[0;33m',\n        blue: '\\x1B[0;34m',\n        bold_grey: '\\x1B[1;30m'\n      };\n      if (!cavailable) {\n        return function(color) {\n          return function(s) {\n            return s;\n          };\n        };\n      } else {\n        return function(color) {\n          return function(s) {\n            return \"\" + palette[color] + s + '\\x1B[0m';\n          };\n        };\n      }\n    })();\n    log_label = (function() {\n      var flag_palette, op_flag;\n      flag_palette = {\n        '#': 'bold_grey',\n        'I': 'green',\n        'E': 'red',\n        'W': 'yellow'\n      };\n      op_flag = function(op) {\n        if (op === 'log') {\n          return '#';\n        } else {\n          return op[0].toUpperCase();\n        }\n      };\n      return function(op) {\n        var flag;\n        flag = op_flag(op);\n        return dye(flag_palette[flag])(flag);\n      };\n    })();\n    histories = [];\n    factory = function(op) {\n      var prefix;\n      prefix = \"\" + (dye('bold_grey')('#')) + (log_label(op));\n      return function() {\n        var args, ball, eval_result, expr, f, i, len, start_time, time_used;\n        args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        ball = [];\n        for (i = 0, len = args.length; i < len; i++) {\n          f = args[i];\n          if (typeof f === 'function') {\n            expr = function_literal(f);\n            start_time = time_now();\n            eval_result = f();\n            time_used = time_now() - start_time;\n            ball.push(prefix + \" \" + (dye('green')(expr)) + \" \" + (dye('bold_grey')('==>')), eval_result);\n            if (time_used > 0) {\n              ball.push(dye('yellow')(\"[\" + time_used + \"ms]\"));\n            }\n          } else {\n            ball.push(\"\" + prefix, f);\n          }\n        }\n        console[op].apply(console, ball);\n        histories.push(ball);\n        if (histories.length >= 10) {\n          histories.shift();\n        }\n        return null;\n      };\n    };\n    got = factory('log');\n    got.histories = histories;\n    got.info = factory('info');\n    got.warn = factory('warn');\n    got.error = got.err = factory('error');\n    return got;\n  })();\n  assert = function(f, msg) {\n    var e, r, ref;\n    if (!(f instanceof Function)) {\n      ref = [msg, f], f = ref[0], msg = ref[1];\n    }\n    try {\n      r = f();\n    } catch (_error) {\n      e = _error;\n      throw Error(\"Assertion \" + (msg != null ? msg : function_literal(f)) + \" Unknown:\\n\" + e);\n    }\n    if (!r) {\n      throw Error(\"Assertion \" + (msg != null ? msg : function_literal(f)) + \" Failed!\");\n    }\n  };\n  assertEq = function(l, r) {\n    var e, lv, rv;\n    try {\n      lv = l();\n      rv = r();\n    } catch (_error) {\n      e = _error;\n      throw Error(\"Equation Between \" + (function_literal(l)) + \" And \" + (function_literal(r)) + \" Unknown:\\n\" + e);\n    }\n    if (lv !== rv) {\n      throw Error(\"Equation Failed:\\n\\t\" + (function_literal(l)) + \" IS \" + lv + \" BUT\\n\\t\" + (function_literal(r)) + \" IS \" + rv + \".\");\n    }\n  };\n  assertEqOn = function(f) {\n    return function(l, r) {\n      var e, flv, frv, lv, rv;\n      try {\n        lv = l();\n        rv = r();\n        flv = f(lv);\n        frv = f(rv);\n      } catch (_error) {\n        e = _error;\n        throw Error(\"MAPPED Equation Between \" + (function_literal(l)) + \" And \" + (function_literal(r)) + \" Unknown:\\n\" + e);\n      }\n      if (flv !== frv) {\n        throw Error(\"Equation Failed:\\n\\t\" + (function_literal(l)) + \" IS \" + lv + \" AND MAPPED TO \" + flv + \" BUT\\n\\t\" + (function_literal(r)) + \" IS \" + rv + \" AND MAPPED TO \" + frv + \".\");\n      }\n    };\n  };\n  securely = function(f) {\n    return function() {\n      var args;\n      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      args = deepcopy(args);\n      return f.apply(null, args);\n    };\n  };\n  dict = function(pairs) {\n    var d, i, k, len, ref, v;\n    d = {};\n    for (i = 0, len = pairs.length; i < len; i++) {\n      ref = pairs[i], k = ref[0], v = ref[1];\n      d[k] = v;\n    }\n    return d;\n  };\n  ref = (function() {\n    var cp;\n    cp = function(root, dep) {\n      var k, r, v;\n      if (dep === 0 || (root == null) || typeof root !== 'object') {\n        return root;\n      }\n      if (root instanceof Array) {\n        r = (function() {\n          var i, len, results;\n          results = [];\n          for (i = 0, len = root.length; i < len; i++) {\n            v = root[i];\n            results.push(cp(v, dep - 1));\n          }\n          return results;\n        })();\n      } else {\n        r = {};\n        for (k in root) {\n          v = root[k];\n          r[k] = cp(v, dep - 1);\n        }\n      }\n      return r;\n    };\n    return {\n      copy: function(obj, depth) {\n        if (depth == null) {\n          depth = 1;\n        }\n        return cp(obj, depth);\n      },\n      deepcopy: function(obj, depth) {\n        if (depth == null) {\n          depth = Infinity;\n        }\n        return cp(obj, depth);\n      }\n    };\n  })(), copy = ref.copy, deepcopy = ref.deepcopy;\n  extend = function(base) {\n    return function() {\n      var d, defaults, i, k, len, v;\n      defaults = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      for (i = 0, len = defaults.length; i < len; i++) {\n        d = defaults[i];\n        if (d != null) {\n          for (k in d) {\n            v = d[k];\n            if (base[k] == null) {\n              base[k] = v;\n            }\n          }\n        }\n      }\n      return base;\n    };\n  };\n  update = function(base) {\n    return function() {\n      var d, i, k, len, updates, v;\n      updates = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      for (i = 0, len = updates.length; i < len; i++) {\n        d = updates[i];\n        if (d != null) {\n          for (k in d) {\n            v = d[k];\n            base[k] = v;\n          }\n        }\n      }\n      return base;\n    };\n  };\n  overload = function(_d) {\n    var d, fallback;\n    d = copy(_d);\n    fallback = d['_'];\n    if (fallback != null) {\n      return function() {\n        var args, ref1;\n        args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        return ((ref1 = d[args.length]) != null ? ref1 : fallback).apply(null, args);\n      };\n    } else {\n      return function() {\n        var args, f;\n        args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        f = d[args.length];\n        if (f == null) {\n          throw Error(\"This Function Can't Accept \" + args.length + \" Args\");\n        } else {\n          return f.apply(null, args);\n        }\n      };\n    }\n  };\n  return {\n    log: log,\n    assert: assert,\n    assertEq: assertEq,\n    assertEqOn: assertEqOn,\n    dict: dict,\n    copy: copy,\n    deepcopy: deepcopy,\n    securely: securely,\n    extend: extend,\n    update: update,\n    overload: overload\n  };\n};\n\nmodule.exports = this_module();\n\n\n\n}).call(this,require('_process'))\n\n},{\"_process\":2}]},{},[1])(1)\n});\n\n\n//# sourceMappingURL=global.js.map","require './reinforce'\nmate = require('./coffee-mate')\nglobal[k] = v for k, v of mate\n","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            currentQueue[queueIndex].run();\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (!draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.lazy = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nvar this_module,\n  slice = [].slice;\n\nthis_module = function(arg) {\n  var Iterator, LazyList, Symbol, all, any, best, brk, cartProd, concat, cons, drop, dropWhile, enumerate, filter, foldl, foreach, group, groupBy, groupOn, head, iterate, last, lazy, length, list, map, naturals, nil, partition, permutations, primes, randoms, range, ref, repeat, reverse, scanl, sort, sortOn, streak, take, takeWhile, zip, zipWith;\n  Symbol = arg.Symbol;\n  LazyList = function(f) {\n    f[Symbol.iterator] = function() {\n      return f();\n    };\n    f.toString = function() {\n      return \"LazyList\";\n    };\n    return f;\n  };\n  nil = LazyList(function() {\n    return nil;\n  });\n  nil.toString = function() {\n    return 'nil';\n  };\n  Iterator = function(it) {\n    it.next = function() {\n      var r;\n      r = it();\n      return {\n        value: r,\n        done: r === nil\n      };\n    };\n    it.toString = function() {\n      return \"Iterator\";\n    };\n    return it;\n  };\n  naturals = LazyList(function() {\n    var i;\n    i = -1;\n    return Iterator(function() {\n      return ++i;\n    });\n  });\n  range = function() {\n    var args;\n    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    if (args.length === 0) {\n      return naturals;\n    } else if (args.length === 1) {\n      return LazyList(function() {\n        var i, stop;\n        stop = args[0];\n        i = -1;\n        return Iterator(function() {\n          if (++i < stop) {\n            return i;\n          } else {\n            return nil;\n          }\n        });\n      });\n    } else if (args.length === 2) {\n      return LazyList(function() {\n        var i, start, stop;\n        start = args[0], stop = args[1];\n        if (start < stop) {\n          i = start - 1;\n          return Iterator(function() {\n            if (++i < stop) {\n              return i;\n            } else {\n              return nil;\n            }\n          });\n        } else {\n          i = start + 1;\n          return Iterator(function() {\n            if (--i > stop) {\n              return i;\n            } else {\n              return nil;\n            }\n          });\n        }\n      });\n    } else {\n      return LazyList(function() {\n        var i, start, step, stop;\n        start = args[0], stop = args[1], step = args[2];\n        if (stop !== start && (stop - start) * step < 0) {\n          throw 'ERR IN range(): YOU ARE CREATING AN UNLIMITTED RANGE';\n        }\n        i = start - step;\n        if (start < stop) {\n          return Iterator(function() {\n            if ((i += step) < stop) {\n              return i;\n            } else {\n              return nil;\n            }\n          });\n        } else {\n          return Iterator(function() {\n            if ((i += step) > stop) {\n              return i;\n            } else {\n              return nil;\n            }\n          });\n        }\n      });\n    }\n  };\n  primes = LazyList(function() {\n    return filter(function(x) {\n      return all(function(p) {\n        return x % p !== 0;\n      })(takeWhile(function(p) {\n        return p * p <= x;\n      })(range(2, Infinity)));\n    })(range(2, Infinity))();\n  });\n  lazy = function(xs) {\n    var ref;\n    if (typeof xs === 'function') {\n      if (xs[Symbol.iterator] != null) {\n        return xs;\n      } else {\n        return LazyList(xs);\n      }\n    } else if ((ref = xs.constructor) === Array || ref === String) {\n      return LazyList(function() {\n        var i;\n        i = -1;\n        return Iterator(function() {\n          if ((++i) < xs.length) {\n            return xs[i];\n          } else {\n            return nil;\n          }\n        });\n      });\n    } else if (xs[Symbol.iterator] != null) {\n      return LazyList(function() {\n        var it;\n        it = xs[Symbol.iterator]();\n        return Iterator(function() {\n          var r;\n          r = it.next();\n          if (r.done) {\n            return nil;\n          } else {\n            return r.value;\n          }\n        });\n      });\n    } else {\n      throw Error('lazy(xs): xs is neither Array nor Iterable');\n    }\n  };\n  enumerate = function(it) {\n    if ((it[Symbol.iterator] != null) || it instanceof Array) {\n      return zip(naturals, it);\n    } else {\n      return LazyList(function() {\n        var i, keys;\n        keys = Object.keys(it);\n        i = -1;\n        return Iterator(function() {\n          var k;\n          if (++i < keys.length) {\n            return [(k = keys[i]), it[k]];\n          } else {\n            return nil;\n          }\n        });\n      });\n    }\n  };\n  repeat = function(x) {\n    return LazyList(function() {\n      return Iterator(function() {\n        return x;\n      });\n    });\n  };\n  iterate = function(next, init) {\n    return LazyList(function() {\n      var st;\n      st = init;\n      return Iterator(function() {\n        var r;\n        r = st;\n        st = next(st);\n        return r;\n      });\n    });\n  };\n  randoms = (function() {\n    var hash, normal, salt;\n    salt = Math.PI / 3.0;\n    hash = function(x) {\n      x = Math.sin(x + salt) * 1e4;\n      return x - Math.floor(x);\n    };\n    normal = function(seed) {\n      return iterate(hash, hash(seed));\n    };\n    return function(opts) {\n      var k, ref, ref1, s, seed;\n      if (opts == null) {\n        opts = 0;\n      }\n      if (typeof opts === 'number') {\n        return normal(opts);\n      } else {\n        seed = (ref = opts.seed) != null ? ref : 0;\n        range = opts.range;\n        if (range != null) {\n          if (typeof range === 'number') {\n            return map(function(x) {\n              return Math.floor(x * range);\n            })(normal(seed));\n          } else {\n            ref1 = [range[0], range[1] - range[0] + 1], s = ref1[0], k = ref1[1];\n            return map(function(x) {\n              return s + Math.floor(x * k);\n            })(normal(seed));\n          }\n        } else {\n          return normal(seed);\n        }\n      }\n    };\n  })();\n  permutations = (function() {\n    var next_permutation;\n    next_permutation = function(x) {\n      var l, m, r, ref, ref1;\n      x = x.slice(0);\n      l = x.length - 1;\n      while (l >= 1 && x[l] <= x[l - 1]) {\n        --l;\n      }\n      if (l !== 0) {\n        m = x.length - 1;\n        while (m > l - 1 && x[m] <= x[l - 1]) {\n          --m;\n        }\n        ref = [x[l - 1], x[m]], x[m] = ref[0], x[l - 1] = ref[1];\n      }\n      r = x.length - 1;\n      while (l < r) {\n        ref1 = [x[r], x[l]], x[l] = ref1[0], x[r] = ref1[1];\n        ++l;\n        --r;\n      }\n      return x;\n    };\n    return function(xs) {\n      var arr;\n      arr = list(xs);\n      if (arr.length === 0) {\n        return nil;\n      } else {\n        return cons(arr.slice(0))(takeWhile(function(ls) {\n          return json(ls) !== json(arr);\n        })(drop(1)(iterate(next_permutation, arr))));\n      }\n    };\n  })();\n  take = function(n) {\n    return function(xs) {\n      return LazyList(function() {\n        var c, iter;\n        iter = lazy(xs)[Symbol.iterator]();\n        c = -1;\n        return Iterator(function() {\n          if (++c < n) {\n            return iter();\n          } else {\n            return nil;\n          }\n        });\n      });\n    };\n  };\n  takeWhile = function(ok) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter;\n        iter = lazy(xs)[Symbol.iterator]();\n        return Iterator(function() {\n          var x;\n          if ((x = iter()) !== nil && ok(x)) {\n            return x;\n          } else {\n            return nil;\n          }\n        });\n      });\n    };\n  };\n  drop = function(n) {\n    return function(xs) {\n      return LazyList(function() {\n        var finished, i, iter, j, ref;\n        iter = lazy(xs)[Symbol.iterator]();\n        finished = false;\n        for (i = j = 0, ref = n; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n          finished || (finished = iter() === nil);\n          if (finished) {\n            break;\n          }\n        }\n        if (finished) {\n          return function() {\n            return nil;\n          };\n        } else {\n          return iter;\n        }\n      });\n    };\n  };\n  dropWhile = function(ok) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter, x;\n        iter = lazy(xs)[Symbol.iterator]();\n        while (ok(x = iter()) && x !== nil) {\n          null;\n        }\n        return Iterator(function() {\n          var prevx, ref;\n          ref = [x, iter()], prevx = ref[0], x = ref[1];\n          return prevx;\n        });\n      });\n    };\n  };\n  cons = function(x) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter;\n        iter = null;\n        return Iterator(function() {\n          if (iter === null) {\n            iter = lazy(xs)[Symbol.iterator]();\n            return x;\n          } else {\n            return iter();\n          }\n        });\n      });\n    };\n  };\n  map = function(f) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter;\n        iter = lazy(xs)[Symbol.iterator]();\n        return Iterator(function() {\n          var x;\n          if ((x = iter()) !== nil) {\n            return f(x);\n          } else {\n            return nil;\n          }\n        });\n      });\n    };\n  };\n  filter = function(ok) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter;\n        iter = lazy(xs)[Symbol.iterator]();\n        return Iterator(function() {\n          var x;\n          while (!ok(x = iter()) && x !== nil) {\n            null;\n          }\n          return x;\n        });\n      });\n    };\n  };\n  scanl = function(f, r) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter;\n        iter = lazy(xs)[Symbol.iterator]();\n        return Iterator(function() {\n          var got, x;\n          got = r;\n          r = (x = iter()) !== nil ? f(r, x) : nil;\n          return got;\n        });\n      });\n    };\n  };\n  streak = function(n) {\n    if (n < 1) {\n      return nil;\n    } else {\n      return function(xs) {\n        return drop(n - 1)(LazyList(function() {\n          var buf, iter;\n          iter = lazy(xs)[Symbol.iterator]();\n          buf = [];\n          return Iterator(function() {\n            var x;\n            if ((x = iter()) === nil) {\n              return nil;\n            }\n            buf.push(x);\n            if (buf.length > n) {\n              buf.shift(1);\n            }\n            return buf.slice(0);\n          });\n        }));\n      };\n    }\n  };\n  reverse = function(xs) {\n    var ref;\n    if ((ref = xs.constructor) === Array || ref === String) {\n      return LazyList(function() {\n        var i;\n        i = xs.length;\n        return Iterator(function() {\n          if ((--i) >= 0) {\n            return xs[i];\n          } else {\n            return nil;\n          }\n        });\n      });\n    } else {\n      return list(lazy(xs)).reverse();\n    }\n  };\n  sort = function(xs) {\n    var arr;\n    arr = list(lazy(xs));\n    return arr.sort();\n  };\n  sortOn = function(f) {\n    return function(xs) {\n      var arr;\n      arr = list(lazy(xs));\n      return arr.sort(function(a, b) {\n        var fa, fb;\n        return ((fa = f(a)) > (fb = f(b))) - (fa < fb);\n      });\n    };\n  };\n  group = function(xs) {\n    return LazyList(function() {\n      var iter, t, x;\n      iter = lazy(xs)[Symbol.iterator]();\n      t = nil;\n      x = iter();\n      return Iterator(function() {\n        if (x === nil) {\n          return nil;\n        } else if (x !== t) {\n          t = x;\n          return LazyList(function() {\n            return Iterator(function() {\n              var r;\n              if ((r = x) === t) {\n                x = iter();\n                return r;\n              } else {\n                return nil;\n              }\n            });\n          });\n        }\n      });\n    });\n  };\n  groupBy = function(eq) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter, t, x;\n        iter = lazy(xs)[Symbol.iterator]();\n        t = nil;\n        x = iter();\n        return Iterator(function() {\n          if (x === nil) {\n            return nil;\n          } else if (!eq(x, t)) {\n            t = x;\n            return LazyList(function() {\n              return Iterator(function() {\n                var r;\n                if (eq((r = x), t)) {\n                  x = iter();\n                  return r;\n                } else {\n                  return nil;\n                }\n              });\n            });\n          }\n        });\n      });\n    };\n  };\n  groupOn = function(f) {\n    return function(xs) {\n      var k, memo, v;\n      memo = {};\n      foreach(xs, function(x) {\n        var y;\n        y = f(x);\n        if (memo[y] == null) {\n          memo[y] = [];\n        }\n        return memo[y].push(x);\n      });\n      return (function() {\n        var results;\n        results = [];\n        for (k in memo) {\n          v = memo[k];\n          results.push(v);\n        }\n        return results;\n      })();\n    };\n  };\n  partition = function(f) {\n    return function(xs) {\n      var memo;\n      memo = [[], []];\n      foreach(xs, function(x) {\n        var y;\n        y = !f(x) + 0;\n        return memo[y].push(x);\n      });\n      return memo;\n    };\n  };\n  concat = function(xss) {\n    return LazyList(function() {\n      var iter, xs, xs_iter;\n      xs_iter = lazy(xss)[Symbol.iterator]();\n      xs = xs_iter();\n      iter = lazy(xs)[Symbol.iterator]();\n      return Iterator(function() {\n        var x;\n        if ((x = iter()) !== nil) {\n          return x;\n        } else if ((xs = xs_iter()) !== nil) {\n          iter = lazy(xs)[Symbol.iterator]();\n          return iter();\n        } else {\n          return nil;\n        }\n      });\n    });\n  };\n  ref = (function() {\n    var finished, zip, zipWith;\n    finished = function(arr) {\n      var j, len1, x;\n      for (j = 0, len1 = arr.length; j < len1; j++) {\n        x = arr[j];\n        if (x === nil) {\n          return true;\n        }\n      }\n      return false;\n    };\n    zip = function() {\n      var xss;\n      xss = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      return LazyList(function() {\n        var iters, xs;\n        iters = (function() {\n          var j, len1, results;\n          results = [];\n          for (j = 0, len1 = xss.length; j < len1; j++) {\n            xs = xss[j];\n            results.push(lazy(xs)[Symbol.iterator]());\n          }\n          return results;\n        })();\n        return Iterator(function() {\n          var iter, next;\n          next = (function() {\n            var j, len1, results;\n            results = [];\n            for (j = 0, len1 = iters.length; j < len1; j++) {\n              iter = iters[j];\n              results.push(iter());\n            }\n            return results;\n          })();\n          if (finished(next)) {\n            return nil;\n          } else {\n            return next;\n          }\n        });\n      });\n    };\n    zipWith = function(f) {\n      return function() {\n        var xss;\n        xss = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        return LazyList(function() {\n          var iters, xs;\n          iters = (function() {\n            var j, len1, results;\n            results = [];\n            for (j = 0, len1 = xss.length; j < len1; j++) {\n              xs = xss[j];\n              results.push(lazy(xs)[Symbol.iterator]());\n            }\n            return results;\n          })();\n          return Iterator(function() {\n            var iter, next;\n            next = (function() {\n              var j, len1, results;\n              results = [];\n              for (j = 0, len1 = iters.length; j < len1; j++) {\n                iter = iters[j];\n                results.push(iter());\n              }\n              return results;\n            })();\n            if (finished(next)) {\n              return nil;\n            } else {\n              return f.apply(null, next);\n            }\n          });\n        });\n      };\n    };\n    return {\n      zip: zip,\n      zipWith: zipWith\n    };\n  })(), zip = ref.zip, zipWith = ref.zipWith;\n  cartProd = (function() {\n    var apply_vector, inc_vector;\n    inc_vector = function(limits) {\n      var len_minus_1;\n      len_minus_1 = limits.length - 1;\n      return function(vec) {\n        var i;\n        i = len_minus_1;\n        while (!(++vec[i] < limits[i] || i <= 0)) {\n          vec[i--] = 0;\n        }\n        return vec;\n      };\n    };\n    apply_vector = function(space) {\n      var len;\n      len = space.length;\n      return function(vec) {\n        var i, j, ref1, results;\n        results = [];\n        for (i = j = 0, ref1 = len; 0 <= ref1 ? j < ref1 : j > ref1; i = 0 <= ref1 ? ++j : --j) {\n          results.push(space[i][vec[i]]);\n        }\n        return results;\n      };\n    };\n    return function() {\n      var xss;\n      xss = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      return LazyList(function() {\n        var get_value, i, inc, j, len, len1, limits, v, xs;\n        xss = (function() {\n          var j, len1, results;\n          results = [];\n          for (j = 0, len1 = xss.length; j < len1; j++) {\n            xs = xss[j];\n            results.push(list(xs));\n          }\n          return results;\n        })();\n        limits = (function() {\n          var j, ref1, results;\n          results = [];\n          for (i = j = 0, ref1 = xss.length; 0 <= ref1 ? j < ref1 : j > ref1; i = 0 <= ref1 ? ++j : --j) {\n            results.push(xss[i].length);\n          }\n          return results;\n        })();\n        for (j = 0, len1 = limits.length; j < len1; j++) {\n          len = limits[j];\n          if (len === 0) {\n            return nil;\n          }\n        }\n        inc = inc_vector(limits);\n        get_value = apply_vector(xss);\n        v = (function() {\n          var o, ref1, results;\n          results = [];\n          for (i = o = 0, ref1 = xss.length; 0 <= ref1 ? o < ref1 : o > ref1; i = 0 <= ref1 ? ++o : --o) {\n            results.push(0);\n          }\n          return results;\n        })();\n        return Iterator(function() {\n          var r;\n          if (v[0] < limits[0]) {\n            r = get_value(v);\n            inc(v);\n            return r;\n          } else {\n            return nil;\n          }\n        });\n      });\n    };\n  })();\n  list = function(xs) {\n    var it, n, results, results1, x;\n    if (xs instanceof Array) {\n      return xs;\n    } else if (typeof xs === 'function') {\n      it = xs[Symbol.iterator]();\n      results = [];\n      while ((x = it()) !== nil) {\n        results.push(x);\n      }\n      return results;\n    } else if (xs[Symbol.iterator] != null) {\n      it = lazy(xs)[Symbol.iterator]();\n      results1 = [];\n      while ((x = it()) !== nil) {\n        results1.push(x);\n      }\n      return results1;\n    } else if (typeof xs === 'number') {\n      n = xs;\n      return function(xs) {\n        return list(take(n)(xs));\n      };\n    } else {\n      throw Error('list(xs): xs is neither Array nor Iterable');\n    }\n  };\n  head = function(xs) {\n    var iter, ref1, ref2;\n    if ((ref1 = xs.constructor) === Array || ref1 === String) {\n      return (ref2 = xs[0]) != null ? ref2 : nil;\n    } else {\n      iter = lazy(xs)[Symbol.iterator]();\n      return iter();\n    }\n  };\n  last = function(xs) {\n    var iter, r, ref1, ref2, x;\n    if ((ref1 = xs.constructor) === Array || ref1 === String) {\n      return (ref2 = xs[xs.length - 1]) != null ? ref2 : nil;\n    } else {\n      iter = lazy(xs)[Symbol.iterator]();\n      r = nil;\n      while ((x = iter()) !== nil) {\n        r = x;\n      }\n      return r;\n    }\n  };\n  length = function(xs) {\n    var iter, r, ref1, x;\n    if ((ref1 = xs.constructor) === Array || ref1 === String) {\n      return xs.length;\n    } else {\n      iter = lazy(xs)[Symbol.iterator]();\n      r = 0;\n      while ((x = iter()) !== nil) {\n        ++r;\n      }\n      return r;\n    }\n  };\n  foldl = function(f, init) {\n    return function(xs) {\n      var iter, r, x;\n      r = init;\n      iter = lazy(xs)[Symbol.iterator]();\n      while ((x = iter()) !== nil) {\n        r = f(r, x);\n      }\n      return r;\n    };\n  };\n  best = function(better) {\n    return function(xs) {\n      var it, iter, r;\n      iter = lazy(xs)[Symbol.iterator]();\n      if ((r = iter()) === nil) {\n        return null;\n      }\n      while ((it = iter()) !== nil) {\n        r = better(it, r) ? it : r;\n      }\n      return r;\n    };\n  };\n  all = function(f) {\n    if (typeof f !== 'function') {\n      f = (function(x) {\n        return x === f;\n      });\n    }\n    return function(xs) {\n      var iter, x;\n      iter = lazy(xs)[Symbol.iterator]();\n      while ((x = iter()) !== nil) {\n        if (!f(x)) {\n          return false;\n        }\n      }\n      return true;\n    };\n  };\n  any = function(f) {\n    var all_not;\n    all_not = all(function(x) {\n      return !f(x);\n    });\n    return function(xs) {\n      return !(all_not(xs));\n    };\n  };\n  brk = function() {\n    return brk;\n  };\n  brk.toString = function() {\n    return 'foreach.break';\n  };\n  foreach = function(xs, callback, fruit) {\n    var iter, x;\n    iter = lazy(xs)[Symbol.iterator]();\n    while ((x = iter()) !== nil) {\n      if (callback(x, fruit) === brk) {\n        break;\n      }\n    }\n    return fruit;\n  };\n  Object.defineProperties(foreach, {\n    \"break\": {\n      writable: false,\n      configurable: false,\n      enumerable: false,\n      value: brk\n    }\n  });\n  return {\n    nil: nil,\n    LazyList: LazyList,\n    Iterator: Iterator,\n    Symbol: Symbol,\n    naturals: naturals,\n    range: range,\n    primes: primes,\n    lazy: lazy,\n    enumerate: enumerate,\n    repeat: repeat,\n    iterate: iterate,\n    randoms: randoms,\n    permutations: permutations,\n    cons: cons,\n    map: map,\n    filter: filter,\n    take: take,\n    takeWhile: takeWhile,\n    drop: drop,\n    dropWhile: dropWhile,\n    scanl: scanl,\n    streak: streak,\n    reverse: reverse,\n    sort: sort,\n    sortOn: sortOn,\n    group: group,\n    groupBy: groupBy,\n    groupOn: groupOn,\n    partition: partition,\n    concat: concat,\n    zip: zip,\n    zipWith: zipWith,\n    cartProd: cartProd,\n    list: list,\n    head: head,\n    last: last,\n    length: length,\n    foldl: foldl,\n    best: best,\n    all: all,\n    any: any,\n    foreach: foreach\n  };\n};\n\nmodule.exports = this_module({\n  Symbol: typeof Symbol !== \"undefined\" && Symbol !== null ? Symbol : {\n    iterator: 'iter'\n  }\n});\n\n\n},{}]},{},[1])(1)\n});\n\n\n//# sourceMappingURL=lazy.js.map","this_module = ({best}) ->\n\t# transformers\n\tflip = (f) ->\n\t\t(x) -> (y) -> f(y)(x)\n\n\tcombine = (f) -> (g) ->\n\t\t(x) -> f g(x)\n\n\tcurry2 = (f) ->\n\t\t(a) -> (b) -> f(a, b)\n\n\tcurry3 = (f) ->\n\t\t(a) -> (b) -> (c) -> f(a, b, c)\n\n\tuncurry2 = (f) ->\n\t\t(a, b) -> f(a)(b)\n\n\tuncurry3 = (f) ->\n\t\t(a, b, c) -> f(a)(b)(c)\n\n\tpack = (f) ->\n\t\t(arr) -> f(arr...)\n\n\tunpack = (f) ->\n\t\t(arr...) -> f(arr)\n\n\t# seek & pluck in Array or Object\n\tseek = (arr) ->\n\t\t(i) -> arr[i]\n\n\tpluck = (attr) ->\n\t\t(d) -> d[attr]\n\n\t# compare\n\tequal = (it) ->\n\t\t(x) -> x == it\n\n\tnotEqual = (it) ->\n\t\t(x) -> x != it\n\n\tlessThan = (it) ->\n\t\t(x) -> x < it\n\n\tgreaterThan = (it) ->\n\t\t(x) -> x > it\n\n\tlessEqual = (it) ->\n\t\t(x) -> x <= it\n\n\tgreaterEqual = (it) ->\n\t\t(x) -> x >= it\n\n\t# math\n\tplus = (it) ->\n\t\t(x) -> x + it\n\n\tminus = (it) ->\n\t\t(x) -> x - it\n\n\tabs = Math.abs\n\tfloor = Math.floor\n\tceil = Math.ceil\n\n\tprecise = (n) ->\n\t\t(x) -> parseFloat x.toPrecision(n)\n\n\taccept_multi_or_array = (f) ->\n\t\t(arr...) ->\n\t\t\tf(if arr.length == 1 and arr.first instanceof Array then arr.first else arr)\n\n\tsum = accept_multi_or_array (arr) ->\n\t\tarr = arr.first if arr.length == 1 and arr.first instanceof Array\n\t\tr = 0\n\t\tr += x for x in arr\n\t\tr\n\n\tmax = accept_multi_or_array (arr) ->\n\t\tbest((a, b) -> a > b) arr\n\n\tmin = accept_multi_or_array (arr) ->\n\t\tbest((a, b) -> a < b) arr\n\n\tmax_index = accept_multi_or_array (arr) ->\n\t\tbest((i, j) -> arr[i] > arr[j]) [0...arr.length]\n\n\tmin_index = accept_multi_or_array (arr) ->\n\t\tbest((i, j) -> arr[i] < arr[j]) [0...arr.length]\n\n\treturn {\n\t\tflip, combine,\n\t\tcurry2, curry3, uncurry2, uncurry3, pack, unpack,\n\t\tseek, pluck,\n\t\tequal, notEqual, lessThan, lessEqual, greaterThan, greaterEqual,\n\t\tplus, minus, abs, floor, ceil, precise,\n\t\tsum, max, min, max_index, min_index,\n\t}\n\nmodule.exports = this_module\n\tbest: require('lazy.coffee').best\n\n","utils = require './utils'\nbasics = require './basics'\nlazy = require 'lazy.coffee'\nfunny = require './funny'\nconvertors = require './convertors'\nurl_helpers = require './url-helpers'\n\nmodule.exports = utils.extend({}) utils, basics, lazy, funny, convertors, url_helpers\n\n","this_module = () ->\n\tint = (s, base) -> if typeof(s) == 'string' then (r = parseInt(s, base); unless s.slice? and r == parseInt(s.slice(0,-1), base) then r else null) else parseInt(0 + s)\n\tfloat = (s) -> if /^-?[0-9]*(\\.[0-9]+)?([eE]-?[0-9]+)?$/.test(s) then parseFloat(s) else null\n\tstr = (x, base) -> x.toString(base)\n\tbool = (x) -> if x in [true, false] then x else null\n\thex = (x) -> x.toString(16)\n\tord = (c) -> c.charCodeAt()\n\tchr = (x) -> String.fromCharCode(x)\n\tjson = (it, indent) -> JSON.stringify(it, null, indent)\n\tobj = (s) -> JSON.parse(s)\n\n\treturn {\n\t\tint, float, bool, str, hex, ord, chr, json, obj,\n\t}\n\nmodule.exports = this_module()\n\n","this_module = () ->\n\tchurch = (n) -> #the nth church number\n\t\titer = (f, n, r) ->\n\t\t\tif n == 0 then r else iter(f, n - 1, f(r))\n\t\t(f) ->\n\t\t\t(x) -> iter(f, n + 0, x)\n\n\tY = (f) -> #the Y combinator\n\t\t((x) -> (x x)) ((x) -> (f ((y) -> ((x x) y))))\n\n\tmemoize = (f, get_key = ((args...) -> json(args))) ->\n\t\tcache = {}\n\t\t(args...) ->\n\t\t\tkey = get_key(args...)\n\t\t\tcached = cache[key]\n\t\t\tif cached?\n\t\t\t\tcached\n\t\t\telse\n\t\t\t\tr = f(args...)\n\t\t\t\tcache[key] = r\n\t\t\t\tr\n\n\tfix = Y\n\n\tmemoFix = (ff) ->\n\t\tf = memoize (ff ((args...) -> f(args...)))\n\t\treturn f\n\n\treturn {\n\t\tchurch, Y, memoize, fix, memoFix,\n\t}\n\nmodule.exports = this_module()\n\n","this_module = ({String, Array, Object}) ->\n\t# reinforce String\n\n\tObject.defineProperties String.prototype,\n\t\tformat:\n\t\t\tenumerable: false\n\t\t\tvalue: (args) ->\n\t\t\t\t@.replace /\\{(\\w+)\\}/g, (m, i) -> if args[i]? then args[i] else m\n\t\trepeat:\n\t\t\tenumerable: false\n\t\t\tvalue: (n) ->\n\t\t\t\t[r, pat] = ['', @]\n\t\t\t\twhile n > 0\n\t\t\t\t\tr += pat if n & 1\n\t\t\t\t\tn >>= 1\n\t\t\t\t\tpat += pat\n\t\t\t\treturn r\n\t\tcut:\n\t\t\tenumerable: false\n\t\t\tvalue: (start_pat, end_pat) ->\n\t\t\t\ti = @.search(start_pat) + 1\n\t\t\t\treturn null if i == 0\n\t\t\t\tj = @.substr(i).search(end_pat)\n\t\t\t\treturn null if j == -1\n\t\t\t\t@.substr(i, j)\n\n\t# reinforce Array\n\n\tObject.defineProperties Array.prototype,\n\t\tfirst:\n\t\t\tget: -> @[0]\n\t\t\tset: (v) -> @[0] = v\n\t\tsecond:\n\t\t\tget: -> @[1]\n\t\t\tset: (v) -> @[1] = v\n\t\tthird:\n\t\t\tget: -> @[2]\n\t\t\tset: (v) -> @[2] = v\n\t\tlast:\n\t\t\tget: -> @[@length - 1]\n\t\t\tset: (v) -> @[@length - 1] = v\n\t\trepeat:\n\t\t\tenumerable: false\n\t\t\tvalue: (n) ->\n\t\t\t\t[r, pat] = [[], @]\n\t\t\t\twhile n > 0\n\t\t\t\t\tr = r.concat(pat) if n & 1\n\t\t\t\t\tn >>= 1\n\t\t\t\t\tpat = pat.concat(pat)\n\t\t\t\treturn r\n\t\tunique:\n\t\t\tenumerable: false\n\t\t\tvalue: do ->\n\t\t\t\tinit = new Object\n\t\t\t\t(equal)->\n\t\t\t\t\ti = 0\n\t\t\t\t\tt = init\n\t\t\t\t\tif not equal?\n\t\t\t\t\t\tfor x, j in @ when x != t\n\t\t\t\t\t\t\t@[i] = t = x\n\t\t\t\t\t\t\ti += 1\n\t\t\t\t\telse\n\t\t\t\t\t\tfor x, j in @ when t is init or not equal(x, t)\n\t\t\t\t\t\t\t@[i] = t = x\n\t\t\t\t\t\t\ti += 1\n\t\t\t\t\t@splice(i, Infinity)\n\t\t\t\t\treturn @\n\n\t# reinforce Object\n\n\tObject.defineProperties Object,\n\t\tsize:\n\t\t\tenumerable: false\n\t\t\tvalue: (d) -> Object.keys(d).length\n\t\textend:\n\t\t\tenumerable: false\n\t\t\tvalue: (base, defaults...) -> #NOTE: modified inplace, use copy() to protect it.\n\t\t\t\tfor d in defaults when d?\n\t\t\t\t\tbase[k] ?= v for k, v of d #NOTE: null values will be replaced if a default value exists.\n\t\t\t\treturn base\n\t\tupdate:\n\t\t\tenumerable: false\n\t\t\tvalue: (base, updates...) -> #NOTE: modified inplace, use copy() to protect it.\n\t\t\t\tfor d in updates when d?\n\t\t\t\t\tbase[k] = v for k, v of d\n\t\t\t\treturn base\n\n\treturn {\n\t\tString, Array, Object\n\t}\n\nmodule.exports = this_module {String, Array, Object}\n","this_module = () ->\n\turi_encoder = (component_packer = str) ->\n\t\t(obj) ->\n\t\t\t(\"#{encodeURIComponent(k)}=#{encodeURIComponent component_packer v}\" for k, v of obj).join('&')\n\n\turi_decoder = (component_unpacker = ((s) -> s)) ->\n\t\t(str) ->\n\t\t\td = {}\n\t\t\tfor s in (str.match /[^?=&]+=[^&]*/g) ? []\n\t\t\t\t[..., k, v] = s.match /([^=]+)=(.*)/\n\t\t\t\td[decodeURIComponent(k)] = (component_unpacker decodeURIComponent v)\n\t\t\treturn d\n\n\treturn {\n\t\turi_encoder, uri_decoder,\n\t}\n\nmodule.exports = this_module()\n\n","this_module = () ->\n\tfunction_literal = (f) ->\n\t\texpr = f.toString().replace(/^\\s*function\\s?\\(\\s?\\)\\s?{\\s*return\\s*([^]*?);?\\s*}$/, '$1')\n\t\texpr = expr.replace(/[\\r\\n]{1,2}\\s*/g, '') if expr.length <= 100\n\t\treturn expr\n\n\ttime_now = ->\n\t\t(new Date).getTime()\n\n\tlog = do -> #log an expression with it's literal and time used\n\t\tdye = do ->\n\t\t\t# ANSI Terminal Colors.\n\t\t\tcavailable = (not window?) and process? and not process.env.NODE_DISABLE_COLORS\n\t\t\tpalette =\n\t\t\t\tbold: '\\x1B[0;1m'\n\t\t\t\tred: '\\x1B[0;31m'\n\t\t\t\tgreen: '\\x1B[0;32m'\n\t\t\t\tyellow: '\\x1B[0;33m'\n\t\t\t\tblue: '\\x1B[0;34m'\n\t\t\t\tbold_grey: '\\x1B[1;30m'\n\t\t\tif not cavailable\n\t\t\t\t(color) -> (s) -> s\n\t\t\telse\n\t\t\t\t(color) ->\n\t\t\t\t\t(s) -> \"#{palette[color]}#{s}#{'\\x1B[0m'}\"\n\n\t\tlog_label = do ->\n\t\t\tflag_palette =\n\t\t\t\t'#': 'bold_grey'\n\t\t\t\t'I': 'green'\n\t\t\t\t'E': 'red'\n\t\t\t\t'W': 'yellow'\n\t\t\top_flag = (op) ->\n\t\t\t\tif op == 'log' then '#' else op[0].toUpperCase()\n\t\t\t(op) ->\n\t\t\t\tflag = op_flag(op)\n\t\t\t\tdye(flag_palette[flag]) flag\n\n\t\thistories = []\n\t\tfactory = (op) ->\n\t\t\tprefix = \"#{dye('bold_grey') '#'}#{log_label op}\"\n\t\t\t(args...) ->\n\t\t\t\tball = []\n\t\t\t\tfor f in args\n\t\t\t\t\tif typeof f == 'function'\n\t\t\t\t\t\texpr = function_literal(f)\n\t\t\t\t\t\tstart_time = time_now()\n\t\t\t\t\t\teval_result = f()\n\t\t\t\t\t\ttime_used = time_now() - start_time\n\t\t\t\t\t\tball.push(\"#{prefix} #{dye('green') expr} #{dye('bold_grey') '==>'}\", eval_result)\n\t\t\t\t\t\tball.push(dye('yellow') \"[#{time_used}ms]\") if time_used > 0\n\t\t\t\t\telse\n\t\t\t\t\t\tball.push(\"#{prefix}\", f)\n\t\t\t\tconsole[op] ball...\n\t\t\t\thistories.push(ball)\n\t\t\t\thistories.shift() if histories.length >= 10\n\t\t\t\treturn null\n\t\tgot = factory('log')\n\t\tgot.histories = histories\n\t\tgot.info = factory('info')\n\t\tgot.warn = factory('warn')\n\t\tgot.error = got.err = factory('error')\n\t\treturn got\n\n\tassert = (f, msg) ->\n\t\t[f, msg] = [msg, f] if f not instanceof Function\n\t\ttry\n\t\t\tr = f()\n\t\tcatch e\n\t\t\tthrow Error \"Assertion #{msg ? function_literal(f)} Unknown:\\n#{e}\"\n\t\tif not r\n\t\t\tthrow Error \"Assertion #{msg ? function_literal(f)} Failed!\"\n\n\tassertEq = (l, r) ->\n\t\ttry\n\t\t\tlv = l()\n\t\t\trv = r()\n\t\tcatch e\n\t\t\tthrow Error \"Equation Between #{function_literal(l)} And #{function_literal(r)} Unknown:\\n#{e}\"\n\t\tif lv isnt rv\n\t\t\tthrow Error \"Equation Failed:\\n\\t#{function_literal(l)} IS #{lv} BUT\\n\\t#{function_literal(r)} IS #{rv}.\"\n\n\tassertEqOn = (f) -> (l, r) ->\n\t\ttry\n\t\t\tlv = l()\n\t\t\trv = r()\n\t\t\tflv = f(lv)\n\t\t\tfrv = f(rv)\n\t\tcatch e\n\t\t\tthrow Error \"MAPPED Equation Between #{function_literal(l)} And #{function_literal(r)} Unknown:\\n#{e}\"\n\t\tif flv isnt frv\n\t\t\tthrow Error \"Equation Failed:\\n\\t#{function_literal(l)} IS #{lv} AND MAPPED TO #{flv} BUT\\n\\t#{function_literal(r)} IS #{rv} AND MAPPED TO #{frv}.\"\n\n\tsecurely = (f) -> # ensure a function not to modify it's arguments\n\t\t(args...) ->\n\t\t\targs = deepcopy args\n\t\t\tf(args...)\n\n\tdict = (pairs) -> #for dict comprehensions\n\t\td = {}\n\t\td[k] = v for [k, v] in pairs\n\t\treturn d\n\n\t{copy, deepcopy} = do ->\n\t\tcp = (root, dep) ->\n\t\t\treturn root if dep == 0 or not root? or typeof(root) != 'object'\n\t\t\tif root instanceof Array\n\t\t\t\tr = (cp(v, dep-1) for v in root)\n\t\t\telse\n\t\t\t\tr = {}\n\t\t\t\tr[k] = cp(v, dep-1) for k, v of root\n\t\t\treturn r\n\t\tcopy: (obj, depth=1) -> cp(obj, depth)\n\t\tdeepcopy: (obj, depth=Infinity) -> cp(obj, depth)\n\n\textend = (base) -> (defaults...) -> #NOTE: modified inplace, use copy() to protect it.\n\t\tfor d in defaults when d?\n\t\t\tbase[k] ?= v for k, v of d #NOTE: null values will be replaced if a default value exists.\n\t\treturn base\n\n\tupdate = (base) -> (updates...) -> #NOTE: modified inplace, use copy() to protect it.\n\t\tfor d in updates when d?\n\t\t\tbase[k] = v for k, v of d\n\t\treturn base\n\n\toverload = (_d) ->\n\t\td = copy _d\n\t\tfallback = d['_']\n\t\tif fallback?\n\t\t\t(args...) ->\n\t\t\t\t(d[args.length] ? fallback) args...\n\t\telse\n\t\t\t(args...) ->\n\t\t\t\tf = d[args.length]\n\t\t\t\tif not f?\n\t\t\t\t\tthrow Error \"This Function Can't Accept #{args.length} Args\"\n\t\t\t\telse\n\t\t\t\t\treturn f args...\n\n\treturn {\n\t\tlog, assert, assertEq, assertEqOn, dict, copy, deepcopy, securely, extend, update, overload,\n\t}\n\nmodule.exports = this_module()\n\n"],"sourceRoot":"/source/"}