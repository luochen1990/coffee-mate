{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/coffee-mate.coffee","node_modules/browserify/node_modules/process/browser.js","node_modules/lazy-list/build/nodejs/lazy.js","src/basics.coffee","src/convertors.coffee","src/funny.coffee","src/url-helpers.coffee","src/utils.coffee"],"names":[],"mappings":"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","file":"coffee-mate.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","utils = require './utils'\nbasics = require './basics'\nlazy = require 'lazy-list'\nfunny = require './funny'\nconvertors = require './convertors'\nurl_helpers = require './url-helpers'\n\nmodule.exports = utils.extend({}) utils, basics, lazy, funny, convertors, url_helpers\n\n","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            currentQueue[queueIndex].run();\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (!draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","(function() {\n  var this_module,\n    slice = [].slice;\n\n  this_module = function(arg) {\n    var Iterator, LazyList, Symbol, all, any, best, brk, cartProd, concat, cons, drop, dropWhile, enumerate, filter, foldl, foreach, fromList, groupOn, head, iterate, last, lazy, length, list, map, maximum, maximumOn, minimum, minimumOn, naturals, nil, partition, permutations, primes, randoms, range, ref, repeat, reverse, scanl, sort, sortOn, streak, streak2, take, takeWhile, zip, zipWith;\n    Symbol = arg.Symbol;\n    LazyList = function(f) {\n      f[Symbol.iterator] = function() {\n        return f();\n      };\n      f.toString = function() {\n        return \"LazyList\";\n      };\n      return f;\n    };\n    nil = LazyList(function() {\n      return nil;\n    });\n    nil.toString = function() {\n      return 'nil';\n    };\n    Iterator = function(it) {\n      it.next = function() {\n        var r;\n        r = it();\n        return {\n          value: r,\n          done: r === nil\n        };\n      };\n      it.toString = function() {\n        return \"Iterator\";\n      };\n      return it;\n    };\n    naturals = LazyList(function() {\n      var i;\n      i = -1;\n      return Iterator(function() {\n        return ++i;\n      });\n    });\n    range = function() {\n      var args;\n      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      if (args.length === 0) {\n        return naturals;\n      } else if (args.length === 1) {\n        return LazyList(function() {\n          var i, stop;\n          stop = args[0];\n          i = -1;\n          return Iterator(function() {\n            if (++i < stop) {\n              return i;\n            } else {\n              return nil;\n            }\n          });\n        });\n      } else if (args.length === 2) {\n        return LazyList(function() {\n          var i, start, stop;\n          start = args[0], stop = args[1];\n          if (start < stop) {\n            i = start - 1;\n            return Iterator(function() {\n              if (++i < stop) {\n                return i;\n              } else {\n                return nil;\n              }\n            });\n          } else {\n            i = start + 1;\n            return Iterator(function() {\n              if (--i > stop) {\n                return i;\n              } else {\n                return nil;\n              }\n            });\n          }\n        });\n      } else {\n        return LazyList(function() {\n          var i, start, step, stop;\n          start = args[0], stop = args[1], step = args[2];\n          if (stop !== start && (stop - start) * step < 0) {\n            throw 'ERR IN range(): YOU ARE CREATING AN UNLIMITTED RANGE';\n          }\n          i = start - step;\n          if (start < stop) {\n            return Iterator(function() {\n              if ((i += step) < stop) {\n                return i;\n              } else {\n                return nil;\n              }\n            });\n          } else {\n            return Iterator(function() {\n              if ((i += step) > stop) {\n                return i;\n              } else {\n                return nil;\n              }\n            });\n          }\n        });\n      }\n    };\n    primes = LazyList(function() {\n      return filter(function(x) {\n        return all(function(p) {\n          return x % p !== 0;\n        })(takeWhile(function(p) {\n          return p * p <= x;\n        })(range(2, Infinity)));\n      })(range(2, Infinity))();\n    });\n    lazy = function(xs) {\n      var ref;\n      if (typeof xs === 'function') {\n        if (xs[Symbol.iterator] != null) {\n          return xs;\n        } else {\n          return LazyList(xs);\n        }\n      } else if ((ref = xs.constructor) === Array || ref === String) {\n        return LazyList(function() {\n          var i;\n          i = -1;\n          return Iterator(function() {\n            if ((++i) < xs.length) {\n              return xs[i];\n            } else {\n              return nil;\n            }\n          });\n        });\n      } else if (xs[Symbol.iterator] != null) {\n        return LazyList(function() {\n          var it;\n          it = xs[Symbol.iterator]();\n          return Iterator(function() {\n            var r;\n            r = it.next();\n            if (r.done) {\n              return nil;\n            } else {\n              return r.value;\n            }\n          });\n        });\n      } else {\n        throw Error('lazy(xs): xs is neither Array nor Iterable');\n      }\n    };\n    enumerate = function(it) {\n      if ((it[Symbol.iterator] != null) || it instanceof Array) {\n        return zip(naturals, it);\n      } else {\n        return LazyList(function() {\n          var i, keys;\n          keys = Object.keys(it);\n          i = -1;\n          return Iterator(function() {\n            var k;\n            if (++i < keys.length) {\n              return [(k = keys[i]), it[k]];\n            } else {\n              return nil;\n            }\n          });\n        });\n      }\n    };\n    repeat = function(x) {\n      return LazyList(function() {\n        return Iterator(function() {\n          return x;\n        });\n      });\n    };\n    iterate = function(next, init) {\n      return LazyList(function() {\n        var st;\n        st = init;\n        return Iterator(function() {\n          var r;\n          r = st;\n          st = next(st);\n          return r;\n        });\n      });\n    };\n    randoms = (function() {\n      var hash, normal, salt;\n      salt = Math.PI / 3.0;\n      hash = function(x) {\n        x = Math.sin(x + salt) * 1e4;\n        return x - Math.floor(x);\n      };\n      normal = function(seed) {\n        return iterate(hash, hash(seed));\n      };\n      return function(opts) {\n        var k, ref, ref1, rg, s, seed;\n        if (opts == null) {\n          return normal(0);\n        } else if (typeof opts === 'number') {\n          return normal(opts);\n        } else {\n          seed = (ref = opts.seed) != null ? ref : 0;\n          rg = opts.range;\n          if (rg != null) {\n            if (typeof rg === 'number') {\n              return map(function(x) {\n                return Math.floor(x * rg);\n              })(normal(seed));\n            } else {\n              ref1 = [rg[0], rg[1] - rg[0] + 1], s = ref1[0], k = ref1[1];\n              return map(function(x) {\n                return s + Math.floor(x * k);\n              })(normal(seed));\n            }\n          } else {\n            return normal(seed);\n          }\n        }\n      };\n    })();\n    permutations = (function() {\n      var next_permutation;\n      next_permutation = function(x) {\n        var l, m, r, ref, ref1;\n        x = x.slice(0);\n        l = x.length - 1;\n        while (l >= 1 && x[l] <= x[l - 1]) {\n          --l;\n        }\n        if (l !== 0) {\n          m = x.length - 1;\n          while (m > l - 1 && x[m] <= x[l - 1]) {\n            --m;\n          }\n          ref = [x[l - 1], x[m]], x[m] = ref[0], x[l - 1] = ref[1];\n        }\n        r = x.length - 1;\n        while (l < r) {\n          ref1 = [x[r], x[l]], x[l] = ref1[0], x[r] = ref1[1];\n          ++l;\n          --r;\n        }\n        return x;\n      };\n      return function(xs) {\n        var arr;\n        arr = list(xs);\n        if (arr.length === 0) {\n          return nil;\n        } else {\n          return cons(arr.slice(0))(takeWhile(function(ls) {\n            return json(ls) !== json(arr);\n          })(drop(1)(iterate(next_permutation, arr))));\n        }\n      };\n    })();\n    take = function(n) {\n      return function(xs) {\n        return LazyList(function() {\n          var c, iter;\n          iter = lazy(xs)[Symbol.iterator]();\n          c = -1;\n          return Iterator(function() {\n            if (++c < n) {\n              return iter();\n            } else {\n              return nil;\n            }\n          });\n        });\n      };\n    };\n    takeWhile = function(ok) {\n      return function(xs) {\n        return LazyList(function() {\n          var iter;\n          iter = lazy(xs)[Symbol.iterator]();\n          return Iterator(function() {\n            var x;\n            if ((x = iter()) !== nil && ok(x)) {\n              return x;\n            } else {\n              return nil;\n            }\n          });\n        });\n      };\n    };\n    drop = function(n) {\n      return function(xs) {\n        return LazyList(function() {\n          var finished, i, iter, j, ref;\n          iter = lazy(xs)[Symbol.iterator]();\n          finished = false;\n          for (i = j = 0, ref = n; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n            finished || (finished = iter() === nil);\n            if (finished) {\n              break;\n            }\n          }\n          if (finished) {\n            return function() {\n              return nil;\n            };\n          } else {\n            return iter;\n          }\n        });\n      };\n    };\n    dropWhile = function(ok) {\n      return function(xs) {\n        return LazyList(function() {\n          var iter, x;\n          iter = lazy(xs)[Symbol.iterator]();\n          while (ok(x = iter()) && x !== nil) {\n            null;\n          }\n          return Iterator(function() {\n            var prevx, ref;\n            ref = [x, iter()], prevx = ref[0], x = ref[1];\n            return prevx;\n          });\n        });\n      };\n    };\n    cons = function(x) {\n      return function(xs) {\n        return LazyList(function() {\n          var iter;\n          iter = null;\n          return Iterator(function() {\n            if (iter === null) {\n              iter = lazy(xs)[Symbol.iterator]();\n              return x;\n            } else {\n              return iter();\n            }\n          });\n        });\n      };\n    };\n    map = function(f) {\n      return function(xs) {\n        return LazyList(function() {\n          var iter;\n          iter = lazy(xs)[Symbol.iterator]();\n          return Iterator(function() {\n            var x;\n            if ((x = iter()) !== nil) {\n              return f(x);\n            } else {\n              return nil;\n            }\n          });\n        });\n      };\n    };\n    filter = function(ok) {\n      return function(xs) {\n        return LazyList(function() {\n          var iter;\n          iter = lazy(xs)[Symbol.iterator]();\n          return Iterator(function() {\n            var x;\n            while ((x = iter()) !== nil && !ok(x)) {\n              null;\n            }\n            return x;\n          });\n        });\n      };\n    };\n    scanl = function(f, r) {\n      return function(xs) {\n        return LazyList(function() {\n          var iter;\n          iter = lazy(xs)[Symbol.iterator]();\n          return Iterator(function() {\n            var got, x;\n            got = r;\n            r = (x = iter()) !== nil ? f(r, x) : nil;\n            return got;\n          });\n        });\n      };\n    };\n    streak = function(n) {\n      if (n < 1) {\n        return nil;\n      } else {\n        return function(xs) {\n          return drop(n - 1)(LazyList(function() {\n            var buf, iter;\n            iter = lazy(xs)[Symbol.iterator]();\n            buf = [];\n            return Iterator(function() {\n              var x;\n              if ((x = iter()) === nil) {\n                return nil;\n              }\n              buf.push(x);\n              if (buf.length > n) {\n                buf.shift(1);\n              }\n              return buf.slice(0);\n            });\n          }));\n        };\n      }\n    };\n    streak2 = function(n) {\n      return function(xs) {\n        return streak(n)(concat([xs, take(n - 1)(xs)]));\n      };\n    };\n    reverse = function(xs) {\n      var ref;\n      if ((ref = xs.constructor) === Array || ref === String) {\n        return LazyList(function() {\n          var i;\n          i = xs.length;\n          return Iterator(function() {\n            if ((--i) >= 0) {\n              return xs[i];\n            } else {\n              return nil;\n            }\n          });\n        });\n      } else {\n        return list(lazy(xs)).reverse();\n      }\n    };\n    sort = function(xs) {\n      var arr;\n      arr = list(lazy(xs));\n      return arr.sort(function(a, b) {\n        return (a > b) - (a < b);\n      });\n    };\n    sortOn = function(f) {\n      return function(xs) {\n        var arr;\n        arr = list(lazy(xs));\n        return arr.sort(function(a, b) {\n          var fa, fb;\n          return ((fa = f(a)) > (fb = f(b))) - (fa < fb);\n        });\n      };\n    };\n    groupOn = function(f) {\n      return function(xs) {\n        var k, memo, v;\n        memo = {};\n        foreach(xs, function(x) {\n          var y;\n          y = f(x);\n          if (memo[y] == null) {\n            memo[y] = [];\n          }\n          return memo[y].push(x);\n        });\n        return (function() {\n          var results;\n          results = [];\n          for (k in memo) {\n            v = memo[k];\n            results.push(v);\n          }\n          return results;\n        })();\n      };\n    };\n    partition = function(f) {\n      return function(xs) {\n        var memo;\n        memo = [[], []];\n        foreach(xs, function(x) {\n          var y;\n          y = !f(x) + 0;\n          return memo[y].push(x);\n        });\n        return memo;\n      };\n    };\n    concat = function(xss) {\n      xss = filter(function(x) {\n        var ref;\n        return ((ref = x.constructor) !== Array && ref !== String) || x.length > 0;\n      })(xss);\n      return LazyList(function() {\n        var iter, xs, xs_iter;\n        xs_iter = lazy(xss)[Symbol.iterator]();\n        xs = xs_iter();\n        iter = lazy(xs)[Symbol.iterator]();\n        return Iterator(function() {\n          var x;\n          if ((x = iter()) !== nil) {\n            return x;\n          } else if ((xs = xs_iter()) !== nil) {\n            iter = lazy(xs)[Symbol.iterator]();\n            return iter();\n          } else {\n            return nil;\n          }\n        });\n      });\n    };\n    ref = (function() {\n      var finished, zip, zipWith;\n      finished = function(arr) {\n        var j, len1, x;\n        for (j = 0, len1 = arr.length; j < len1; j++) {\n          x = arr[j];\n          if (x === nil) {\n            return true;\n          }\n        }\n        return false;\n      };\n      zip = function() {\n        var xss;\n        xss = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        return LazyList(function() {\n          var iters, xs;\n          iters = (function() {\n            var j, len1, results;\n            results = [];\n            for (j = 0, len1 = xss.length; j < len1; j++) {\n              xs = xss[j];\n              results.push(lazy(xs)[Symbol.iterator]());\n            }\n            return results;\n          })();\n          return Iterator(function() {\n            var iter, next;\n            next = (function() {\n              var j, len1, results;\n              results = [];\n              for (j = 0, len1 = iters.length; j < len1; j++) {\n                iter = iters[j];\n                results.push(iter());\n              }\n              return results;\n            })();\n            if (finished(next)) {\n              return nil;\n            } else {\n              return next;\n            }\n          });\n        });\n      };\n      zipWith = function(f) {\n        return function() {\n          var xss;\n          xss = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n          return LazyList(function() {\n            var iters, xs;\n            iters = (function() {\n              var j, len1, results;\n              results = [];\n              for (j = 0, len1 = xss.length; j < len1; j++) {\n                xs = xss[j];\n                results.push(lazy(xs)[Symbol.iterator]());\n              }\n              return results;\n            })();\n            return Iterator(function() {\n              var iter, next;\n              next = (function() {\n                var j, len1, results;\n                results = [];\n                for (j = 0, len1 = iters.length; j < len1; j++) {\n                  iter = iters[j];\n                  results.push(iter());\n                }\n                return results;\n              })();\n              if (finished(next)) {\n                return nil;\n              } else {\n                return f.apply(null, next);\n              }\n            });\n          });\n        };\n      };\n      return {\n        zip: zip,\n        zipWith: zipWith\n      };\n    })(), zip = ref.zip, zipWith = ref.zipWith;\n    cartProd = (function() {\n      var apply_vector, inc_vector;\n      inc_vector = function(limits) {\n        var len_minus_1;\n        len_minus_1 = limits.length - 1;\n        return function(vec) {\n          var i;\n          i = len_minus_1;\n          while (!(++vec[i] < limits[i] || i <= 0)) {\n            vec[i--] = 0;\n          }\n          return vec;\n        };\n      };\n      apply_vector = function(space) {\n        var len;\n        len = space.length;\n        return function(vec) {\n          var i, j, ref1, results;\n          results = [];\n          for (i = j = 0, ref1 = len; 0 <= ref1 ? j < ref1 : j > ref1; i = 0 <= ref1 ? ++j : --j) {\n            results.push(space[i][vec[i]]);\n          }\n          return results;\n        };\n      };\n      return function() {\n        var xss;\n        xss = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        return LazyList(function() {\n          var get_value, i, inc, j, len, len1, limits, v, xs;\n          xss = (function() {\n            var j, len1, results;\n            results = [];\n            for (j = 0, len1 = xss.length; j < len1; j++) {\n              xs = xss[j];\n              results.push(list(xs));\n            }\n            return results;\n          })();\n          limits = (function() {\n            var j, ref1, results;\n            results = [];\n            for (i = j = 0, ref1 = xss.length; 0 <= ref1 ? j < ref1 : j > ref1; i = 0 <= ref1 ? ++j : --j) {\n              results.push(xss[i].length);\n            }\n            return results;\n          })();\n          for (j = 0, len1 = limits.length; j < len1; j++) {\n            len = limits[j];\n            if (len === 0) {\n              return nil;\n            }\n          }\n          inc = inc_vector(limits);\n          get_value = apply_vector(xss);\n          v = (function() {\n            var o, ref1, results;\n            results = [];\n            for (i = o = 0, ref1 = xss.length; 0 <= ref1 ? o < ref1 : o > ref1; i = 0 <= ref1 ? ++o : --o) {\n              results.push(0);\n            }\n            return results;\n          })();\n          return Iterator(function() {\n            var r;\n            if (v[0] < limits[0]) {\n              r = get_value(v);\n              inc(v);\n              return r;\n            } else {\n              return nil;\n            }\n          });\n        });\n      };\n    })();\n    list = function(xs) {\n      var it, n, results, results1, x;\n      if (xs instanceof Array) {\n        return xs;\n      } else if (typeof xs === 'function') {\n        it = xs[Symbol.iterator]();\n        results = [];\n        while ((x = it()) !== nil) {\n          results.push(x);\n        }\n        return results;\n      } else if (xs[Symbol.iterator] != null) {\n        it = lazy(xs)[Symbol.iterator]();\n        results1 = [];\n        while ((x = it()) !== nil) {\n          results1.push(x);\n        }\n        return results1;\n      } else if (typeof xs === 'number') {\n        n = xs;\n        return function(xs) {\n          return list(take(n)(xs));\n        };\n      } else {\n        throw Error({\n          message: 'list(xs): xs is neither Array nor Iterable',\n          info: {\n            \"xs\": xs,\n            \"xs.constructor\": xs != null ? xs.constructor : void 0\n          }\n        });\n      }\n    };\n    head = function(xs) {\n      var iter, r, ref1;\n      if ((ref1 = xs.constructor) === Array || ref1 === String) {\n        if (xs.length > 0) {\n          return xs[0];\n        } else {\n          throw \"Error: head() used on empty list.\";\n        }\n      } else {\n        iter = lazy(xs)[Symbol.iterator]();\n        if ((r = iter()) !== nil) {\n          return r;\n        } else {\n          throw \"Error: head() used on empty list.\";\n        }\n      }\n    };\n    last = function(xs) {\n      var iter, r, ref1, ref2, x;\n      if ((ref1 = xs.constructor) === Array || ref1 === String) {\n        return (ref2 = xs[xs.length - 1]) != null ? ref2 : nil;\n      } else {\n        iter = lazy(xs)[Symbol.iterator]();\n        r = nil;\n        while ((x = iter()) !== nil) {\n          r = x;\n        }\n        return r;\n      }\n    };\n    length = function(xs) {\n      var iter, r, ref1, x;\n      if ((ref1 = xs.constructor) === Array || ref1 === String) {\n        return xs.length;\n      } else {\n        iter = lazy(xs)[Symbol.iterator]();\n        r = 0;\n        while ((x = iter()) !== nil) {\n          ++r;\n        }\n        return r;\n      }\n    };\n    foldl = function(f, init) {\n      return function(xs) {\n        var iter, r, x;\n        r = init;\n        iter = lazy(xs)[Symbol.iterator]();\n        while ((x = iter()) !== nil) {\n          r = f(r, x);\n        }\n        return r;\n      };\n    };\n    best = function(better) {\n      return function(xs) {\n        var it, iter, r;\n        iter = lazy(xs)[Symbol.iterator]();\n        if ((r = iter()) === nil) {\n          return null;\n        }\n        while ((it = iter()) !== nil) {\n          r = better(it, r) ? it : r;\n        }\n        return r;\n      };\n    };\n    maximumOn = function(f) {\n      return best(function(a, b) {\n        return f(a) > f(b);\n      });\n    };\n    minimumOn = function(f) {\n      return best(function(a, b) {\n        return f(a) > f(b);\n      });\n    };\n    maximum = best(function(x, y) {\n      return x > y;\n    });\n    minimum = best(function(x, y) {\n      return x < y;\n    });\n    all = function(f) {\n      if (typeof f !== 'function') {\n        f = (function(x) {\n          return x === f;\n        });\n      }\n      return function(xs) {\n        var iter, x;\n        iter = lazy(xs)[Symbol.iterator]();\n        while ((x = iter()) !== nil) {\n          if (!f(x)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    };\n    any = function(f) {\n      var all_not;\n      all_not = all(function(x) {\n        return !f(x);\n      });\n      return function(xs) {\n        return !(all_not(xs));\n      };\n    };\n    fromList = function(pairs) {\n      var r;\n      r = {};\n      foreach(pairs, function(arg1) {\n        var k, v;\n        k = arg1[0], v = arg1[1];\n        return r[k] = v;\n      });\n      return r;\n    };\n    brk = function() {\n      return brk;\n    };\n    brk.toString = function() {\n      return 'foreach.break';\n    };\n    foreach = function(xs, callback, fruit) {\n      var iter, x;\n      iter = lazy(xs)[Symbol.iterator]();\n      while ((x = iter()) !== nil) {\n        if (callback(x, fruit) === brk) {\n          break;\n        }\n      }\n      return fruit;\n    };\n    Object.defineProperties(foreach, {\n      \"break\": {\n        writable: false,\n        configurable: false,\n        enumerable: false,\n        value: brk\n      }\n    });\n    return {\n      nil: nil,\n      LazyList: LazyList,\n      Iterator: Iterator,\n      Symbol: Symbol,\n      naturals: naturals,\n      range: range,\n      primes: primes,\n      lazy: lazy,\n      enumerate: enumerate,\n      repeat: repeat,\n      iterate: iterate,\n      randoms: randoms,\n      permutations: permutations,\n      cons: cons,\n      map: map,\n      filter: filter,\n      take: take,\n      takeWhile: takeWhile,\n      drop: drop,\n      dropWhile: dropWhile,\n      scanl: scanl,\n      streak: streak,\n      streak2: streak2,\n      reverse: reverse,\n      sort: sort,\n      sortOn: sortOn,\n      groupOn: groupOn,\n      partition: partition,\n      concat: concat,\n      zip: zip,\n      zipWith: zipWith,\n      cartProd: cartProd,\n      list: list,\n      head: head,\n      last: last,\n      length: length,\n      foldl: foldl,\n      best: best,\n      maximum: maximum,\n      minimum: minimum,\n      maximumOn: maximumOn,\n      minimumOn: minimumOn,\n      all: all,\n      any: any,\n      fromList: fromList,\n      foreach: foreach\n    };\n  };\n\n  module.exports = this_module({\n    Symbol: typeof Symbol !== \"undefined\" && Symbol !== null ? Symbol : {\n      iterator: 'iter'\n    }\n  });\n\n}).call(this);\n\n//# sourceMappingURL=lazy.js.map","this_module = ({best, foldl}) ->\n\t# transformers\n\tflip = (f) ->\n\t\t(x) -> (y) -> f(y)(x)\n\n\tcombine = (f) -> (g) ->\n\t\t(x) -> f g(x)\n\n\tcurry2 = (f) ->\n\t\t(a) -> (b) -> f(a, b)\n\n\tcurry3 = (f) ->\n\t\t(a) -> (b) -> (c) -> f(a, b, c)\n\n\tuncurry2 = (f) ->\n\t\t(a, b) -> f(a)(b)\n\n\tuncurry3 = (f) ->\n\t\t(a, b, c) -> f(a)(b)(c)\n\n\tpack = (f) ->\n\t\t(arr) -> f(arr...)\n\n\tunpack = (f) ->\n\t\t(arr...) -> f(arr)\n\n\t# seek & pluck in Array or Object\n\tseek = (arr) ->\n\t\t(i) -> arr[i]\n\n\tpluck = (attr) ->\n\t\t(d) -> d[attr]\n\n\t# compare\n\tequal = (it) ->\n\t\t(x) -> x == it\n\n\tnotEqual = (it) ->\n\t\t(x) -> x != it\n\n\tlessThan = (it) ->\n\t\t(x) -> x < it\n\n\tgreaterThan = (it) ->\n\t\t(x) -> x > it\n\n\tlessEqual = (it) ->\n\t\t(x) -> x <= it\n\n\tgreaterEqual = (it) ->\n\t\t(x) -> x >= it\n\n\t# math\n\tplus = (it) ->\n\t\t(x) -> x + it\n\n\tminus = (it) ->\n\t\t(x) -> x - it\n\n\tabs = Math.abs\n\tfloor = Math.floor\n\tceil = Math.ceil\n\n\tprecise = (n) ->\n\t\t(x) -> parseFloat x.toPrecision(n)\n\n\taccept_multi_or_array = (f) ->\n\t\t(arr...) ->\n\t\t\tf(if arr.length == 1 and arr.first instanceof Array then arr.first else arr)\n\n\tsum = foldl(((a, b) -> a + b), 0)\n\n\treturn {\n\t\tflip, combine,\n\t\tcurry2, curry3, uncurry2, uncurry3, pack, unpack,\n\t\tseek, pluck,\n\t\tequal, notEqual, lessThan, lessEqual, greaterThan, greaterEqual,\n\t\tplus, minus, abs, floor, ceil, precise,\n\t\tsum\n\t}\n\nmodule.exports = this_module\n\tbest: require('lazy-list').best\n\tfoldl: require('lazy-list').foldl\n\n","this_module = () ->\n\tint = (s, base) -> if typeof(s) == 'string' then (r = parseInt(s, base); unless s.slice? and r == parseInt(s.slice(0,-1), base) then r else null) else parseInt(0 + s)\n\tfloat = (s) -> if /^-?[0-9]*(\\.[0-9]+)?([eE]-?[0-9]+)?$/.test(s) then parseFloat(s) else null\n\tstr = (x, base) -> x.toString(base)\n\tbool = (x) -> if x in [true, false] then x else null\n\thex = (x) -> x.toString(16)\n\tord = (c) -> c.charCodeAt()\n\tchr = (x) -> String.fromCharCode(x)\n\tjson = (it) -> JSON.stringify(it)\n\tjsonWith = (indent, convertor) -> (it) -> JSON.stringify(it, convertor, indent)\n\tprettyJson = (it) -> JSON.stringify(it, null, 4)\n\tobj = (s) -> JSON.parse(s)\n\n\treturn {\n\t\tint, float, bool, str, hex, ord, chr, json, jsonWith, prettyJson, obj,\n\t}\n\nmodule.exports = this_module()\n\n","this_module = () ->\n\tchurch = (n) -> #the nth church number\n\t\titer = (f, n, r) ->\n\t\t\tif n == 0 then r else iter(f, n - 1, f(r))\n\t\t(f) ->\n\t\t\t(x) -> iter(f, n + 0, x)\n\n\tY = (f) -> #the Y combinator\n\t\t((x) -> (x x)) ((x) -> (f ((y) -> ((x x) y))))\n\n\tmemoize = (f, get_key = ((args...) -> json(args))) ->\n\t\tcache = {}\n\t\t(args...) ->\n\t\t\tkey = get_key(args...)\n\t\t\tcached = cache[key]\n\t\t\tif cached?\n\t\t\t\tcached\n\t\t\telse\n\t\t\t\tr = f(args...)\n\t\t\t\tcache[key] = r\n\t\t\t\tr\n\n\tfix = Y\n\n\tmemoFix = (ff) ->\n\t\tf = memoize (ff ((args...) -> f(args...)))\n\t\treturn f\n\n\treturn {\n\t\tchurch, Y, memoize, fix, memoFix,\n\t}\n\nmodule.exports = this_module()\n\n","this_module = () ->\n\turi_encoder = (component_packer = str) ->\n\t\t(obj) ->\n\t\t\t(\"#{encodeURIComponent(k)}=#{encodeURIComponent component_packer v}\" for k, v of obj when v isnt undefined).join('&')\n\n\turi_decoder = (component_unpacker = ((s) -> s)) ->\n\t\t(str) ->\n\t\t\td = {}\n\t\t\tfor s in (str.match /[^?=&]+=[^&]*/g) ? []\n\t\t\t\t[..., k, v] = s.match /([^=]+)=(.*)/\n\t\t\t\td[decodeURIComponent(k)] = (component_unpacker decodeURIComponent v)\n\t\t\treturn d\n\n\treturn {\n\t\turi_encoder, uri_decoder,\n\t}\n\nmodule.exports = this_module()\n\n","this_module = () ->\n\tfunction_literal = (f) ->\n\t\texpr = f.toString().replace(/^\\s*function\\s?\\(\\s?\\)\\s?{\\s*return\\s*([^]*?);?\\s*}$/, '$1')\n\t\texpr = expr.replace(/[\\r\\n]{1,2}\\s*/g, '') if expr.length <= 100\n\t\treturn expr\n\n\ttime_now = ->\n\t\t(new Date).getTime()\n\n\tlog = do -> #log an expression with it's literal and time used\n\t\tdye = do ->\n\t\t\t# ANSI Terminal Colors.\n\t\t\tcavailable = (not window?) and process? and not process.env.NODE_DISABLE_COLORS\n\t\t\tpalette =\n\t\t\t\tbold: '\\x1B[0;1m'\n\t\t\t\tred: '\\x1B[0;31m'\n\t\t\t\tgreen: '\\x1B[0;32m'\n\t\t\t\tyellow: '\\x1B[0;33m'\n\t\t\t\tblue: '\\x1B[0;34m'\n\t\t\t\tbold_grey: '\\x1B[1;30m'\n\t\t\tif not cavailable\n\t\t\t\t(color) -> (s) -> s\n\t\t\telse\n\t\t\t\t(color) ->\n\t\t\t\t\t(s) -> \"#{palette[color]}#{s}#{'\\x1B[0m'}\"\n\n\t\tlog_label = do ->\n\t\t\tflag_palette =\n\t\t\t\t'#': 'bold_grey'\n\t\t\t\t'I': 'green'\n\t\t\t\t'E': 'red'\n\t\t\t\t'W': 'yellow'\n\t\t\top_flag = (op) ->\n\t\t\t\tif op == 'log' then '#' else op[0].toUpperCase()\n\t\t\t(op) ->\n\t\t\t\tflag = op_flag(op)\n\t\t\t\tdye(flag_palette[flag]) flag\n\n\t\thistories = []\n\t\tfactory = (op) ->\n\t\t\tprefix = \"#{dye('bold_grey') '#'}#{log_label op}\"\n\t\t\t(args...) ->\n\t\t\t\tball = []\n\t\t\t\tfor f in args\n\t\t\t\t\tif typeof f == 'function'\n\t\t\t\t\t\texpr = function_literal(f)\n\t\t\t\t\t\tstart_time = time_now()\n\t\t\t\t\t\teval_result = f()\n\t\t\t\t\t\ttime_used = time_now() - start_time\n\t\t\t\t\t\tball.push(\"#{prefix} #{dye('green') expr} #{dye('bold_grey') '==>'}\", eval_result)\n\t\t\t\t\t\tball.push(dye('yellow') \"[#{time_used}ms]\") if time_used > 0\n\t\t\t\t\telse\n\t\t\t\t\t\tball.push(\"#{prefix}\", f)\n\t\t\t\tconsole[op] ball...\n\t\t\t\thistories.push(ball)\n\t\t\t\thistories.shift() if histories.length >= 10\n\t\t\t\treturn null\n\t\tgot = factory('log')\n\t\tgot.histories = histories\n\t\tgot.info = factory('info')\n\t\tgot.warn = factory('warn')\n\t\tgot.error = got.err = factory('error')\n\t\treturn got\n\n\tassert = (f, msg) ->\n\t\t[f, msg] = [msg, f] if f not instanceof Function\n\t\ttry\n\t\t\tr = f()\n\t\tcatch e\n\t\t\tthrow Error \"Assertion #{msg ? function_literal(f)} Unknown:\\n#{e}\"\n\t\tif not r\n\t\t\tthrow Error \"Assertion #{msg ? function_literal(f)} Failed!\"\n\n\tassertEq = (l, r) ->\n\t\ttry\n\t\t\tlv = l()\n\t\t\trv = r()\n\t\tcatch e\n\t\t\tthrow Error \"Equation Between #{function_literal(l)} And #{function_literal(r)} Unknown:\\n#{e}\"\n\t\tif lv isnt rv\n\t\t\tthrow Error \"Equation Failed:\\n\\t#{function_literal(l)} IS #{lv} BUT\\n\\t#{function_literal(r)} IS #{rv}.\"\n\n\tassertEqOn = (f) -> (l, r) ->\n\t\ttry\n\t\t\tlv = l()\n\t\t\trv = r()\n\t\t\tflv = f(lv)\n\t\t\tfrv = f(rv)\n\t\tcatch e\n\t\t\tthrow Error \"MAPPED Equation Between #{function_literal(l)} And #{function_literal(r)} Unknown:\\n#{e}\"\n\t\tif flv isnt frv\n\t\t\tthrow Error \"Equation Failed:\\n\\t#{function_literal(l)} IS #{lv} AND MAPPED TO #{flv} BUT\\n\\t#{function_literal(r)} IS #{rv} AND MAPPED TO #{frv}.\"\n\n\tsecurely = (f) -> # ensure a function not to modify it's arguments\n\t\t(args...) ->\n\t\t\targs = deepcopy args\n\t\t\tf(args...)\n\n\tdict = (pairs) -> #for dict comprehensions\n\t\td = {}\n\t\td[k] = v for [k, v] in pairs\n\t\treturn d\n\n\t{copy, deepcopy} = do ->\n\t\tcp = (root, dep) ->\n\t\t\treturn root if dep == 0 or not root? or typeof(root) != 'object'\n\t\t\tif root instanceof Array\n\t\t\t\tr = (cp(v, dep-1) for v in root)\n\t\t\telse\n\t\t\t\tr = {}\n\t\t\t\tr[k] = cp(v, dep-1) for k, v of root\n\t\t\treturn r\n\t\tcopy: (obj, depth=1) -> cp(obj, depth)\n\t\tdeepcopy: (obj, depth=Infinity) -> cp(obj, depth)\n\n\textend = (base) -> (defaults...) -> #NOTE: modified inplace, use copy() to protect it.\n\t\tfor d in defaults when d?\n\t\t\tbase[k] ?= v for k, v of d #NOTE: null values will be replaced if a default value exists.\n\t\treturn base\n\n\tupdate = (base) -> (updates...) -> #NOTE: modified inplace, use copy() to protect it.\n\t\tfor d in updates when d?\n\t\t\tbase[k] = v for k, v of d\n\t\treturn base\n\n\toverload = (_d) ->\n\t\td = copy _d\n\t\tfallback = d['_']\n\t\tif fallback?\n\t\t\t(args...) ->\n\t\t\t\t(d[args.length] ? fallback) args...\n\t\telse\n\t\t\t(args...) ->\n\t\t\t\tf = d[args.length]\n\t\t\t\tif not f?\n\t\t\t\t\tthrow Error \"This Function Can't Accept #{args.length} Args\"\n\t\t\t\telse\n\t\t\t\t\treturn f args...\n\n\treturn {\n\t\tlog, assert, assertEq, assertEqOn, dict, copy, deepcopy, securely, extend, update, overload,\n\t}\n\nmodule.exports = this_module()\n\n"]}