{"version":3,"sources":["/source/node_modules/browserify/node_modules/browser-pack/_prelude.js","/source/src/coffee-mate.coffee","coffee-mate.js","/source/node_modules/browserify/node_modules/process/browser.js","/source/node_modules/lazy-list/build/nodejs/lazy.js","/source/src/basics.coffee","/source/src/convertors.coffee","/source/src/funny.coffee","/source/src/url-helpers.coffee","/source/src/utils.coffee"],"names":["f","exports","module","define","amd","g","window","global","self","this","CoffeeMate","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"basics","convertors","funny","lazy","url_helpers","utils","extend","./basics","./convertors","./funny","./url-helpers","./utils","lazy-list",2,"cleanUpNextTick","draining","currentQueue","queue","concat","queueIndex","drainQueue","timeout","setTimeout","len","run","clearTimeout","Item","fun","array","noop","process","nextTick","args","Array","arguments","push","prototype","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","name","cwd","chdir","dir","umask",3,"this_module","slice","arg","CustomErrorType","Iterator","LazyList","ListError","Symbol","all","any","best","brk","cartProd","cons","drop","dropWhile","enumerate","filter","foldl","foreach","fromList","groupOn","head","iterate","last","list","map","maximum","maximumOn","minimum","minimumOn","naturals","nil","partition","permutations","primes","randoms","range","ref","repeat","reverse","scanl","sort","sortOn","streak","streak2","take","takeWhile","zip","zipWith","errorName","msg","CustomError","__proto__","iterator","toString","toJSON","it","next","value","done","stop","start","step","x","p","Infinity","xs","constructor","String","keys","Object","k","init","st","hash","normal","salt","Math","PI","sin","floor","seed","opts","ref1","rg","next_permutation","m","arr","ls","json","c","iter","ok","finished","j","prevx","op","got","buf","shift","b","fa","fb","memo","v","y","results","xss","xs_iter","len1","iters","apply_vector","inc_vector","limits","len_minus_1","vec","space","get_value","inc","results1","better","all_not","pairs","arg1","callback","fruit","defineProperties","break","writable","configurable","enumerable",4,"abs","ceil","combine","curry2","curry3","equal","flip","format","greaterEqual","greaterThan","identity","lessEqual","lessThan","minus","notEqual","pack","pluck","plus","precise","seek","sum","uncurry2","uncurry3","unpack","form","replace","attr","d","parseFloat","toPrecision",5,"bool","chr","flatJson","float","hex","int","jsonWith","obj","ord","prettyJson","str","base","parseInt","test","charCodeAt","fromCharCode","JSON","stringify","indent","convertor","flat","parse","_error",6,"Y","church","fix","memoFix","memoize","get_key","cache","cached","key","ff",7,"uri_decoder","uri_encoder","component_packer","encodeURIComponent","join","component_unpacker","ref2","match","decodeURIComponent",8,"assert","assertEq","assertEqOn","copy","deepcopy","dict","function_literal","log","overload","securely","time_now","update","expr","Date","getTime","dye","factory","histories","log_label","cavailable","palette","NODE_DISABLE_COLORS","bold","red","green","yellow","blue","bold_grey","color","flag_palette","op_flag","#","I","E","W","toUpperCase","flag","prefix","ball","eval_result","start_time","time_used","console","info","warn","error","err","Function","lv","rv","flv","frv","cp","root","dep","depth","defaults","updates","_d","fallback","_process"],"mappings":"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","file":"coffee-mate.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","utils = require './utils'\nbasics = require './basics'\nlazy = require 'lazy-list'\nfunny = require './funny'\nconvertors = require './convertors'\nurl_helpers = require './url-helpers'\n\nmodule.exports = utils.extend({}) utils, basics, lazy, funny, convertors, url_helpers\n\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.CoffeeMate = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nvar basics, convertors, funny, lazy, url_helpers, utils;\n\nutils = require('./utils');\n\nbasics = require('./basics');\n\nlazy = require('lazy-list');\n\nfunny = require('./funny');\n\nconvertors = require('./convertors');\n\nurl_helpers = require('./url-helpers');\n\nmodule.exports = utils.extend({})(utils, basics, lazy, funny, convertors, url_helpers);\n\n\n},{\"./basics\":4,\"./convertors\":5,\"./funny\":6,\"./url-helpers\":7,\"./utils\":8,\"lazy-list\":3}],2:[function(require,module,exports){\n// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            currentQueue[queueIndex].run();\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (!draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],3:[function(require,module,exports){\n(function() {\n  var this_module,\n    slice = [].slice;\n\n  this_module = function(arg) {\n    var CustomErrorType, Iterator, LazyList, ListError, Symbol, all, any, best, brk, cartProd, concat, cons, drop, dropWhile, enumerate, filter, foldl, foreach, fromList, groupOn, head, iterate, last, lazy, length, list, map, maximum, maximumOn, minimum, minimumOn, naturals, nil, partition, permutations, primes, randoms, range, ref, repeat, reverse, scanl, sort, sortOn, streak, streak2, take, takeWhile, zip, zipWith;\n    Symbol = arg.Symbol;\n    CustomErrorType = function(errorName) {\n      return function(msg) {\n        var CustomError;\n        CustomError = function(msg) {\n          var self;\n          self = new Error(msg);\n          self.name = errorName;\n          self.__proto__ = CustomError.prototype;\n          return self;\n        };\n        CustomError.prototype.__proto__ = Error.prototype;\n        return new CustomError(msg);\n      };\n    };\n    ListError = CustomErrorType('ListError');\n    LazyList = function(f) {\n      f[Symbol.iterator] = function() {\n        return f();\n      };\n      f.toString = function() {\n        return \"LazyList\";\n      };\n      f.toJSON = function() {\n        return list(f);\n      };\n      return f;\n    };\n    nil = LazyList(function() {\n      return nil;\n    });\n    nil.toString = function() {\n      return 'nil';\n    };\n    Iterator = function(it) {\n      it.next = function() {\n        var r;\n        r = it();\n        return {\n          value: r,\n          done: r === nil\n        };\n      };\n      it.toString = function() {\n        return \"Iterator\";\n      };\n      return it;\n    };\n    naturals = LazyList(function() {\n      var i;\n      i = -1;\n      return Iterator(function() {\n        return ++i;\n      });\n    });\n    range = function() {\n      var args;\n      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      if (args.length === 0) {\n        return naturals;\n      } else if (args.length === 1) {\n        return LazyList(function() {\n          var i, stop;\n          stop = args[0];\n          i = -1;\n          return Iterator(function() {\n            if (++i < stop) {\n              return i;\n            } else {\n              return nil;\n            }\n          });\n        });\n      } else if (args.length === 2) {\n        return LazyList(function() {\n          var i, start, stop;\n          start = args[0], stop = args[1];\n          if (start < stop) {\n            i = start - 1;\n            return Iterator(function() {\n              if (++i < stop) {\n                return i;\n              } else {\n                return nil;\n              }\n            });\n          } else {\n            i = start + 1;\n            return Iterator(function() {\n              if (--i > stop) {\n                return i;\n              } else {\n                return nil;\n              }\n            });\n          }\n        });\n      } else {\n        return LazyList(function() {\n          var i, start, step, stop;\n          start = args[0], stop = args[1], step = args[2];\n          if (stop !== start && (stop - start) * step < 0) {\n            throw ListError('ERR IN range(): YOU ARE CREATING AN UNLIMITTED RANGE');\n          }\n          i = start - step;\n          if (start < stop) {\n            return Iterator(function() {\n              if ((i += step) < stop) {\n                return i;\n              } else {\n                return nil;\n              }\n            });\n          } else {\n            return Iterator(function() {\n              if ((i += step) > stop) {\n                return i;\n              } else {\n                return nil;\n              }\n            });\n          }\n        });\n      }\n    };\n    primes = LazyList(function() {\n      return filter(function(x) {\n        return all(function(p) {\n          return x % p !== 0;\n        })(takeWhile(function(p) {\n          return p * p <= x;\n        })(range(2, Infinity)));\n      })(range(2, Infinity))();\n    });\n    lazy = function(xs) {\n      var ref;\n      if (typeof xs === 'function') {\n        if (xs[Symbol.iterator] != null) {\n          return xs;\n        } else {\n          return LazyList(xs);\n        }\n      } else if ((ref = xs.constructor) === Array || ref === String) {\n        return LazyList(function() {\n          var i;\n          i = -1;\n          return Iterator(function() {\n            if ((++i) < xs.length) {\n              return xs[i];\n            } else {\n              return nil;\n            }\n          });\n        });\n      } else if (xs[Symbol.iterator] != null) {\n        return LazyList(function() {\n          var it;\n          it = xs[Symbol.iterator]();\n          return Iterator(function() {\n            var r;\n            r = it.next();\n            if (r.done) {\n              return nil;\n            } else {\n              return r.value;\n            }\n          });\n        });\n      } else {\n        throw ListError('lazy(xs): xs is neither Array nor Iterable');\n      }\n    };\n    enumerate = function(it) {\n      if ((it[Symbol.iterator] != null) || it instanceof Array) {\n        return zip(naturals, it);\n      } else {\n        return LazyList(function() {\n          var i, keys;\n          keys = Object.keys(it);\n          i = -1;\n          return Iterator(function() {\n            var k;\n            if (++i < keys.length) {\n              return [(k = keys[i]), it[k]];\n            } else {\n              return nil;\n            }\n          });\n        });\n      }\n    };\n    repeat = function(x) {\n      return LazyList(function() {\n        return Iterator(function() {\n          return x;\n        });\n      });\n    };\n    iterate = function(next, init) {\n      return LazyList(function() {\n        var st;\n        st = init;\n        return Iterator(function() {\n          var r;\n          r = st;\n          st = next(st);\n          return r;\n        });\n      });\n    };\n    randoms = (function() {\n      var hash, normal, salt;\n      salt = Math.PI / 3.0;\n      hash = function(x) {\n        x = Math.sin(x + salt) * 1e4;\n        return x - Math.floor(x);\n      };\n      normal = function(seed) {\n        return iterate(hash, hash(seed));\n      };\n      return function(opts) {\n        var k, ref, ref1, rg, s, seed;\n        if (opts == null) {\n          return normal(0);\n        } else if (typeof opts === 'number') {\n          return normal(opts);\n        } else {\n          seed = (ref = opts.seed) != null ? ref : 0;\n          rg = opts.range;\n          if (rg != null) {\n            if (typeof rg === 'number') {\n              return map(function(x) {\n                return Math.floor(x * rg);\n              })(normal(seed));\n            } else {\n              ref1 = [rg[0], rg[1] - rg[0] + 1], s = ref1[0], k = ref1[1];\n              return map(function(x) {\n                return s + Math.floor(x * k);\n              })(normal(seed));\n            }\n          } else {\n            return normal(seed);\n          }\n        }\n      };\n    })();\n    permutations = (function() {\n      var next_permutation;\n      next_permutation = function(x) {\n        var l, m, r, ref, ref1;\n        x = x.slice(0);\n        l = x.length - 1;\n        while (l >= 1 && x[l] <= x[l - 1]) {\n          --l;\n        }\n        if (l !== 0) {\n          m = x.length - 1;\n          while (m > l - 1 && x[m] <= x[l - 1]) {\n            --m;\n          }\n          ref = [x[l - 1], x[m]], x[m] = ref[0], x[l - 1] = ref[1];\n        }\n        r = x.length - 1;\n        while (l < r) {\n          ref1 = [x[r], x[l]], x[l] = ref1[0], x[r] = ref1[1];\n          ++l;\n          --r;\n        }\n        return x;\n      };\n      return function(xs) {\n        var arr;\n        arr = list(xs);\n        if (arr.length === 0) {\n          return nil;\n        } else {\n          return cons(arr.slice(0))(takeWhile(function(ls) {\n            return json(ls) !== json(arr);\n          })(drop(1)(iterate(next_permutation, arr))));\n        }\n      };\n    })();\n    take = function(n) {\n      return function(xs) {\n        return LazyList(function() {\n          var c, iter;\n          iter = lazy(xs)[Symbol.iterator]();\n          c = -1;\n          return Iterator(function() {\n            if (++c < n) {\n              return iter();\n            } else {\n              return nil;\n            }\n          });\n        });\n      };\n    };\n    takeWhile = function(ok) {\n      return function(xs) {\n        return LazyList(function() {\n          var iter;\n          iter = lazy(xs)[Symbol.iterator]();\n          return Iterator(function() {\n            var x;\n            if ((x = iter()) !== nil && ok(x)) {\n              return x;\n            } else {\n              return nil;\n            }\n          });\n        });\n      };\n    };\n    drop = function(n) {\n      return function(xs) {\n        return LazyList(function() {\n          var finished, i, iter, j, ref;\n          iter = lazy(xs)[Symbol.iterator]();\n          finished = false;\n          for (i = j = 0, ref = n; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n            finished || (finished = iter() === nil);\n            if (finished) {\n              break;\n            }\n          }\n          if (finished) {\n            return function() {\n              return nil;\n            };\n          } else {\n            return iter;\n          }\n        });\n      };\n    };\n    dropWhile = function(ok) {\n      return function(xs) {\n        return LazyList(function() {\n          var iter, x;\n          iter = lazy(xs)[Symbol.iterator]();\n          while (ok(x = iter()) && x !== nil) {\n            null;\n          }\n          return Iterator(function() {\n            var prevx, ref;\n            ref = [x, iter()], prevx = ref[0], x = ref[1];\n            return prevx;\n          });\n        });\n      };\n    };\n    cons = function(x) {\n      return function(xs) {\n        return LazyList(function() {\n          var iter;\n          iter = null;\n          return Iterator(function() {\n            if (iter === null) {\n              iter = lazy(xs)[Symbol.iterator]();\n              return x;\n            } else {\n              return iter();\n            }\n          });\n        });\n      };\n    };\n    map = function(f) {\n      return function(xs) {\n        return LazyList(function() {\n          var iter;\n          iter = lazy(xs)[Symbol.iterator]();\n          return Iterator(function() {\n            var x;\n            if ((x = iter()) !== nil) {\n              return f(x);\n            } else {\n              return nil;\n            }\n          });\n        });\n      };\n    };\n    filter = function(ok) {\n      return function(xs) {\n        return LazyList(function() {\n          var iter;\n          iter = lazy(xs)[Symbol.iterator]();\n          return Iterator(function() {\n            var x;\n            while ((x = iter()) !== nil && !ok(x)) {\n              null;\n            }\n            return x;\n          });\n        });\n      };\n    };\n    scanl = function(op) {\n      return function(r) {\n        return function(xs) {\n          return LazyList(function() {\n            var iter;\n            iter = lazy(xs)[Symbol.iterator]();\n            return Iterator(function() {\n              var got, x;\n              got = r;\n              r = (x = iter()) !== nil ? op(r)(x) : nil;\n              return got;\n            });\n          });\n        };\n      };\n    };\n    streak = function(n) {\n      if (n < 1) {\n        return nil;\n      } else {\n        return function(xs) {\n          return drop(n - 1)(LazyList(function() {\n            var buf, iter;\n            iter = lazy(xs)[Symbol.iterator]();\n            buf = [];\n            return Iterator(function() {\n              var x;\n              if ((x = iter()) === nil) {\n                return nil;\n              }\n              buf.push(x);\n              if (buf.length > n) {\n                buf.shift(1);\n              }\n              return buf.slice(0);\n            });\n          }));\n        };\n      }\n    };\n    streak2 = function(n) {\n      return function(xs) {\n        return streak(n)(concat([xs, take(n - 1)(xs)]));\n      };\n    };\n    reverse = function(xs) {\n      var ref;\n      if ((ref = xs.constructor) === Array || ref === String) {\n        return LazyList(function() {\n          var i;\n          i = xs.length;\n          return Iterator(function() {\n            if ((--i) >= 0) {\n              return xs[i];\n            } else {\n              return nil;\n            }\n          });\n        });\n      } else {\n        return list(lazy(xs)).reverse();\n      }\n    };\n    sort = function(xs) {\n      var arr;\n      arr = list(lazy(xs));\n      return arr.sort(function(a, b) {\n        return (a > b) - (a < b);\n      });\n    };\n    sortOn = function(f) {\n      return function(xs) {\n        var arr;\n        arr = list(lazy(xs));\n        return arr.sort(function(a, b) {\n          var fa, fb;\n          return ((fa = f(a)) > (fb = f(b))) - (fa < fb);\n        });\n      };\n    };\n    groupOn = function(f) {\n      return function(xs) {\n        var k, memo, v;\n        memo = {};\n        foreach(xs, function(x) {\n          var y;\n          y = f(x);\n          if (memo[y] == null) {\n            memo[y] = [];\n          }\n          return memo[y].push(x);\n        });\n        return (function() {\n          var results;\n          results = [];\n          for (k in memo) {\n            v = memo[k];\n            results.push(v);\n          }\n          return results;\n        })();\n      };\n    };\n    partition = function(f) {\n      return function(xs) {\n        var memo;\n        memo = [[], []];\n        foreach(xs, function(x) {\n          var y;\n          y = !f(x) + 0;\n          return memo[y].push(x);\n        });\n        return memo;\n      };\n    };\n    concat = function(xss) {\n      xss = filter(function(x) {\n        var ref;\n        return ((ref = x.constructor) !== Array && ref !== String) || x.length > 0;\n      })(xss);\n      return LazyList(function() {\n        var iter, xs, xs_iter;\n        xs_iter = lazy(xss)[Symbol.iterator]();\n        xs = xs_iter();\n        iter = lazy(xs)[Symbol.iterator]();\n        return Iterator(function() {\n          var x;\n          if ((x = iter()) !== nil) {\n            return x;\n          } else if ((xs = xs_iter()) !== nil) {\n            iter = lazy(xs)[Symbol.iterator]();\n            return iter();\n          } else {\n            return nil;\n          }\n        });\n      });\n    };\n    ref = (function() {\n      var finished, zip, zipWith;\n      finished = function(arr) {\n        var j, len1, x;\n        for (j = 0, len1 = arr.length; j < len1; j++) {\n          x = arr[j];\n          if (x === nil) {\n            return true;\n          }\n        }\n        return false;\n      };\n      zip = function() {\n        var xss;\n        xss = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        return LazyList(function() {\n          var iters, xs;\n          iters = (function() {\n            var j, len1, results;\n            results = [];\n            for (j = 0, len1 = xss.length; j < len1; j++) {\n              xs = xss[j];\n              results.push(lazy(xs)[Symbol.iterator]());\n            }\n            return results;\n          })();\n          return Iterator(function() {\n            var iter, next;\n            next = (function() {\n              var j, len1, results;\n              results = [];\n              for (j = 0, len1 = iters.length; j < len1; j++) {\n                iter = iters[j];\n                results.push(iter());\n              }\n              return results;\n            })();\n            if (finished(next)) {\n              return nil;\n            } else {\n              return next;\n            }\n          });\n        });\n      };\n      zipWith = function(f) {\n        return function() {\n          var xss;\n          xss = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n          return LazyList(function() {\n            var iters, xs;\n            iters = (function() {\n              var j, len1, results;\n              results = [];\n              for (j = 0, len1 = xss.length; j < len1; j++) {\n                xs = xss[j];\n                results.push(lazy(xs)[Symbol.iterator]());\n              }\n              return results;\n            })();\n            return Iterator(function() {\n              var iter, next;\n              next = (function() {\n                var j, len1, results;\n                results = [];\n                for (j = 0, len1 = iters.length; j < len1; j++) {\n                  iter = iters[j];\n                  results.push(iter());\n                }\n                return results;\n              })();\n              if (finished(next)) {\n                return nil;\n              } else {\n                return f.apply(null, next);\n              }\n            });\n          });\n        };\n      };\n      return {\n        zip: zip,\n        zipWith: zipWith\n      };\n    })(), zip = ref.zip, zipWith = ref.zipWith;\n    cartProd = (function() {\n      var apply_vector, inc_vector;\n      inc_vector = function(limits) {\n        var len_minus_1;\n        len_minus_1 = limits.length - 1;\n        return function(vec) {\n          var i;\n          i = len_minus_1;\n          while (!(++vec[i] < limits[i] || i <= 0)) {\n            vec[i--] = 0;\n          }\n          return vec;\n        };\n      };\n      apply_vector = function(space) {\n        var len;\n        len = space.length;\n        return function(vec) {\n          var i, j, ref1, results;\n          results = [];\n          for (i = j = 0, ref1 = len; 0 <= ref1 ? j < ref1 : j > ref1; i = 0 <= ref1 ? ++j : --j) {\n            results.push(space[i][vec[i]]);\n          }\n          return results;\n        };\n      };\n      return function() {\n        var xss;\n        xss = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        return LazyList(function() {\n          var get_value, i, inc, j, len, len1, limits, v, xs;\n          xss = (function() {\n            var j, len1, results;\n            results = [];\n            for (j = 0, len1 = xss.length; j < len1; j++) {\n              xs = xss[j];\n              results.push(list(xs));\n            }\n            return results;\n          })();\n          limits = (function() {\n            var j, ref1, results;\n            results = [];\n            for (i = j = 0, ref1 = xss.length; 0 <= ref1 ? j < ref1 : j > ref1; i = 0 <= ref1 ? ++j : --j) {\n              results.push(xss[i].length);\n            }\n            return results;\n          })();\n          for (j = 0, len1 = limits.length; j < len1; j++) {\n            len = limits[j];\n            if (len === 0) {\n              return nil;\n            }\n          }\n          inc = inc_vector(limits);\n          get_value = apply_vector(xss);\n          v = (function() {\n            var o, ref1, results;\n            results = [];\n            for (i = o = 0, ref1 = xss.length; 0 <= ref1 ? o < ref1 : o > ref1; i = 0 <= ref1 ? ++o : --o) {\n              results.push(0);\n            }\n            return results;\n          })();\n          return Iterator(function() {\n            var r;\n            if (v[0] < limits[0]) {\n              r = get_value(v);\n              inc(v);\n              return r;\n            } else {\n              return nil;\n            }\n          });\n        });\n      };\n    })();\n    list = function(xs) {\n      var it, n, results, results1, x;\n      if (xs instanceof Array) {\n        return xs;\n      } else if (typeof xs === 'function') {\n        it = xs[Symbol.iterator]();\n        results = [];\n        while ((x = it()) !== nil) {\n          results.push(x);\n        }\n        return results;\n      } else if (xs[Symbol.iterator] != null) {\n        it = lazy(xs)[Symbol.iterator]();\n        results1 = [];\n        while ((x = it()) !== nil) {\n          results1.push(x);\n        }\n        return results1;\n      } else if (typeof xs === 'number') {\n        n = xs;\n        return function(xs) {\n          return list(take(n)(xs));\n        };\n      } else {\n        throw ListError('list(xs): xs is neither Array nor Iterable');\n      }\n    };\n    head = function(xs) {\n      var iter, r, ref1;\n      if ((ref1 = xs.constructor) === Array || ref1 === String) {\n        if (xs.length > 0) {\n          return xs[0];\n        } else {\n          throw ListError(\"head() used on empty list.\");\n        }\n      } else {\n        iter = lazy(xs)[Symbol.iterator]();\n        if ((r = iter()) !== nil) {\n          return r;\n        } else {\n          throw ListError(\"head() used on empty list.\");\n        }\n      }\n    };\n    last = function(xs) {\n      var iter, r, ref1, x;\n      if ((ref1 = xs.constructor) === Array || ref1 === String) {\n        if (xs.length > 0) {\n          return xs[xs.length - 1];\n        } else {\n          throw ListError(\"last() used on empty list.\");\n        }\n      } else {\n        iter = lazy(xs)[Symbol.iterator]();\n        r = nil;\n        while ((x = iter()) !== nil) {\n          r = x;\n        }\n        if (r !== nil) {\n          return r;\n        } else {\n          throw ListError(\"last() used on empty list.\");\n        }\n      }\n    };\n    length = function(xs) {\n      var iter, r, ref1, x;\n      if ((ref1 = xs.constructor) === Array || ref1 === String) {\n        return xs.length;\n      } else {\n        iter = lazy(xs)[Symbol.iterator]();\n        r = 0;\n        while ((x = iter()) !== nil) {\n          ++r;\n        }\n        return r;\n      }\n    };\n    foldl = function(op) {\n      return function(init) {\n        return function(xs) {\n          var iter, r, x;\n          r = init;\n          iter = lazy(xs)[Symbol.iterator]();\n          while ((x = iter()) !== nil) {\n            r = op(r)(x);\n          }\n          return r;\n        };\n      };\n    };\n    best = function(better) {\n      return function(xs) {\n        var it, iter, r;\n        iter = lazy(xs)[Symbol.iterator]();\n        if ((r = iter()) === nil) {\n          return null;\n        }\n        while ((it = iter()) !== nil) {\n          r = better(it, r) ? it : r;\n        }\n        return r;\n      };\n    };\n    maximumOn = function(f) {\n      return best(function(a, b) {\n        return f(a) > f(b);\n      });\n    };\n    minimumOn = function(f) {\n      return best(function(a, b) {\n        return f(a) > f(b);\n      });\n    };\n    maximum = best(function(x, y) {\n      return x > y;\n    });\n    minimum = best(function(x, y) {\n      return x < y;\n    });\n    all = function(f) {\n      if (typeof f !== 'function') {\n        f = (function(x) {\n          return x === f;\n        });\n      }\n      return function(xs) {\n        var iter, x;\n        iter = lazy(xs)[Symbol.iterator]();\n        while ((x = iter()) !== nil) {\n          if (!f(x)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    };\n    any = function(f) {\n      var all_not;\n      all_not = all(function(x) {\n        return !f(x);\n      });\n      return function(xs) {\n        return !(all_not(xs));\n      };\n    };\n    fromList = function(pairs) {\n      var r;\n      r = {};\n      foreach(pairs, function(arg1) {\n        var k, v;\n        k = arg1[0], v = arg1[1];\n        if (v !== void 0) {\n          return r[k] = v;\n        }\n      });\n      return r;\n    };\n    brk = function() {\n      return brk;\n    };\n    brk.toString = function() {\n      return 'foreach.break';\n    };\n    foreach = function(xs, callback, fruit) {\n      var iter, x;\n      iter = lazy(xs)[Symbol.iterator]();\n      while ((x = iter()) !== nil) {\n        if (callback(x, fruit) === brk) {\n          break;\n        }\n      }\n      return fruit;\n    };\n    Object.defineProperties(foreach, {\n      \"break\": {\n        writable: false,\n        configurable: false,\n        enumerable: false,\n        value: brk\n      }\n    });\n    return {\n      nil: nil,\n      LazyList: LazyList,\n      Iterator: Iterator,\n      Symbol: Symbol,\n      naturals: naturals,\n      range: range,\n      primes: primes,\n      lazy: lazy,\n      enumerate: enumerate,\n      repeat: repeat,\n      iterate: iterate,\n      randoms: randoms,\n      permutations: permutations,\n      cons: cons,\n      map: map,\n      filter: filter,\n      take: take,\n      takeWhile: takeWhile,\n      drop: drop,\n      dropWhile: dropWhile,\n      scanl: scanl,\n      streak: streak,\n      streak2: streak2,\n      reverse: reverse,\n      sort: sort,\n      sortOn: sortOn,\n      groupOn: groupOn,\n      partition: partition,\n      concat: concat,\n      zip: zip,\n      zipWith: zipWith,\n      cartProd: cartProd,\n      list: list,\n      head: head,\n      last: last,\n      length: length,\n      foldl: foldl,\n      best: best,\n      maximum: maximum,\n      minimum: minimum,\n      maximumOn: maximumOn,\n      minimumOn: minimumOn,\n      all: all,\n      any: any,\n      fromList: fromList,\n      foreach: foreach\n    };\n  };\n\n  module.exports = this_module({\n    Symbol: typeof Symbol !== \"undefined\" && Symbol !== null ? Symbol : {\n      iterator: 'iter'\n    }\n  });\n\n}).call(this);\n\n\n},{}],4:[function(require,module,exports){\nvar this_module,\n  slice = [].slice;\n\nthis_module = function(arg) {\n  var abs, ceil, combine, curry2, curry3, equal, flip, floor, foldl, format, greaterEqual, greaterThan, identity, lessEqual, lessThan, minus, notEqual, pack, pluck, plus, precise, seek, sum, uncurry2, uncurry3, unpack;\n  foldl = arg.foldl;\n  identity = function(x) {\n    return x;\n  };\n  format = function(form) {\n    return function(env) {\n      return form.replace(/\\{(\\w+)\\}/g, function(m, i) {\n        var ref;\n        return (ref = env[i]) != null ? ref : m;\n      });\n    };\n  };\n  flip = function(f) {\n    return function(x) {\n      return function(y) {\n        return f(y)(x);\n      };\n    };\n  };\n  combine = function(f) {\n    return function(g) {\n      return function(x) {\n        return f(g(x));\n      };\n    };\n  };\n  curry2 = function(f) {\n    return function(a) {\n      return function(b) {\n        return f(a, b);\n      };\n    };\n  };\n  curry3 = function(f) {\n    return function(a) {\n      return function(b) {\n        return function(c) {\n          return f(a, b, c);\n        };\n      };\n    };\n  };\n  uncurry2 = function(f) {\n    return function(a, b) {\n      return f(a)(b);\n    };\n  };\n  uncurry3 = function(f) {\n    return function(a, b, c) {\n      return f(a)(b)(c);\n    };\n  };\n  pack = function(f) {\n    return function(arr) {\n      return f.apply(null, arr);\n    };\n  };\n  unpack = function(f) {\n    return function() {\n      var arr;\n      arr = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      return f(arr);\n    };\n  };\n  seek = function(arr) {\n    return function(i) {\n      return arr[i];\n    };\n  };\n  pluck = function(attr) {\n    return function(d) {\n      return d[attr];\n    };\n  };\n  equal = function(it) {\n    return function(x) {\n      return x === it;\n    };\n  };\n  notEqual = function(it) {\n    return function(x) {\n      return x !== it;\n    };\n  };\n  lessThan = function(it) {\n    return function(x) {\n      return x < it;\n    };\n  };\n  greaterThan = function(it) {\n    return function(x) {\n      return x > it;\n    };\n  };\n  lessEqual = function(it) {\n    return function(x) {\n      return x <= it;\n    };\n  };\n  greaterEqual = function(it) {\n    return function(x) {\n      return x >= it;\n    };\n  };\n  plus = function(x) {\n    return function(y) {\n      return x + y;\n    };\n  };\n  minus = function(x) {\n    return function(y) {\n      return x - y;\n    };\n  };\n  abs = Math.abs;\n  floor = Math.floor;\n  ceil = Math.ceil;\n  precise = function(n) {\n    return function(x) {\n      return parseFloat(x.toPrecision(n));\n    };\n  };\n  sum = foldl(plus)(0);\n  return {\n    identity: identity,\n    format: format,\n    flip: flip,\n    combine: combine,\n    curry2: curry2,\n    curry3: curry3,\n    uncurry2: uncurry2,\n    uncurry3: uncurry3,\n    pack: pack,\n    unpack: unpack,\n    seek: seek,\n    pluck: pluck,\n    equal: equal,\n    notEqual: notEqual,\n    lessThan: lessThan,\n    lessEqual: lessEqual,\n    greaterThan: greaterThan,\n    greaterEqual: greaterEqual,\n    plus: plus,\n    minus: minus,\n    abs: abs,\n    floor: floor,\n    ceil: ceil,\n    precise: precise,\n    sum: sum\n  };\n};\n\nmodule.exports = this_module({\n  foldl: require('lazy-list').foldl\n});\n\n\n},{\"lazy-list\":3}],5:[function(require,module,exports){\nvar this_module;\n\nthis_module = function() {\n  var bool, chr, flatJson, float, hex, int, json, jsonWith, obj, ord, prettyJson, str;\n  int = function(s, base) {\n    var r;\n    if (typeof s === 'string') {\n      r = parseInt(s, base);\n      if (!((s.slice != null) && r === parseInt(s.slice(0, -1), base))) {\n        return r;\n      } else {\n        return null;\n      }\n    } else {\n      return parseInt(0 + s);\n    }\n  };\n  float = function(s) {\n    if (/^-?[0-9]*(\\.[0-9]+)?([eE]-?[0-9]+)?$/.test(s)) {\n      return parseFloat(s);\n    } else {\n      return null;\n    }\n  };\n  str = function(x, base) {\n    return x.toString(base);\n  };\n  bool = function(x) {\n    if (x === true || x === false) {\n      return x;\n    } else {\n      return null;\n    }\n  };\n  hex = function(x) {\n    return x.toString(16);\n  };\n  ord = function(c) {\n    return c.charCodeAt();\n  };\n  chr = function(x) {\n    return String.fromCharCode(x);\n  };\n  json = function(it) {\n    return JSON.stringify(it);\n  };\n  jsonWith = function(indent, convertor) {\n    return function(it) {\n      return JSON.stringify(it, convertor, indent);\n    };\n  };\n  prettyJson = function(it) {\n    return JSON.stringify(it, null, 4);\n  };\n  flatJson = (function() {\n    var flat;\n    flat = function(k, v) {\n      if (typeof v === 'string') {\n        try {\n          return JSON.parse(v);\n        } catch (_error) {\n          return v;\n        }\n      } else {\n        return v;\n      }\n    };\n    return function(it) {\n      return JSON.stringify(it, flat, 4);\n    };\n  })();\n  obj = function(s) {\n    return JSON.parse(s);\n  };\n  return {\n    int: int,\n    float: float,\n    bool: bool,\n    str: str,\n    hex: hex,\n    ord: ord,\n    chr: chr,\n    json: json,\n    jsonWith: jsonWith,\n    prettyJson: prettyJson,\n    flatJson: flatJson,\n    obj: obj\n  };\n};\n\nmodule.exports = this_module();\n\n\n},{}],6:[function(require,module,exports){\nvar this_module,\n  slice = [].slice;\n\nthis_module = function() {\n  var Y, church, fix, memoFix, memoize;\n  church = function(n) {\n    var iter;\n    iter = function(f, n, r) {\n      if (n === 0) {\n        return r;\n      } else {\n        return iter(f, n - 1, f(r));\n      }\n    };\n    return function(f) {\n      return function(x) {\n        return iter(f, n + 0, x);\n      };\n    };\n  };\n  Y = function(f) {\n    return (function(x) {\n      return x(x);\n    })((function(x) {\n      return f((function(y) {\n        return (x(x))(y);\n      }));\n    }));\n  };\n  memoize = function(f, get_key) {\n    var cache;\n    if (get_key == null) {\n      get_key = (function() {\n        var args;\n        args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        return json(args);\n      });\n    }\n    cache = {};\n    return function() {\n      var args, cached, key, r;\n      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      key = get_key.apply(null, args);\n      cached = cache[key];\n      if (cached != null) {\n        return cached;\n      } else {\n        r = f.apply(null, args);\n        cache[key] = r;\n        return r;\n      }\n    };\n  };\n  fix = Y;\n  memoFix = function(ff) {\n    var f;\n    f = memoize(ff((function() {\n      var args;\n      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      return f.apply(null, args);\n    })));\n    return f;\n  };\n  return {\n    church: church,\n    Y: Y,\n    memoize: memoize,\n    fix: fix,\n    memoFix: memoFix\n  };\n};\n\nmodule.exports = this_module();\n\n\n},{}],7:[function(require,module,exports){\nvar this_module;\n\nthis_module = function() {\n  var uri_decoder, uri_encoder;\n  uri_encoder = function(component_packer) {\n    if (component_packer == null) {\n      component_packer = str;\n    }\n    return function(obj) {\n      var k, v;\n      return ((function() {\n        var results;\n        results = [];\n        for (k in obj) {\n          v = obj[k];\n          if (v !== void 0) {\n            results.push((encodeURIComponent(k)) + \"=\" + (encodeURIComponent(component_packer(v))));\n          }\n        }\n        return results;\n      })()).join('&');\n    };\n  };\n  uri_decoder = function(component_unpacker) {\n    if (component_unpacker == null) {\n      component_unpacker = (function(s) {\n        return s;\n      });\n    }\n    return function(str) {\n      var d, i, j, k, len, ref, ref1, ref2, s, v;\n      d = {};\n      ref1 = (ref = str.match(/[^?=&]+=[^&]*/g)) != null ? ref : [];\n      for (i = 0, len = ref1.length; i < len; i++) {\n        s = ref1[i];\n        ref2 = s.match(/([^=]+)=(.*)/), j = ref2.length - 2, k = ref2[j++], v = ref2[j++];\n        d[decodeURIComponent(k)] = component_unpacker(decodeURIComponent(v));\n      }\n      return d;\n    };\n  };\n  return {\n    uri_encoder: uri_encoder,\n    uri_decoder: uri_decoder\n  };\n};\n\nmodule.exports = this_module();\n\n\n},{}],8:[function(require,module,exports){\n(function (process){\nvar this_module,\n  slice = [].slice;\n\nthis_module = function() {\n  var assert, assertEq, assertEqOn, copy, deepcopy, dict, extend, function_literal, log, overload, ref, securely, time_now, update;\n  function_literal = function(f) {\n    var expr;\n    expr = f.toString().replace(/^\\s*function\\s?\\(\\s?\\)\\s?{\\s*return\\s*([^]*?);?\\s*}$/, '$1');\n    if (expr.length <= 100) {\n      expr = expr.replace(/[\\r\\n]{1,2}\\s*/g, '');\n    }\n    return expr;\n  };\n  time_now = function() {\n    return (new Date).getTime();\n  };\n  log = (function() {\n    var dye, factory, got, histories, log_label;\n    dye = (function() {\n      var cavailable, palette;\n      cavailable = (typeof window === \"undefined\" || window === null) && (typeof process !== \"undefined\" && process !== null) && !process.env.NODE_DISABLE_COLORS;\n      palette = {\n        bold: '\\x1B[0;1m',\n        red: '\\x1B[0;31m',\n        green: '\\x1B[0;32m',\n        yellow: '\\x1B[0;33m',\n        blue: '\\x1B[0;34m',\n        bold_grey: '\\x1B[1;30m'\n      };\n      if (!cavailable) {\n        return function(color) {\n          return function(s) {\n            return s;\n          };\n        };\n      } else {\n        return function(color) {\n          return function(s) {\n            return \"\" + palette[color] + s + '\\x1B[0m';\n          };\n        };\n      }\n    })();\n    log_label = (function() {\n      var flag_palette, op_flag;\n      flag_palette = {\n        '#': 'bold_grey',\n        'I': 'green',\n        'E': 'red',\n        'W': 'yellow'\n      };\n      op_flag = function(op) {\n        if (op === 'log') {\n          return '#';\n        } else {\n          return op[0].toUpperCase();\n        }\n      };\n      return function(op) {\n        var flag;\n        flag = op_flag(op);\n        return dye(flag_palette[flag])(flag);\n      };\n    })();\n    histories = [];\n    factory = function(op) {\n      var prefix;\n      prefix = \"\" + (dye('bold_grey')('#')) + (log_label(op));\n      return function() {\n        var args, ball, eval_result, expr, f, i, len, start_time, time_used;\n        args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        ball = [];\n        for (i = 0, len = args.length; i < len; i++) {\n          f = args[i];\n          if (typeof f === 'function') {\n            expr = function_literal(f);\n            start_time = time_now();\n            eval_result = f();\n            time_used = time_now() - start_time;\n            ball.push(prefix + \" \" + (dye('green')(expr)) + \" \" + (dye('bold_grey')('==>')), eval_result);\n            if (time_used > 0) {\n              ball.push(dye('yellow')(\"[\" + time_used + \"ms]\"));\n            }\n          } else {\n            ball.push(\"\" + prefix, f);\n          }\n        }\n        console[op].apply(console, ball);\n        histories.push(ball);\n        if (histories.length >= 10) {\n          histories.shift();\n        }\n        return null;\n      };\n    };\n    got = factory('log');\n    got.histories = histories;\n    got.info = factory('info');\n    got.warn = factory('warn');\n    got.error = got.err = factory('error');\n    return got;\n  })();\n  assert = function(f, msg) {\n    var e, r, ref;\n    if (!(f instanceof Function)) {\n      ref = [msg, f], f = ref[0], msg = ref[1];\n    }\n    try {\n      r = f();\n    } catch (_error) {\n      e = _error;\n      throw Error(\"Assertion \" + (msg != null ? msg : function_literal(f)) + \" Unknown:\\n\" + e);\n    }\n    if (!r) {\n      throw Error(\"Assertion \" + (msg != null ? msg : function_literal(f)) + \" Failed!\");\n    }\n  };\n  assertEq = function(l, r) {\n    var e, lv, rv;\n    try {\n      lv = l();\n      rv = r();\n    } catch (_error) {\n      e = _error;\n      throw Error(\"Equation Between \" + (function_literal(l)) + \" And \" + (function_literal(r)) + \" Unknown:\\n\" + e);\n    }\n    if (lv !== rv) {\n      throw Error(\"Equation Failed:\\n\\t\" + (function_literal(l)) + \" IS \" + lv + \" BUT\\n\\t\" + (function_literal(r)) + \" IS \" + rv + \".\");\n    }\n  };\n  assertEqOn = function(f) {\n    return function(l, r) {\n      var e, flv, frv, lv, rv;\n      try {\n        lv = l();\n        rv = r();\n        flv = f(lv);\n        frv = f(rv);\n      } catch (_error) {\n        e = _error;\n        throw Error(\"MAPPED Equation Between \" + (function_literal(l)) + \" And \" + (function_literal(r)) + \" Unknown:\\n\" + e);\n      }\n      if (flv !== frv) {\n        throw Error(\"Equation Failed:\\n\\t\" + (function_literal(l)) + \" IS \" + lv + \" AND MAPPED TO \" + flv + \" BUT\\n\\t\" + (function_literal(r)) + \" IS \" + rv + \" AND MAPPED TO \" + frv + \".\");\n      }\n    };\n  };\n  securely = function(f) {\n    return function() {\n      var args;\n      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      args = deepcopy(args);\n      return f.apply(null, args);\n    };\n  };\n  dict = function(pairs) {\n    var d, i, k, len, ref, v;\n    d = {};\n    for (i = 0, len = pairs.length; i < len; i++) {\n      ref = pairs[i], k = ref[0], v = ref[1];\n      d[k] = v;\n    }\n    return d;\n  };\n  ref = (function() {\n    var cp;\n    cp = function(root, dep) {\n      var k, r, v;\n      if (dep === 0 || (root == null) || typeof root !== 'object') {\n        return root;\n      }\n      if (root instanceof Array) {\n        r = (function() {\n          var i, len, results;\n          results = [];\n          for (i = 0, len = root.length; i < len; i++) {\n            v = root[i];\n            results.push(cp(v, dep - 1));\n          }\n          return results;\n        })();\n      } else {\n        r = {};\n        for (k in root) {\n          v = root[k];\n          r[k] = cp(v, dep - 1);\n        }\n      }\n      return r;\n    };\n    return {\n      copy: function(obj, depth) {\n        if (depth == null) {\n          depth = 1;\n        }\n        return cp(obj, depth);\n      },\n      deepcopy: function(obj, depth) {\n        if (depth == null) {\n          depth = Infinity;\n        }\n        return cp(obj, depth);\n      }\n    };\n  })(), copy = ref.copy, deepcopy = ref.deepcopy;\n  extend = function(base) {\n    return function() {\n      var d, defaults, i, k, len, v;\n      defaults = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      for (i = 0, len = defaults.length; i < len; i++) {\n        d = defaults[i];\n        if (d != null) {\n          for (k in d) {\n            v = d[k];\n            if (base[k] == null) {\n              base[k] = v;\n            }\n          }\n        }\n      }\n      return base;\n    };\n  };\n  update = function(base) {\n    return function() {\n      var d, i, k, len, updates, v;\n      updates = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      for (i = 0, len = updates.length; i < len; i++) {\n        d = updates[i];\n        if (d != null) {\n          for (k in d) {\n            v = d[k];\n            base[k] = v;\n          }\n        }\n      }\n      return base;\n    };\n  };\n  overload = function(_d) {\n    var d, fallback;\n    d = copy(_d);\n    fallback = d['_'];\n    if (fallback != null) {\n      return function() {\n        var args, ref1;\n        args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        return ((ref1 = d[args.length]) != null ? ref1 : fallback).apply(null, args);\n      };\n    } else {\n      return function() {\n        var args, f;\n        args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        f = d[args.length];\n        if (f == null) {\n          throw Error(\"This Function Can't Accept \" + args.length + \" Args\");\n        } else {\n          return f.apply(null, args);\n        }\n      };\n    }\n  };\n  return {\n    log: log,\n    assert: assert,\n    assertEq: assertEq,\n    assertEqOn: assertEqOn,\n    dict: dict,\n    copy: copy,\n    deepcopy: deepcopy,\n    securely: securely,\n    extend: extend,\n    update: update,\n    overload: overload\n  };\n};\n\nmodule.exports = this_module();\n\n\n\n}).call(this,require('_process'))\n\n},{\"_process\":2}]},{},[1])(1)\n});\n\n\n//# sourceMappingURL=coffee-mate.js.map","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            currentQueue[queueIndex].run();\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (!draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","(function() {\n  var this_module,\n    slice = [].slice;\n\n  this_module = function(arg) {\n    var CustomErrorType, Iterator, LazyList, ListError, Symbol, all, any, best, brk, cartProd, concat, cons, drop, dropWhile, enumerate, filter, foldl, foreach, fromList, groupOn, head, iterate, last, lazy, length, list, map, maximum, maximumOn, minimum, minimumOn, naturals, nil, partition, permutations, primes, randoms, range, ref, repeat, reverse, scanl, sort, sortOn, streak, streak2, take, takeWhile, zip, zipWith;\n    Symbol = arg.Symbol;\n    CustomErrorType = function(errorName) {\n      return function(msg) {\n        var CustomError;\n        CustomError = function(msg) {\n          var self;\n          self = new Error(msg);\n          self.name = errorName;\n          self.__proto__ = CustomError.prototype;\n          return self;\n        };\n        CustomError.prototype.__proto__ = Error.prototype;\n        return new CustomError(msg);\n      };\n    };\n    ListError = CustomErrorType('ListError');\n    LazyList = function(f) {\n      f[Symbol.iterator] = function() {\n        return f();\n      };\n      f.toString = function() {\n        return \"LazyList\";\n      };\n      f.toJSON = function() {\n        return list(f);\n      };\n      return f;\n    };\n    nil = LazyList(function() {\n      return nil;\n    });\n    nil.toString = function() {\n      return 'nil';\n    };\n    Iterator = function(it) {\n      it.next = function() {\n        var r;\n        r = it();\n        return {\n          value: r,\n          done: r === nil\n        };\n      };\n      it.toString = function() {\n        return \"Iterator\";\n      };\n      return it;\n    };\n    naturals = LazyList(function() {\n      var i;\n      i = -1;\n      return Iterator(function() {\n        return ++i;\n      });\n    });\n    range = function() {\n      var args;\n      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      if (args.length === 0) {\n        return naturals;\n      } else if (args.length === 1) {\n        return LazyList(function() {\n          var i, stop;\n          stop = args[0];\n          i = -1;\n          return Iterator(function() {\n            if (++i < stop) {\n              return i;\n            } else {\n              return nil;\n            }\n          });\n        });\n      } else if (args.length === 2) {\n        return LazyList(function() {\n          var i, start, stop;\n          start = args[0], stop = args[1];\n          if (start < stop) {\n            i = start - 1;\n            return Iterator(function() {\n              if (++i < stop) {\n                return i;\n              } else {\n                return nil;\n              }\n            });\n          } else {\n            i = start + 1;\n            return Iterator(function() {\n              if (--i > stop) {\n                return i;\n              } else {\n                return nil;\n              }\n            });\n          }\n        });\n      } else {\n        return LazyList(function() {\n          var i, start, step, stop;\n          start = args[0], stop = args[1], step = args[2];\n          if (stop !== start && (stop - start) * step < 0) {\n            throw ListError('ERR IN range(): YOU ARE CREATING AN UNLIMITTED RANGE');\n          }\n          i = start - step;\n          if (start < stop) {\n            return Iterator(function() {\n              if ((i += step) < stop) {\n                return i;\n              } else {\n                return nil;\n              }\n            });\n          } else {\n            return Iterator(function() {\n              if ((i += step) > stop) {\n                return i;\n              } else {\n                return nil;\n              }\n            });\n          }\n        });\n      }\n    };\n    primes = LazyList(function() {\n      return filter(function(x) {\n        return all(function(p) {\n          return x % p !== 0;\n        })(takeWhile(function(p) {\n          return p * p <= x;\n        })(range(2, Infinity)));\n      })(range(2, Infinity))();\n    });\n    lazy = function(xs) {\n      var ref;\n      if (typeof xs === 'function') {\n        if (xs[Symbol.iterator] != null) {\n          return xs;\n        } else {\n          return LazyList(xs);\n        }\n      } else if ((ref = xs.constructor) === Array || ref === String) {\n        return LazyList(function() {\n          var i;\n          i = -1;\n          return Iterator(function() {\n            if ((++i) < xs.length) {\n              return xs[i];\n            } else {\n              return nil;\n            }\n          });\n        });\n      } else if (xs[Symbol.iterator] != null) {\n        return LazyList(function() {\n          var it;\n          it = xs[Symbol.iterator]();\n          return Iterator(function() {\n            var r;\n            r = it.next();\n            if (r.done) {\n              return nil;\n            } else {\n              return r.value;\n            }\n          });\n        });\n      } else {\n        throw ListError('lazy(xs): xs is neither Array nor Iterable');\n      }\n    };\n    enumerate = function(it) {\n      if ((it[Symbol.iterator] != null) || it instanceof Array) {\n        return zip(naturals, it);\n      } else {\n        return LazyList(function() {\n          var i, keys;\n          keys = Object.keys(it);\n          i = -1;\n          return Iterator(function() {\n            var k;\n            if (++i < keys.length) {\n              return [(k = keys[i]), it[k]];\n            } else {\n              return nil;\n            }\n          });\n        });\n      }\n    };\n    repeat = function(x) {\n      return LazyList(function() {\n        return Iterator(function() {\n          return x;\n        });\n      });\n    };\n    iterate = function(next, init) {\n      return LazyList(function() {\n        var st;\n        st = init;\n        return Iterator(function() {\n          var r;\n          r = st;\n          st = next(st);\n          return r;\n        });\n      });\n    };\n    randoms = (function() {\n      var hash, normal, salt;\n      salt = Math.PI / 3.0;\n      hash = function(x) {\n        x = Math.sin(x + salt) * 1e4;\n        return x - Math.floor(x);\n      };\n      normal = function(seed) {\n        return iterate(hash, hash(seed));\n      };\n      return function(opts) {\n        var k, ref, ref1, rg, s, seed;\n        if (opts == null) {\n          return normal(0);\n        } else if (typeof opts === 'number') {\n          return normal(opts);\n        } else {\n          seed = (ref = opts.seed) != null ? ref : 0;\n          rg = opts.range;\n          if (rg != null) {\n            if (typeof rg === 'number') {\n              return map(function(x) {\n                return Math.floor(x * rg);\n              })(normal(seed));\n            } else {\n              ref1 = [rg[0], rg[1] - rg[0] + 1], s = ref1[0], k = ref1[1];\n              return map(function(x) {\n                return s + Math.floor(x * k);\n              })(normal(seed));\n            }\n          } else {\n            return normal(seed);\n          }\n        }\n      };\n    })();\n    permutations = (function() {\n      var next_permutation;\n      next_permutation = function(x) {\n        var l, m, r, ref, ref1;\n        x = x.slice(0);\n        l = x.length - 1;\n        while (l >= 1 && x[l] <= x[l - 1]) {\n          --l;\n        }\n        if (l !== 0) {\n          m = x.length - 1;\n          while (m > l - 1 && x[m] <= x[l - 1]) {\n            --m;\n          }\n          ref = [x[l - 1], x[m]], x[m] = ref[0], x[l - 1] = ref[1];\n        }\n        r = x.length - 1;\n        while (l < r) {\n          ref1 = [x[r], x[l]], x[l] = ref1[0], x[r] = ref1[1];\n          ++l;\n          --r;\n        }\n        return x;\n      };\n      return function(xs) {\n        var arr;\n        arr = list(xs);\n        if (arr.length === 0) {\n          return nil;\n        } else {\n          return cons(arr.slice(0))(takeWhile(function(ls) {\n            return json(ls) !== json(arr);\n          })(drop(1)(iterate(next_permutation, arr))));\n        }\n      };\n    })();\n    take = function(n) {\n      return function(xs) {\n        return LazyList(function() {\n          var c, iter;\n          iter = lazy(xs)[Symbol.iterator]();\n          c = -1;\n          return Iterator(function() {\n            if (++c < n) {\n              return iter();\n            } else {\n              return nil;\n            }\n          });\n        });\n      };\n    };\n    takeWhile = function(ok) {\n      return function(xs) {\n        return LazyList(function() {\n          var iter;\n          iter = lazy(xs)[Symbol.iterator]();\n          return Iterator(function() {\n            var x;\n            if ((x = iter()) !== nil && ok(x)) {\n              return x;\n            } else {\n              return nil;\n            }\n          });\n        });\n      };\n    };\n    drop = function(n) {\n      return function(xs) {\n        return LazyList(function() {\n          var finished, i, iter, j, ref;\n          iter = lazy(xs)[Symbol.iterator]();\n          finished = false;\n          for (i = j = 0, ref = n; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n            finished || (finished = iter() === nil);\n            if (finished) {\n              break;\n            }\n          }\n          if (finished) {\n            return function() {\n              return nil;\n            };\n          } else {\n            return iter;\n          }\n        });\n      };\n    };\n    dropWhile = function(ok) {\n      return function(xs) {\n        return LazyList(function() {\n          var iter, x;\n          iter = lazy(xs)[Symbol.iterator]();\n          while (ok(x = iter()) && x !== nil) {\n            null;\n          }\n          return Iterator(function() {\n            var prevx, ref;\n            ref = [x, iter()], prevx = ref[0], x = ref[1];\n            return prevx;\n          });\n        });\n      };\n    };\n    cons = function(x) {\n      return function(xs) {\n        return LazyList(function() {\n          var iter;\n          iter = null;\n          return Iterator(function() {\n            if (iter === null) {\n              iter = lazy(xs)[Symbol.iterator]();\n              return x;\n            } else {\n              return iter();\n            }\n          });\n        });\n      };\n    };\n    map = function(f) {\n      return function(xs) {\n        return LazyList(function() {\n          var iter;\n          iter = lazy(xs)[Symbol.iterator]();\n          return Iterator(function() {\n            var x;\n            if ((x = iter()) !== nil) {\n              return f(x);\n            } else {\n              return nil;\n            }\n          });\n        });\n      };\n    };\n    filter = function(ok) {\n      return function(xs) {\n        return LazyList(function() {\n          var iter;\n          iter = lazy(xs)[Symbol.iterator]();\n          return Iterator(function() {\n            var x;\n            while ((x = iter()) !== nil && !ok(x)) {\n              null;\n            }\n            return x;\n          });\n        });\n      };\n    };\n    scanl = function(op) {\n      return function(r) {\n        return function(xs) {\n          return LazyList(function() {\n            var iter;\n            iter = lazy(xs)[Symbol.iterator]();\n            return Iterator(function() {\n              var got, x;\n              got = r;\n              r = (x = iter()) !== nil ? op(r)(x) : nil;\n              return got;\n            });\n          });\n        };\n      };\n    };\n    streak = function(n) {\n      if (n < 1) {\n        return nil;\n      } else {\n        return function(xs) {\n          return drop(n - 1)(LazyList(function() {\n            var buf, iter;\n            iter = lazy(xs)[Symbol.iterator]();\n            buf = [];\n            return Iterator(function() {\n              var x;\n              if ((x = iter()) === nil) {\n                return nil;\n              }\n              buf.push(x);\n              if (buf.length > n) {\n                buf.shift(1);\n              }\n              return buf.slice(0);\n            });\n          }));\n        };\n      }\n    };\n    streak2 = function(n) {\n      return function(xs) {\n        return streak(n)(concat([xs, take(n - 1)(xs)]));\n      };\n    };\n    reverse = function(xs) {\n      var ref;\n      if ((ref = xs.constructor) === Array || ref === String) {\n        return LazyList(function() {\n          var i;\n          i = xs.length;\n          return Iterator(function() {\n            if ((--i) >= 0) {\n              return xs[i];\n            } else {\n              return nil;\n            }\n          });\n        });\n      } else {\n        return list(lazy(xs)).reverse();\n      }\n    };\n    sort = function(xs) {\n      var arr;\n      arr = list(lazy(xs));\n      return arr.sort(function(a, b) {\n        return (a > b) - (a < b);\n      });\n    };\n    sortOn = function(f) {\n      return function(xs) {\n        var arr;\n        arr = list(lazy(xs));\n        return arr.sort(function(a, b) {\n          var fa, fb;\n          return ((fa = f(a)) > (fb = f(b))) - (fa < fb);\n        });\n      };\n    };\n    groupOn = function(f) {\n      return function(xs) {\n        var k, memo, v;\n        memo = {};\n        foreach(xs, function(x) {\n          var y;\n          y = f(x);\n          if (memo[y] == null) {\n            memo[y] = [];\n          }\n          return memo[y].push(x);\n        });\n        return (function() {\n          var results;\n          results = [];\n          for (k in memo) {\n            v = memo[k];\n            results.push(v);\n          }\n          return results;\n        })();\n      };\n    };\n    partition = function(f) {\n      return function(xs) {\n        var memo;\n        memo = [[], []];\n        foreach(xs, function(x) {\n          var y;\n          y = !f(x) + 0;\n          return memo[y].push(x);\n        });\n        return memo;\n      };\n    };\n    concat = function(xss) {\n      xss = filter(function(x) {\n        var ref;\n        return ((ref = x.constructor) !== Array && ref !== String) || x.length > 0;\n      })(xss);\n      return LazyList(function() {\n        var iter, xs, xs_iter;\n        xs_iter = lazy(xss)[Symbol.iterator]();\n        xs = xs_iter();\n        iter = lazy(xs)[Symbol.iterator]();\n        return Iterator(function() {\n          var x;\n          if ((x = iter()) !== nil) {\n            return x;\n          } else if ((xs = xs_iter()) !== nil) {\n            iter = lazy(xs)[Symbol.iterator]();\n            return iter();\n          } else {\n            return nil;\n          }\n        });\n      });\n    };\n    ref = (function() {\n      var finished, zip, zipWith;\n      finished = function(arr) {\n        var j, len1, x;\n        for (j = 0, len1 = arr.length; j < len1; j++) {\n          x = arr[j];\n          if (x === nil) {\n            return true;\n          }\n        }\n        return false;\n      };\n      zip = function() {\n        var xss;\n        xss = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        return LazyList(function() {\n          var iters, xs;\n          iters = (function() {\n            var j, len1, results;\n            results = [];\n            for (j = 0, len1 = xss.length; j < len1; j++) {\n              xs = xss[j];\n              results.push(lazy(xs)[Symbol.iterator]());\n            }\n            return results;\n          })();\n          return Iterator(function() {\n            var iter, next;\n            next = (function() {\n              var j, len1, results;\n              results = [];\n              for (j = 0, len1 = iters.length; j < len1; j++) {\n                iter = iters[j];\n                results.push(iter());\n              }\n              return results;\n            })();\n            if (finished(next)) {\n              return nil;\n            } else {\n              return next;\n            }\n          });\n        });\n      };\n      zipWith = function(f) {\n        return function() {\n          var xss;\n          xss = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n          return LazyList(function() {\n            var iters, xs;\n            iters = (function() {\n              var j, len1, results;\n              results = [];\n              for (j = 0, len1 = xss.length; j < len1; j++) {\n                xs = xss[j];\n                results.push(lazy(xs)[Symbol.iterator]());\n              }\n              return results;\n            })();\n            return Iterator(function() {\n              var iter, next;\n              next = (function() {\n                var j, len1, results;\n                results = [];\n                for (j = 0, len1 = iters.length; j < len1; j++) {\n                  iter = iters[j];\n                  results.push(iter());\n                }\n                return results;\n              })();\n              if (finished(next)) {\n                return nil;\n              } else {\n                return f.apply(null, next);\n              }\n            });\n          });\n        };\n      };\n      return {\n        zip: zip,\n        zipWith: zipWith\n      };\n    })(), zip = ref.zip, zipWith = ref.zipWith;\n    cartProd = (function() {\n      var apply_vector, inc_vector;\n      inc_vector = function(limits) {\n        var len_minus_1;\n        len_minus_1 = limits.length - 1;\n        return function(vec) {\n          var i;\n          i = len_minus_1;\n          while (!(++vec[i] < limits[i] || i <= 0)) {\n            vec[i--] = 0;\n          }\n          return vec;\n        };\n      };\n      apply_vector = function(space) {\n        var len;\n        len = space.length;\n        return function(vec) {\n          var i, j, ref1, results;\n          results = [];\n          for (i = j = 0, ref1 = len; 0 <= ref1 ? j < ref1 : j > ref1; i = 0 <= ref1 ? ++j : --j) {\n            results.push(space[i][vec[i]]);\n          }\n          return results;\n        };\n      };\n      return function() {\n        var xss;\n        xss = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        return LazyList(function() {\n          var get_value, i, inc, j, len, len1, limits, v, xs;\n          xss = (function() {\n            var j, len1, results;\n            results = [];\n            for (j = 0, len1 = xss.length; j < len1; j++) {\n              xs = xss[j];\n              results.push(list(xs));\n            }\n            return results;\n          })();\n          limits = (function() {\n            var j, ref1, results;\n            results = [];\n            for (i = j = 0, ref1 = xss.length; 0 <= ref1 ? j < ref1 : j > ref1; i = 0 <= ref1 ? ++j : --j) {\n              results.push(xss[i].length);\n            }\n            return results;\n          })();\n          for (j = 0, len1 = limits.length; j < len1; j++) {\n            len = limits[j];\n            if (len === 0) {\n              return nil;\n            }\n          }\n          inc = inc_vector(limits);\n          get_value = apply_vector(xss);\n          v = (function() {\n            var o, ref1, results;\n            results = [];\n            for (i = o = 0, ref1 = xss.length; 0 <= ref1 ? o < ref1 : o > ref1; i = 0 <= ref1 ? ++o : --o) {\n              results.push(0);\n            }\n            return results;\n          })();\n          return Iterator(function() {\n            var r;\n            if (v[0] < limits[0]) {\n              r = get_value(v);\n              inc(v);\n              return r;\n            } else {\n              return nil;\n            }\n          });\n        });\n      };\n    })();\n    list = function(xs) {\n      var it, n, results, results1, x;\n      if (xs instanceof Array) {\n        return xs;\n      } else if (typeof xs === 'function') {\n        it = xs[Symbol.iterator]();\n        results = [];\n        while ((x = it()) !== nil) {\n          results.push(x);\n        }\n        return results;\n      } else if (xs[Symbol.iterator] != null) {\n        it = lazy(xs)[Symbol.iterator]();\n        results1 = [];\n        while ((x = it()) !== nil) {\n          results1.push(x);\n        }\n        return results1;\n      } else if (typeof xs === 'number') {\n        n = xs;\n        return function(xs) {\n          return list(take(n)(xs));\n        };\n      } else {\n        throw ListError('list(xs): xs is neither Array nor Iterable');\n      }\n    };\n    head = function(xs) {\n      var iter, r, ref1;\n      if ((ref1 = xs.constructor) === Array || ref1 === String) {\n        if (xs.length > 0) {\n          return xs[0];\n        } else {\n          throw ListError(\"head() used on empty list.\");\n        }\n      } else {\n        iter = lazy(xs)[Symbol.iterator]();\n        if ((r = iter()) !== nil) {\n          return r;\n        } else {\n          throw ListError(\"head() used on empty list.\");\n        }\n      }\n    };\n    last = function(xs) {\n      var iter, r, ref1, x;\n      if ((ref1 = xs.constructor) === Array || ref1 === String) {\n        if (xs.length > 0) {\n          return xs[xs.length - 1];\n        } else {\n          throw ListError(\"last() used on empty list.\");\n        }\n      } else {\n        iter = lazy(xs)[Symbol.iterator]();\n        r = nil;\n        while ((x = iter()) !== nil) {\n          r = x;\n        }\n        if (r !== nil) {\n          return r;\n        } else {\n          throw ListError(\"last() used on empty list.\");\n        }\n      }\n    };\n    length = function(xs) {\n      var iter, r, ref1, x;\n      if ((ref1 = xs.constructor) === Array || ref1 === String) {\n        return xs.length;\n      } else {\n        iter = lazy(xs)[Symbol.iterator]();\n        r = 0;\n        while ((x = iter()) !== nil) {\n          ++r;\n        }\n        return r;\n      }\n    };\n    foldl = function(op) {\n      return function(init) {\n        return function(xs) {\n          var iter, r, x;\n          r = init;\n          iter = lazy(xs)[Symbol.iterator]();\n          while ((x = iter()) !== nil) {\n            r = op(r)(x);\n          }\n          return r;\n        };\n      };\n    };\n    best = function(better) {\n      return function(xs) {\n        var it, iter, r;\n        iter = lazy(xs)[Symbol.iterator]();\n        if ((r = iter()) === nil) {\n          return null;\n        }\n        while ((it = iter()) !== nil) {\n          r = better(it, r) ? it : r;\n        }\n        return r;\n      };\n    };\n    maximumOn = function(f) {\n      return best(function(a, b) {\n        return f(a) > f(b);\n      });\n    };\n    minimumOn = function(f) {\n      return best(function(a, b) {\n        return f(a) > f(b);\n      });\n    };\n    maximum = best(function(x, y) {\n      return x > y;\n    });\n    minimum = best(function(x, y) {\n      return x < y;\n    });\n    all = function(f) {\n      if (typeof f !== 'function') {\n        f = (function(x) {\n          return x === f;\n        });\n      }\n      return function(xs) {\n        var iter, x;\n        iter = lazy(xs)[Symbol.iterator]();\n        while ((x = iter()) !== nil) {\n          if (!f(x)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    };\n    any = function(f) {\n      var all_not;\n      all_not = all(function(x) {\n        return !f(x);\n      });\n      return function(xs) {\n        return !(all_not(xs));\n      };\n    };\n    fromList = function(pairs) {\n      var r;\n      r = {};\n      foreach(pairs, function(arg1) {\n        var k, v;\n        k = arg1[0], v = arg1[1];\n        if (v !== void 0) {\n          return r[k] = v;\n        }\n      });\n      return r;\n    };\n    brk = function() {\n      return brk;\n    };\n    brk.toString = function() {\n      return 'foreach.break';\n    };\n    foreach = function(xs, callback, fruit) {\n      var iter, x;\n      iter = lazy(xs)[Symbol.iterator]();\n      while ((x = iter()) !== nil) {\n        if (callback(x, fruit) === brk) {\n          break;\n        }\n      }\n      return fruit;\n    };\n    Object.defineProperties(foreach, {\n      \"break\": {\n        writable: false,\n        configurable: false,\n        enumerable: false,\n        value: brk\n      }\n    });\n    return {\n      nil: nil,\n      LazyList: LazyList,\n      Iterator: Iterator,\n      Symbol: Symbol,\n      naturals: naturals,\n      range: range,\n      primes: primes,\n      lazy: lazy,\n      enumerate: enumerate,\n      repeat: repeat,\n      iterate: iterate,\n      randoms: randoms,\n      permutations: permutations,\n      cons: cons,\n      map: map,\n      filter: filter,\n      take: take,\n      takeWhile: takeWhile,\n      drop: drop,\n      dropWhile: dropWhile,\n      scanl: scanl,\n      streak: streak,\n      streak2: streak2,\n      reverse: reverse,\n      sort: sort,\n      sortOn: sortOn,\n      groupOn: groupOn,\n      partition: partition,\n      concat: concat,\n      zip: zip,\n      zipWith: zipWith,\n      cartProd: cartProd,\n      list: list,\n      head: head,\n      last: last,\n      length: length,\n      foldl: foldl,\n      best: best,\n      maximum: maximum,\n      minimum: minimum,\n      maximumOn: maximumOn,\n      minimumOn: minimumOn,\n      all: all,\n      any: any,\n      fromList: fromList,\n      foreach: foreach\n    };\n  };\n\n  module.exports = this_module({\n    Symbol: typeof Symbol !== \"undefined\" && Symbol !== null ? Symbol : {\n      iterator: 'iter'\n    }\n  });\n\n}).call(this);\n\n//# sourceMappingURL=lazy.js.map","this_module = ({foldl}) ->\n\tidentity = (x) -> x\n\n\tformat = (form) -> (env) ->\n\t\tform.replace /\\{(\\w+)\\}/g, (m, i) -> env[i] ? m\n\n\t# transformers\n\tflip = (f) ->\n\t\t(x) -> (y) -> f(y)(x)\n\n\tcombine = (f) -> (g) ->\n\t\t(x) -> f g(x)\n\n\tcurry2 = (f) ->\n\t\t(a) -> (b) -> f(a, b)\n\n\tcurry3 = (f) ->\n\t\t(a) -> (b) -> (c) -> f(a, b, c)\n\n\tuncurry2 = (f) ->\n\t\t(a, b) -> f(a)(b)\n\n\tuncurry3 = (f) ->\n\t\t(a, b, c) -> f(a)(b)(c)\n\n\tpack = (f) ->\n\t\t(arr) -> f(arr...)\n\n\tunpack = (f) ->\n\t\t(arr...) -> f(arr)\n\n\t# seek & pluck in Array or Object\n\tseek = (arr) ->\n\t\t(i) -> arr[i]\n\n\tpluck = (attr) ->\n\t\t(d) -> d[attr]\n\n\t# compare\n\tequal = (it) ->\n\t\t(x) -> x == it\n\n\tnotEqual = (it) ->\n\t\t(x) -> x != it\n\n\tlessThan = (it) ->\n\t\t(x) -> x < it\n\n\tgreaterThan = (it) ->\n\t\t(x) -> x > it\n\n\tlessEqual = (it) ->\n\t\t(x) -> x <= it\n\n\tgreaterEqual = (it) ->\n\t\t(x) -> x >= it\n\n\t# math\n\tplus = (x) -> (y) -> x + y\n\tminus = (x) -> (y) -> x - y\n\n\tabs = Math.abs\n\tfloor = Math.floor\n\tceil = Math.ceil\n\n\tprecise = (n) ->\n\t\t(x) -> parseFloat x.toPrecision(n)\n\n\tsum = foldl(plus)(0)\n\n\treturn {\n\t\tidentity, format,\n\t\tflip, combine,\n\t\tcurry2, curry3, uncurry2, uncurry3, pack, unpack,\n\t\tseek, pluck,\n\t\tequal, notEqual, lessThan, lessEqual, greaterThan, greaterEqual,\n\t\tplus, minus, abs, floor, ceil, precise,\n\t\tsum\n\t}\n\nmodule.exports = this_module\n\tfoldl: require('lazy-list').foldl\n\n","this_module = () ->\n\tint = (s, base) -> if typeof(s) == 'string' then (r = parseInt(s, base); unless s.slice? and r == parseInt(s.slice(0,-1), base) then r else null) else parseInt(0 + s)\n\tfloat = (s) -> if /^-?[0-9]*(\\.[0-9]+)?([eE]-?[0-9]+)?$/.test(s) then parseFloat(s) else null\n\tstr = (x, base) -> x.toString(base)\n\tbool = (x) -> if x in [true, false] then x else null\n\thex = (x) -> x.toString(16)\n\tord = (c) -> c.charCodeAt()\n\tchr = (x) -> String.fromCharCode(x)\n\tjson = (it) -> JSON.stringify(it)\n\tjsonWith = (indent, convertor) -> (it) -> JSON.stringify(it, convertor, indent)\n\tprettyJson = (it) -> JSON.stringify(it, null, 4)\n\tflatJson = do ->\n\t\tflat = (k, v) -> if typeof v is 'string' then (try JSON.parse(v) catch then v) else v\n\t\t(it) -> JSON.stringify(it, flat, 4)\n\tobj = (s) -> JSON.parse(s)\n\n\treturn {\n\t\tint, float, bool, str, hex, ord, chr, json, jsonWith, prettyJson, flatJson, obj,\n\t}\n\nmodule.exports = this_module()\n\n","this_module = () ->\n\tchurch = (n) -> #the nth church number\n\t\titer = (f, n, r) ->\n\t\t\tif n == 0 then r else iter(f, n - 1, f(r))\n\t\t(f) ->\n\t\t\t(x) -> iter(f, n + 0, x)\n\n\tY = (f) -> #the Y combinator\n\t\t((x) -> (x x)) ((x) -> (f ((y) -> ((x x) y))))\n\n\tmemoize = (f, get_key = ((args...) -> json(args))) ->\n\t\tcache = {}\n\t\t(args...) ->\n\t\t\tkey = get_key(args...)\n\t\t\tcached = cache[key]\n\t\t\tif cached?\n\t\t\t\tcached\n\t\t\telse\n\t\t\t\tr = f(args...)\n\t\t\t\tcache[key] = r\n\t\t\t\tr\n\n\tfix = Y\n\n\tmemoFix = (ff) ->\n\t\tf = memoize (ff ((args...) -> f(args...)))\n\t\treturn f\n\n\treturn {\n\t\tchurch, Y, memoize, fix, memoFix,\n\t}\n\nmodule.exports = this_module()\n\n","this_module = () ->\n\turi_encoder = (component_packer = str) ->\n\t\t(obj) ->\n\t\t\t(\"#{encodeURIComponent(k)}=#{encodeURIComponent component_packer v}\" for k, v of obj when v isnt undefined).join('&')\n\n\turi_decoder = (component_unpacker = ((s) -> s)) ->\n\t\t(str) ->\n\t\t\td = {}\n\t\t\tfor s in (str.match /[^?=&]+=[^&]*/g) ? []\n\t\t\t\t[..., k, v] = s.match /([^=]+)=(.*)/\n\t\t\t\td[decodeURIComponent(k)] = (component_unpacker decodeURIComponent v)\n\t\t\treturn d\n\n\treturn {\n\t\turi_encoder, uri_decoder,\n\t}\n\nmodule.exports = this_module()\n\n","this_module = () ->\n\tfunction_literal = (f) ->\n\t\texpr = f.toString().replace(/^\\s*function\\s?\\(\\s?\\)\\s?{\\s*return\\s*([^]*?);?\\s*}$/, '$1')\n\t\texpr = expr.replace(/[\\r\\n]{1,2}\\s*/g, '') if expr.length <= 100\n\t\treturn expr\n\n\ttime_now = ->\n\t\t(new Date).getTime()\n\n\tlog = do -> #log an expression with it's literal and time used\n\t\tdye = do ->\n\t\t\t# ANSI Terminal Colors.\n\t\t\tcavailable = (not window?) and process? and not process.env.NODE_DISABLE_COLORS\n\t\t\tpalette =\n\t\t\t\tbold: '\\x1B[0;1m'\n\t\t\t\tred: '\\x1B[0;31m'\n\t\t\t\tgreen: '\\x1B[0;32m'\n\t\t\t\tyellow: '\\x1B[0;33m'\n\t\t\t\tblue: '\\x1B[0;34m'\n\t\t\t\tbold_grey: '\\x1B[1;30m'\n\t\t\tif not cavailable\n\t\t\t\t(color) -> (s) -> s\n\t\t\telse\n\t\t\t\t(color) ->\n\t\t\t\t\t(s) -> \"#{palette[color]}#{s}#{'\\x1B[0m'}\"\n\n\t\tlog_label = do ->\n\t\t\tflag_palette =\n\t\t\t\t'#': 'bold_grey'\n\t\t\t\t'I': 'green'\n\t\t\t\t'E': 'red'\n\t\t\t\t'W': 'yellow'\n\t\t\top_flag = (op) ->\n\t\t\t\tif op == 'log' then '#' else op[0].toUpperCase()\n\t\t\t(op) ->\n\t\t\t\tflag = op_flag(op)\n\t\t\t\tdye(flag_palette[flag]) flag\n\n\t\thistories = []\n\t\tfactory = (op) ->\n\t\t\tprefix = \"#{dye('bold_grey') '#'}#{log_label op}\"\n\t\t\t(args...) ->\n\t\t\t\tball = []\n\t\t\t\tfor f in args\n\t\t\t\t\tif typeof f == 'function'\n\t\t\t\t\t\texpr = function_literal(f)\n\t\t\t\t\t\tstart_time = time_now()\n\t\t\t\t\t\teval_result = f()\n\t\t\t\t\t\ttime_used = time_now() - start_time\n\t\t\t\t\t\tball.push(\"#{prefix} #{dye('green') expr} #{dye('bold_grey') '==>'}\", eval_result)\n\t\t\t\t\t\tball.push(dye('yellow') \"[#{time_used}ms]\") if time_used > 0\n\t\t\t\t\telse\n\t\t\t\t\t\tball.push(\"#{prefix}\", f)\n\t\t\t\tconsole[op] ball...\n\t\t\t\thistories.push(ball)\n\t\t\t\thistories.shift() if histories.length >= 10\n\t\t\t\treturn null\n\t\tgot = factory('log')\n\t\tgot.histories = histories\n\t\tgot.info = factory('info')\n\t\tgot.warn = factory('warn')\n\t\tgot.error = got.err = factory('error')\n\t\treturn got\n\n\tassert = (f, msg) ->\n\t\t[f, msg] = [msg, f] if f not instanceof Function\n\t\ttry\n\t\t\tr = f()\n\t\tcatch e\n\t\t\tthrow Error \"Assertion #{msg ? function_literal(f)} Unknown:\\n#{e}\"\n\t\tif not r\n\t\t\tthrow Error \"Assertion #{msg ? function_literal(f)} Failed!\"\n\n\tassertEq = (l, r) ->\n\t\ttry\n\t\t\tlv = l()\n\t\t\trv = r()\n\t\tcatch e\n\t\t\tthrow Error \"Equation Between #{function_literal(l)} And #{function_literal(r)} Unknown:\\n#{e}\"\n\t\tif lv isnt rv\n\t\t\tthrow Error \"Equation Failed:\\n\\t#{function_literal(l)} IS #{lv} BUT\\n\\t#{function_literal(r)} IS #{rv}.\"\n\n\tassertEqOn = (f) -> (l, r) ->\n\t\ttry\n\t\t\tlv = l()\n\t\t\trv = r()\n\t\t\tflv = f(lv)\n\t\t\tfrv = f(rv)\n\t\tcatch e\n\t\t\tthrow Error \"MAPPED Equation Between #{function_literal(l)} And #{function_literal(r)} Unknown:\\n#{e}\"\n\t\tif flv isnt frv\n\t\t\tthrow Error \"Equation Failed:\\n\\t#{function_literal(l)} IS #{lv} AND MAPPED TO #{flv} BUT\\n\\t#{function_literal(r)} IS #{rv} AND MAPPED TO #{frv}.\"\n\n\tsecurely = (f) -> # ensure a function not to modify it's arguments\n\t\t(args...) ->\n\t\t\targs = deepcopy args\n\t\t\tf(args...)\n\n\tdict = (pairs) -> #for dict comprehensions\n\t\td = {}\n\t\td[k] = v for [k, v] in pairs\n\t\treturn d\n\n\t{copy, deepcopy} = do ->\n\t\tcp = (root, dep) ->\n\t\t\treturn root if dep == 0 or not root? or typeof(root) != 'object'\n\t\t\tif root instanceof Array\n\t\t\t\tr = (cp(v, dep-1) for v in root)\n\t\t\telse\n\t\t\t\tr = {}\n\t\t\t\tr[k] = cp(v, dep-1) for k, v of root\n\t\t\treturn r\n\t\tcopy: (obj, depth=1) -> cp(obj, depth)\n\t\tdeepcopy: (obj, depth=Infinity) -> cp(obj, depth)\n\n\textend = (base) -> (defaults...) -> #NOTE: modified inplace, use copy() to protect it.\n\t\tfor d in defaults when d?\n\t\t\tbase[k] ?= v for k, v of d #NOTE: null values will be replaced if a default value exists.\n\t\treturn base\n\n\tupdate = (base) -> (updates...) -> #NOTE: modified inplace, use copy() to protect it.\n\t\tfor d in updates when d?\n\t\t\tbase[k] = v for k, v of d\n\t\treturn base\n\n\toverload = (_d) ->\n\t\td = copy _d\n\t\tfallback = d['_']\n\t\tif fallback?\n\t\t\t(args...) ->\n\t\t\t\t(d[args.length] ? fallback) args...\n\t\telse\n\t\t\t(args...) ->\n\t\t\t\tf = d[args.length]\n\t\t\t\tif not f?\n\t\t\t\t\tthrow Error \"This Function Can't Accept #{args.length} Args\"\n\t\t\t\telse\n\t\t\t\t\treturn f args...\n\n\treturn {\n\t\tlog, assert, assertEq, assertEqOn, dict, copy, deepcopy, securely, extend, update, overload,\n\t}\n\nmodule.exports = this_module()\n\n"],"sourceRoot":"/source/"}