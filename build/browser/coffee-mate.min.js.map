{"version":3,"sources":["/source/node_modules/browserify/node_modules/browser-pack/_prelude.js","/source/src/coffee-mate.coffee","coffee-mate.js","/source/node_modules/browserify/node_modules/process/browser.js","/source/node_modules/lazy-list/build/nodejs/lazy.js","/source/src/basics.coffee","/source/src/convertors.coffee","/source/src/funny.coffee","/source/src/url-helpers.coffee","/source/src/utils.coffee"],"names":["f","exports","module","define","amd","g","window","global","self","this","CoffeeMate","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"basics","convertors","funny","lazy","url_helpers","utils","extend","./basics","./convertors","./funny","./url-helpers","./utils","lazy-list",2,"cleanUpNextTick","draining","currentQueue","queue","concat","queueIndex","drainQueue","timeout","setTimeout","len","run","clearTimeout","Item","fun","array","noop","process","nextTick","args","Array","arguments","push","prototype","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","name","cwd","chdir","dir","umask",3,"this_module","slice","arg","Iterator","LazyList","Symbol","all","any","best","brk","cartProd","cons","drop","dropWhile","enumerate","filter","foldl","foreach","fromList","groupOn","head","iterate","last","list","map","maximum","maximumOn","minimum","minimumOn","naturals","nil","partition","permutations","primes","randoms","range","ref","repeat","reverse","scanl","sort","sortOn","streak","streak2","take","takeWhile","zip","zipWith","iterator","toString","it","next","value","done","stop","start","step","x","p","Infinity","xs","constructor","String","keys","Object","k","init","st","hash","normal","salt","Math","PI","sin","floor","seed","opts","ref1","rg","next_permutation","m","arr","ls","json","c","iter","ok","finished","j","prevx","got","buf","shift","b","fa","fb","memo","v","y","results","xss","xs_iter","len1","iters","apply_vector","inc_vector","limits","len_minus_1","vec","space","get_value","inc","results1","message","info","xs.constructor","ref2","better","all_not","pairs","arg1","callback","fruit","defineProperties","break","writable","configurable","enumerable",4,"abs","accept_multi_or_array","ceil","combine","curry2","curry3","equal","flip","greaterEqual","greaterThan","lessEqual","lessThan","max","max_index","min","min_index","minus","notEqual","pack","pluck","plus","precise","seek","sum","uncurry2","uncurry3","unpack","attr","d","parseFloat","toPrecision","first",5,"bool","chr","float","hex","int","obj","ord","str","base","parseInt","test","charCodeAt","fromCharCode","indent","JSON","stringify","parse",6,"Y","church","fix","memoFix","memoize","get_key","cache","cached","key","ff",7,"uri_decoder","uri_encoder","component_packer","encodeURIComponent","join","component_unpacker","match","decodeURIComponent",8,"assert","assertEq","assertEqOn","copy","deepcopy","dict","function_literal","log","overload","securely","time_now","update","expr","replace","Date","getTime","dye","factory","histories","log_label","cavailable","palette","NODE_DISABLE_COLORS","bold","red","green","yellow","blue","bold_grey","color","flag_palette","op_flag","#","I","E","W","op","toUpperCase","flag","prefix","ball","eval_result","start_time","time_used","console","warn","error","err","msg","Function","_error","lv","rv","flv","frv","cp","root","dep","depth","defaults","updates","_d","fallback","_process"],"mappings":"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","file":"coffee-mate.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","utils = require './utils'\nbasics = require './basics'\nlazy = require 'lazy-list'\nfunny = require './funny'\nconvertors = require './convertors'\nurl_helpers = require './url-helpers'\n\nmodule.exports = utils.extend({}) utils, basics, lazy, funny, convertors, url_helpers\n\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.CoffeeMate = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nvar basics, convertors, funny, lazy, url_helpers, utils;\n\nutils = require('./utils');\n\nbasics = require('./basics');\n\nlazy = require('lazy-list');\n\nfunny = require('./funny');\n\nconvertors = require('./convertors');\n\nurl_helpers = require('./url-helpers');\n\nmodule.exports = utils.extend({})(utils, basics, lazy, funny, convertors, url_helpers);\n\n\n},{\"./basics\":4,\"./convertors\":5,\"./funny\":6,\"./url-helpers\":7,\"./utils\":8,\"lazy-list\":3}],2:[function(require,module,exports){\n// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            currentQueue[queueIndex].run();\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (!draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],3:[function(require,module,exports){\n(function() {\n  var this_module,\n    slice = [].slice;\n\n  this_module = function(arg) {\n    var Iterator, LazyList, Symbol, all, any, best, brk, cartProd, concat, cons, drop, dropWhile, enumerate, filter, foldl, foreach, fromList, groupOn, head, iterate, last, lazy, length, list, map, maximum, maximumOn, minimum, minimumOn, naturals, nil, partition, permutations, primes, randoms, range, ref, repeat, reverse, scanl, sort, sortOn, streak, streak2, take, takeWhile, zip, zipWith;\n    Symbol = arg.Symbol;\n    LazyList = function(f) {\n      f[Symbol.iterator] = function() {\n        return f();\n      };\n      f.toString = function() {\n        return \"LazyList\";\n      };\n      return f;\n    };\n    nil = LazyList(function() {\n      return nil;\n    });\n    nil.toString = function() {\n      return 'nil';\n    };\n    Iterator = function(it) {\n      it.next = function() {\n        var r;\n        r = it();\n        return {\n          value: r,\n          done: r === nil\n        };\n      };\n      it.toString = function() {\n        return \"Iterator\";\n      };\n      return it;\n    };\n    naturals = LazyList(function() {\n      var i;\n      i = -1;\n      return Iterator(function() {\n        return ++i;\n      });\n    });\n    range = function() {\n      var args;\n      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      if (args.length === 0) {\n        return naturals;\n      } else if (args.length === 1) {\n        return LazyList(function() {\n          var i, stop;\n          stop = args[0];\n          i = -1;\n          return Iterator(function() {\n            if (++i < stop) {\n              return i;\n            } else {\n              return nil;\n            }\n          });\n        });\n      } else if (args.length === 2) {\n        return LazyList(function() {\n          var i, start, stop;\n          start = args[0], stop = args[1];\n          if (start < stop) {\n            i = start - 1;\n            return Iterator(function() {\n              if (++i < stop) {\n                return i;\n              } else {\n                return nil;\n              }\n            });\n          } else {\n            i = start + 1;\n            return Iterator(function() {\n              if (--i > stop) {\n                return i;\n              } else {\n                return nil;\n              }\n            });\n          }\n        });\n      } else {\n        return LazyList(function() {\n          var i, start, step, stop;\n          start = args[0], stop = args[1], step = args[2];\n          if (stop !== start && (stop - start) * step < 0) {\n            throw 'ERR IN range(): YOU ARE CREATING AN UNLIMITTED RANGE';\n          }\n          i = start - step;\n          if (start < stop) {\n            return Iterator(function() {\n              if ((i += step) < stop) {\n                return i;\n              } else {\n                return nil;\n              }\n            });\n          } else {\n            return Iterator(function() {\n              if ((i += step) > stop) {\n                return i;\n              } else {\n                return nil;\n              }\n            });\n          }\n        });\n      }\n    };\n    primes = LazyList(function() {\n      return filter(function(x) {\n        return all(function(p) {\n          return x % p !== 0;\n        })(takeWhile(function(p) {\n          return p * p <= x;\n        })(range(2, Infinity)));\n      })(range(2, Infinity))();\n    });\n    lazy = function(xs) {\n      var ref;\n      if (typeof xs === 'function') {\n        if (xs[Symbol.iterator] != null) {\n          return xs;\n        } else {\n          return LazyList(xs);\n        }\n      } else if ((ref = xs.constructor) === Array || ref === String) {\n        return LazyList(function() {\n          var i;\n          i = -1;\n          return Iterator(function() {\n            if ((++i) < xs.length) {\n              return xs[i];\n            } else {\n              return nil;\n            }\n          });\n        });\n      } else if (xs[Symbol.iterator] != null) {\n        return LazyList(function() {\n          var it;\n          it = xs[Symbol.iterator]();\n          return Iterator(function() {\n            var r;\n            r = it.next();\n            if (r.done) {\n              return nil;\n            } else {\n              return r.value;\n            }\n          });\n        });\n      } else {\n        throw Error('lazy(xs): xs is neither Array nor Iterable');\n      }\n    };\n    enumerate = function(it) {\n      if ((it[Symbol.iterator] != null) || it instanceof Array) {\n        return zip(naturals, it);\n      } else {\n        return LazyList(function() {\n          var i, keys;\n          keys = Object.keys(it);\n          i = -1;\n          return Iterator(function() {\n            var k;\n            if (++i < keys.length) {\n              return [(k = keys[i]), it[k]];\n            } else {\n              return nil;\n            }\n          });\n        });\n      }\n    };\n    repeat = function(x) {\n      return LazyList(function() {\n        return Iterator(function() {\n          return x;\n        });\n      });\n    };\n    iterate = function(next, init) {\n      return LazyList(function() {\n        var st;\n        st = init;\n        return Iterator(function() {\n          var r;\n          r = st;\n          st = next(st);\n          return r;\n        });\n      });\n    };\n    randoms = (function() {\n      var hash, normal, salt;\n      salt = Math.PI / 3.0;\n      hash = function(x) {\n        x = Math.sin(x + salt) * 1e4;\n        return x - Math.floor(x);\n      };\n      normal = function(seed) {\n        return iterate(hash, hash(seed));\n      };\n      return function(opts) {\n        var k, ref, ref1, rg, s, seed;\n        if (opts == null) {\n          return normal(0);\n        } else if (typeof opts === 'number') {\n          return normal(opts);\n        } else {\n          seed = (ref = opts.seed) != null ? ref : 0;\n          rg = opts.range;\n          if (rg != null) {\n            if (typeof rg === 'number') {\n              return map(function(x) {\n                return Math.floor(x * rg);\n              })(normal(seed));\n            } else {\n              ref1 = [rg[0], rg[1] - rg[0] + 1], s = ref1[0], k = ref1[1];\n              return map(function(x) {\n                return s + Math.floor(x * k);\n              })(normal(seed));\n            }\n          } else {\n            return normal(seed);\n          }\n        }\n      };\n    })();\n    permutations = (function() {\n      var next_permutation;\n      next_permutation = function(x) {\n        var l, m, r, ref, ref1;\n        x = x.slice(0);\n        l = x.length - 1;\n        while (l >= 1 && x[l] <= x[l - 1]) {\n          --l;\n        }\n        if (l !== 0) {\n          m = x.length - 1;\n          while (m > l - 1 && x[m] <= x[l - 1]) {\n            --m;\n          }\n          ref = [x[l - 1], x[m]], x[m] = ref[0], x[l - 1] = ref[1];\n        }\n        r = x.length - 1;\n        while (l < r) {\n          ref1 = [x[r], x[l]], x[l] = ref1[0], x[r] = ref1[1];\n          ++l;\n          --r;\n        }\n        return x;\n      };\n      return function(xs) {\n        var arr;\n        arr = list(xs);\n        if (arr.length === 0) {\n          return nil;\n        } else {\n          return cons(arr.slice(0))(takeWhile(function(ls) {\n            return json(ls) !== json(arr);\n          })(drop(1)(iterate(next_permutation, arr))));\n        }\n      };\n    })();\n    take = function(n) {\n      return function(xs) {\n        return LazyList(function() {\n          var c, iter;\n          iter = lazy(xs)[Symbol.iterator]();\n          c = -1;\n          return Iterator(function() {\n            if (++c < n) {\n              return iter();\n            } else {\n              return nil;\n            }\n          });\n        });\n      };\n    };\n    takeWhile = function(ok) {\n      return function(xs) {\n        return LazyList(function() {\n          var iter;\n          iter = lazy(xs)[Symbol.iterator]();\n          return Iterator(function() {\n            var x;\n            if ((x = iter()) !== nil && ok(x)) {\n              return x;\n            } else {\n              return nil;\n            }\n          });\n        });\n      };\n    };\n    drop = function(n) {\n      return function(xs) {\n        return LazyList(function() {\n          var finished, i, iter, j, ref;\n          iter = lazy(xs)[Symbol.iterator]();\n          finished = false;\n          for (i = j = 0, ref = n; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n            finished || (finished = iter() === nil);\n            if (finished) {\n              break;\n            }\n          }\n          if (finished) {\n            return function() {\n              return nil;\n            };\n          } else {\n            return iter;\n          }\n        });\n      };\n    };\n    dropWhile = function(ok) {\n      return function(xs) {\n        return LazyList(function() {\n          var iter, x;\n          iter = lazy(xs)[Symbol.iterator]();\n          while (ok(x = iter()) && x !== nil) {\n            null;\n          }\n          return Iterator(function() {\n            var prevx, ref;\n            ref = [x, iter()], prevx = ref[0], x = ref[1];\n            return prevx;\n          });\n        });\n      };\n    };\n    cons = function(x) {\n      return function(xs) {\n        return LazyList(function() {\n          var iter;\n          iter = null;\n          return Iterator(function() {\n            if (iter === null) {\n              iter = lazy(xs)[Symbol.iterator]();\n              return x;\n            } else {\n              return iter();\n            }\n          });\n        });\n      };\n    };\n    map = function(f) {\n      return function(xs) {\n        return LazyList(function() {\n          var iter;\n          iter = lazy(xs)[Symbol.iterator]();\n          return Iterator(function() {\n            var x;\n            if ((x = iter()) !== nil) {\n              return f(x);\n            } else {\n              return nil;\n            }\n          });\n        });\n      };\n    };\n    filter = function(ok) {\n      return function(xs) {\n        return LazyList(function() {\n          var iter;\n          iter = lazy(xs)[Symbol.iterator]();\n          return Iterator(function() {\n            var x;\n            while ((x = iter()) !== nil && !ok(x)) {\n              null;\n            }\n            return x;\n          });\n        });\n      };\n    };\n    scanl = function(f, r) {\n      return function(xs) {\n        return LazyList(function() {\n          var iter;\n          iter = lazy(xs)[Symbol.iterator]();\n          return Iterator(function() {\n            var got, x;\n            got = r;\n            r = (x = iter()) !== nil ? f(r, x) : nil;\n            return got;\n          });\n        });\n      };\n    };\n    streak = function(n) {\n      if (n < 1) {\n        return nil;\n      } else {\n        return function(xs) {\n          return drop(n - 1)(LazyList(function() {\n            var buf, iter;\n            iter = lazy(xs)[Symbol.iterator]();\n            buf = [];\n            return Iterator(function() {\n              var x;\n              if ((x = iter()) === nil) {\n                return nil;\n              }\n              buf.push(x);\n              if (buf.length > n) {\n                buf.shift(1);\n              }\n              return buf.slice(0);\n            });\n          }));\n        };\n      }\n    };\n    streak2 = function(n) {\n      return function(xs) {\n        return streak(n)(concat([xs, take(n - 1)(xs)]));\n      };\n    };\n    reverse = function(xs) {\n      var ref;\n      if ((ref = xs.constructor) === Array || ref === String) {\n        return LazyList(function() {\n          var i;\n          i = xs.length;\n          return Iterator(function() {\n            if ((--i) >= 0) {\n              return xs[i];\n            } else {\n              return nil;\n            }\n          });\n        });\n      } else {\n        return list(lazy(xs)).reverse();\n      }\n    };\n    sort = function(xs) {\n      var arr;\n      arr = list(lazy(xs));\n      return arr.sort(function(a, b) {\n        return (a > b) - (a < b);\n      });\n    };\n    sortOn = function(f) {\n      return function(xs) {\n        var arr;\n        arr = list(lazy(xs));\n        return arr.sort(function(a, b) {\n          var fa, fb;\n          return ((fa = f(a)) > (fb = f(b))) - (fa < fb);\n        });\n      };\n    };\n    groupOn = function(f) {\n      return function(xs) {\n        var k, memo, v;\n        memo = {};\n        foreach(xs, function(x) {\n          var y;\n          y = f(x);\n          if (memo[y] == null) {\n            memo[y] = [];\n          }\n          return memo[y].push(x);\n        });\n        return (function() {\n          var results;\n          results = [];\n          for (k in memo) {\n            v = memo[k];\n            results.push(v);\n          }\n          return results;\n        })();\n      };\n    };\n    partition = function(f) {\n      return function(xs) {\n        var memo;\n        memo = [[], []];\n        foreach(xs, function(x) {\n          var y;\n          y = !f(x) + 0;\n          return memo[y].push(x);\n        });\n        return memo;\n      };\n    };\n    concat = function(xss) {\n      xss = filter(function(x) {\n        var ref;\n        return ((ref = x.constructor) !== Array && ref !== String) || x.length > 0;\n      })(xss);\n      return LazyList(function() {\n        var iter, xs, xs_iter;\n        xs_iter = lazy(xss)[Symbol.iterator]();\n        xs = xs_iter();\n        iter = lazy(xs)[Symbol.iterator]();\n        return Iterator(function() {\n          var x;\n          if ((x = iter()) !== nil) {\n            return x;\n          } else if ((xs = xs_iter()) !== nil) {\n            iter = lazy(xs)[Symbol.iterator]();\n            return iter();\n          } else {\n            return nil;\n          }\n        });\n      });\n    };\n    ref = (function() {\n      var finished, zip, zipWith;\n      finished = function(arr) {\n        var j, len1, x;\n        for (j = 0, len1 = arr.length; j < len1; j++) {\n          x = arr[j];\n          if (x === nil) {\n            return true;\n          }\n        }\n        return false;\n      };\n      zip = function() {\n        var xss;\n        xss = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        return LazyList(function() {\n          var iters, xs;\n          iters = (function() {\n            var j, len1, results;\n            results = [];\n            for (j = 0, len1 = xss.length; j < len1; j++) {\n              xs = xss[j];\n              results.push(lazy(xs)[Symbol.iterator]());\n            }\n            return results;\n          })();\n          return Iterator(function() {\n            var iter, next;\n            next = (function() {\n              var j, len1, results;\n              results = [];\n              for (j = 0, len1 = iters.length; j < len1; j++) {\n                iter = iters[j];\n                results.push(iter());\n              }\n              return results;\n            })();\n            if (finished(next)) {\n              return nil;\n            } else {\n              return next;\n            }\n          });\n        });\n      };\n      zipWith = function(f) {\n        return function() {\n          var xss;\n          xss = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n          return LazyList(function() {\n            var iters, xs;\n            iters = (function() {\n              var j, len1, results;\n              results = [];\n              for (j = 0, len1 = xss.length; j < len1; j++) {\n                xs = xss[j];\n                results.push(lazy(xs)[Symbol.iterator]());\n              }\n              return results;\n            })();\n            return Iterator(function() {\n              var iter, next;\n              next = (function() {\n                var j, len1, results;\n                results = [];\n                for (j = 0, len1 = iters.length; j < len1; j++) {\n                  iter = iters[j];\n                  results.push(iter());\n                }\n                return results;\n              })();\n              if (finished(next)) {\n                return nil;\n              } else {\n                return f.apply(null, next);\n              }\n            });\n          });\n        };\n      };\n      return {\n        zip: zip,\n        zipWith: zipWith\n      };\n    })(), zip = ref.zip, zipWith = ref.zipWith;\n    cartProd = (function() {\n      var apply_vector, inc_vector;\n      inc_vector = function(limits) {\n        var len_minus_1;\n        len_minus_1 = limits.length - 1;\n        return function(vec) {\n          var i;\n          i = len_minus_1;\n          while (!(++vec[i] < limits[i] || i <= 0)) {\n            vec[i--] = 0;\n          }\n          return vec;\n        };\n      };\n      apply_vector = function(space) {\n        var len;\n        len = space.length;\n        return function(vec) {\n          var i, j, ref1, results;\n          results = [];\n          for (i = j = 0, ref1 = len; 0 <= ref1 ? j < ref1 : j > ref1; i = 0 <= ref1 ? ++j : --j) {\n            results.push(space[i][vec[i]]);\n          }\n          return results;\n        };\n      };\n      return function() {\n        var xss;\n        xss = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        return LazyList(function() {\n          var get_value, i, inc, j, len, len1, limits, v, xs;\n          xss = (function() {\n            var j, len1, results;\n            results = [];\n            for (j = 0, len1 = xss.length; j < len1; j++) {\n              xs = xss[j];\n              results.push(list(xs));\n            }\n            return results;\n          })();\n          limits = (function() {\n            var j, ref1, results;\n            results = [];\n            for (i = j = 0, ref1 = xss.length; 0 <= ref1 ? j < ref1 : j > ref1; i = 0 <= ref1 ? ++j : --j) {\n              results.push(xss[i].length);\n            }\n            return results;\n          })();\n          for (j = 0, len1 = limits.length; j < len1; j++) {\n            len = limits[j];\n            if (len === 0) {\n              return nil;\n            }\n          }\n          inc = inc_vector(limits);\n          get_value = apply_vector(xss);\n          v = (function() {\n            var o, ref1, results;\n            results = [];\n            for (i = o = 0, ref1 = xss.length; 0 <= ref1 ? o < ref1 : o > ref1; i = 0 <= ref1 ? ++o : --o) {\n              results.push(0);\n            }\n            return results;\n          })();\n          return Iterator(function() {\n            var r;\n            if (v[0] < limits[0]) {\n              r = get_value(v);\n              inc(v);\n              return r;\n            } else {\n              return nil;\n            }\n          });\n        });\n      };\n    })();\n    list = function(xs) {\n      var it, n, results, results1, x;\n      if (xs instanceof Array) {\n        return xs;\n      } else if (typeof xs === 'function') {\n        it = xs[Symbol.iterator]();\n        results = [];\n        while ((x = it()) !== nil) {\n          results.push(x);\n        }\n        return results;\n      } else if (xs[Symbol.iterator] != null) {\n        it = lazy(xs)[Symbol.iterator]();\n        results1 = [];\n        while ((x = it()) !== nil) {\n          results1.push(x);\n        }\n        return results1;\n      } else if (typeof xs === 'number') {\n        n = xs;\n        return function(xs) {\n          return list(take(n)(xs));\n        };\n      } else {\n        throw Error({\n          message: 'list(xs): xs is neither Array nor Iterable',\n          info: {\n            \"xs\": xs,\n            \"xs.constructor\": xs != null ? xs.constructor : void 0\n          }\n        });\n      }\n    };\n    head = function(xs) {\n      var iter, r, ref1;\n      if ((ref1 = xs.constructor) === Array || ref1 === String) {\n        if (xs.length > 0) {\n          return xs[0];\n        } else {\n          throw \"Error: head() used on empty list.\";\n        }\n      } else {\n        iter = lazy(xs)[Symbol.iterator]();\n        if ((r = iter()) !== nil) {\n          return r;\n        } else {\n          throw \"Error: head() used on empty list.\";\n        }\n      }\n    };\n    last = function(xs) {\n      var iter, r, ref1, ref2, x;\n      if ((ref1 = xs.constructor) === Array || ref1 === String) {\n        return (ref2 = xs[xs.length - 1]) != null ? ref2 : nil;\n      } else {\n        iter = lazy(xs)[Symbol.iterator]();\n        r = nil;\n        while ((x = iter()) !== nil) {\n          r = x;\n        }\n        return r;\n      }\n    };\n    length = function(xs) {\n      var iter, r, ref1, x;\n      if ((ref1 = xs.constructor) === Array || ref1 === String) {\n        return xs.length;\n      } else {\n        iter = lazy(xs)[Symbol.iterator]();\n        r = 0;\n        while ((x = iter()) !== nil) {\n          ++r;\n        }\n        return r;\n      }\n    };\n    foldl = function(f, init) {\n      return function(xs) {\n        var iter, r, x;\n        r = init;\n        iter = lazy(xs)[Symbol.iterator]();\n        while ((x = iter()) !== nil) {\n          r = f(r, x);\n        }\n        return r;\n      };\n    };\n    best = function(better) {\n      return function(xs) {\n        var it, iter, r;\n        iter = lazy(xs)[Symbol.iterator]();\n        if ((r = iter()) === nil) {\n          return null;\n        }\n        while ((it = iter()) !== nil) {\n          r = better(it, r) ? it : r;\n        }\n        return r;\n      };\n    };\n    maximumOn = function(f) {\n      return best(function(a, b) {\n        return f(a) > f(b);\n      });\n    };\n    minimumOn = function(f) {\n      return best(function(a, b) {\n        return f(a) > f(b);\n      });\n    };\n    maximum = best(function(x, y) {\n      return x > y;\n    });\n    minimum = best(function(x, y) {\n      return x < y;\n    });\n    all = function(f) {\n      if (typeof f !== 'function') {\n        f = (function(x) {\n          return x === f;\n        });\n      }\n      return function(xs) {\n        var iter, x;\n        iter = lazy(xs)[Symbol.iterator]();\n        while ((x = iter()) !== nil) {\n          if (!f(x)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    };\n    any = function(f) {\n      var all_not;\n      all_not = all(function(x) {\n        return !f(x);\n      });\n      return function(xs) {\n        return !(all_not(xs));\n      };\n    };\n    fromList = function(pairs) {\n      var r;\n      r = {};\n      foreach(pairs, function(arg1) {\n        var k, v;\n        k = arg1[0], v = arg1[1];\n        return r[k] = v;\n      });\n      return r;\n    };\n    brk = function() {\n      return brk;\n    };\n    brk.toString = function() {\n      return 'foreach.break';\n    };\n    foreach = function(xs, callback, fruit) {\n      var iter, x;\n      iter = lazy(xs)[Symbol.iterator]();\n      while ((x = iter()) !== nil) {\n        if (callback(x, fruit) === brk) {\n          break;\n        }\n      }\n      return fruit;\n    };\n    Object.defineProperties(foreach, {\n      \"break\": {\n        writable: false,\n        configurable: false,\n        enumerable: false,\n        value: brk\n      }\n    });\n    return {\n      nil: nil,\n      LazyList: LazyList,\n      Iterator: Iterator,\n      Symbol: Symbol,\n      naturals: naturals,\n      range: range,\n      primes: primes,\n      lazy: lazy,\n      enumerate: enumerate,\n      repeat: repeat,\n      iterate: iterate,\n      randoms: randoms,\n      permutations: permutations,\n      cons: cons,\n      map: map,\n      filter: filter,\n      take: take,\n      takeWhile: takeWhile,\n      drop: drop,\n      dropWhile: dropWhile,\n      scanl: scanl,\n      streak: streak,\n      streak2: streak2,\n      reverse: reverse,\n      sort: sort,\n      sortOn: sortOn,\n      groupOn: groupOn,\n      partition: partition,\n      concat: concat,\n      zip: zip,\n      zipWith: zipWith,\n      cartProd: cartProd,\n      list: list,\n      head: head,\n      last: last,\n      length: length,\n      foldl: foldl,\n      best: best,\n      maximum: maximum,\n      minimum: minimum,\n      maximumOn: maximumOn,\n      minimumOn: minimumOn,\n      all: all,\n      any: any,\n      fromList: fromList,\n      foreach: foreach\n    };\n  };\n\n  module.exports = this_module({\n    Symbol: typeof Symbol !== \"undefined\" && Symbol !== null ? Symbol : {\n      iterator: 'iter'\n    }\n  });\n\n}).call(this);\n\n\n},{}],4:[function(require,module,exports){\nvar this_module,\n  slice = [].slice;\n\nthis_module = function(arg) {\n  var abs, accept_multi_or_array, best, ceil, combine, curry2, curry3, equal, flip, floor, greaterEqual, greaterThan, lessEqual, lessThan, max, max_index, min, min_index, minus, notEqual, pack, pluck, plus, precise, seek, sum, uncurry2, uncurry3, unpack;\n  best = arg.best;\n  flip = function(f) {\n    return function(x) {\n      return function(y) {\n        return f(y)(x);\n      };\n    };\n  };\n  combine = function(f) {\n    return function(g) {\n      return function(x) {\n        return f(g(x));\n      };\n    };\n  };\n  curry2 = function(f) {\n    return function(a) {\n      return function(b) {\n        return f(a, b);\n      };\n    };\n  };\n  curry3 = function(f) {\n    return function(a) {\n      return function(b) {\n        return function(c) {\n          return f(a, b, c);\n        };\n      };\n    };\n  };\n  uncurry2 = function(f) {\n    return function(a, b) {\n      return f(a)(b);\n    };\n  };\n  uncurry3 = function(f) {\n    return function(a, b, c) {\n      return f(a)(b)(c);\n    };\n  };\n  pack = function(f) {\n    return function(arr) {\n      return f.apply(null, arr);\n    };\n  };\n  unpack = function(f) {\n    return function() {\n      var arr;\n      arr = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      return f(arr);\n    };\n  };\n  seek = function(arr) {\n    return function(i) {\n      return arr[i];\n    };\n  };\n  pluck = function(attr) {\n    return function(d) {\n      return d[attr];\n    };\n  };\n  equal = function(it) {\n    return function(x) {\n      return x === it;\n    };\n  };\n  notEqual = function(it) {\n    return function(x) {\n      return x !== it;\n    };\n  };\n  lessThan = function(it) {\n    return function(x) {\n      return x < it;\n    };\n  };\n  greaterThan = function(it) {\n    return function(x) {\n      return x > it;\n    };\n  };\n  lessEqual = function(it) {\n    return function(x) {\n      return x <= it;\n    };\n  };\n  greaterEqual = function(it) {\n    return function(x) {\n      return x >= it;\n    };\n  };\n  plus = function(it) {\n    return function(x) {\n      return x + it;\n    };\n  };\n  minus = function(it) {\n    return function(x) {\n      return x - it;\n    };\n  };\n  abs = Math.abs;\n  floor = Math.floor;\n  ceil = Math.ceil;\n  precise = function(n) {\n    return function(x) {\n      return parseFloat(x.toPrecision(n));\n    };\n  };\n  accept_multi_or_array = function(f) {\n    return function() {\n      var arr;\n      arr = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      return f(arr.length === 1 && arr.first instanceof Array ? arr.first : arr);\n    };\n  };\n  sum = accept_multi_or_array(function(arr) {\n    var k, len, r, x;\n    if (arr.length === 1 && arr.first instanceof Array) {\n      arr = arr.first;\n    }\n    r = 0;\n    for (k = 0, len = arr.length; k < len; k++) {\n      x = arr[k];\n      r += x;\n    }\n    return r;\n  });\n  max = accept_multi_or_array(function(arr) {\n    return best(function(a, b) {\n      return a > b;\n    })(arr);\n  });\n  min = accept_multi_or_array(function(arr) {\n    return best(function(a, b) {\n      return a < b;\n    })(arr);\n  });\n  max_index = accept_multi_or_array(function(arr) {\n    var k, ref, results;\n    return best(function(i, j) {\n      return arr[i] > arr[j];\n    })((function() {\n      results = [];\n      for (var k = 0, ref = arr.length; 0 <= ref ? k < ref : k > ref; 0 <= ref ? k++ : k--){ results.push(k); }\n      return results;\n    }).apply(this));\n  });\n  min_index = accept_multi_or_array(function(arr) {\n    var k, ref, results;\n    return best(function(i, j) {\n      return arr[i] < arr[j];\n    })((function() {\n      results = [];\n      for (var k = 0, ref = arr.length; 0 <= ref ? k < ref : k > ref; 0 <= ref ? k++ : k--){ results.push(k); }\n      return results;\n    }).apply(this));\n  });\n  return {\n    flip: flip,\n    combine: combine,\n    curry2: curry2,\n    curry3: curry3,\n    uncurry2: uncurry2,\n    uncurry3: uncurry3,\n    pack: pack,\n    unpack: unpack,\n    seek: seek,\n    pluck: pluck,\n    equal: equal,\n    notEqual: notEqual,\n    lessThan: lessThan,\n    lessEqual: lessEqual,\n    greaterThan: greaterThan,\n    greaterEqual: greaterEqual,\n    plus: plus,\n    minus: minus,\n    abs: abs,\n    floor: floor,\n    ceil: ceil,\n    precise: precise,\n    sum: sum,\n    max: max,\n    min: min,\n    max_index: max_index,\n    min_index: min_index\n  };\n};\n\nmodule.exports = this_module({\n  best: require('lazy-list').best\n});\n\n\n},{\"lazy-list\":3}],5:[function(require,module,exports){\nvar this_module;\n\nthis_module = function() {\n  var bool, chr, float, hex, int, json, obj, ord, str;\n  int = function(s, base) {\n    var r;\n    if (typeof s === 'string') {\n      r = parseInt(s, base);\n      if (!((s.slice != null) && r === parseInt(s.slice(0, -1), base))) {\n        return r;\n      } else {\n        return null;\n      }\n    } else {\n      return parseInt(0 + s);\n    }\n  };\n  float = function(s) {\n    if (/^-?[0-9]*(\\.[0-9]+)?([eE]-?[0-9]+)?$/.test(s)) {\n      return parseFloat(s);\n    } else {\n      return null;\n    }\n  };\n  str = function(x, base) {\n    return x.toString(base);\n  };\n  bool = function(x) {\n    if (x === true || x === false) {\n      return x;\n    } else {\n      return null;\n    }\n  };\n  hex = function(x) {\n    return x.toString(16);\n  };\n  ord = function(c) {\n    return c.charCodeAt();\n  };\n  chr = function(x) {\n    return String.fromCharCode(x);\n  };\n  json = function(it, indent) {\n    return JSON.stringify(it, null, indent);\n  };\n  obj = function(s) {\n    return JSON.parse(s);\n  };\n  return {\n    int: int,\n    float: float,\n    bool: bool,\n    str: str,\n    hex: hex,\n    ord: ord,\n    chr: chr,\n    json: json,\n    obj: obj\n  };\n};\n\nmodule.exports = this_module();\n\n\n},{}],6:[function(require,module,exports){\nvar this_module,\n  slice = [].slice;\n\nthis_module = function() {\n  var Y, church, fix, memoFix, memoize;\n  church = function(n) {\n    var iter;\n    iter = function(f, n, r) {\n      if (n === 0) {\n        return r;\n      } else {\n        return iter(f, n - 1, f(r));\n      }\n    };\n    return function(f) {\n      return function(x) {\n        return iter(f, n + 0, x);\n      };\n    };\n  };\n  Y = function(f) {\n    return (function(x) {\n      return x(x);\n    })((function(x) {\n      return f((function(y) {\n        return (x(x))(y);\n      }));\n    }));\n  };\n  memoize = function(f, get_key) {\n    var cache;\n    if (get_key == null) {\n      get_key = (function() {\n        var args;\n        args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        return json(args);\n      });\n    }\n    cache = {};\n    return function() {\n      var args, cached, key, r;\n      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      key = get_key.apply(null, args);\n      cached = cache[key];\n      if (cached != null) {\n        return cached;\n      } else {\n        r = f.apply(null, args);\n        cache[key] = r;\n        return r;\n      }\n    };\n  };\n  fix = Y;\n  memoFix = function(ff) {\n    var f;\n    f = memoize(ff((function() {\n      var args;\n      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      return f.apply(null, args);\n    })));\n    return f;\n  };\n  return {\n    church: church,\n    Y: Y,\n    memoize: memoize,\n    fix: fix,\n    memoFix: memoFix\n  };\n};\n\nmodule.exports = this_module();\n\n\n},{}],7:[function(require,module,exports){\nvar this_module;\n\nthis_module = function() {\n  var uri_decoder, uri_encoder;\n  uri_encoder = function(component_packer) {\n    if (component_packer == null) {\n      component_packer = str;\n    }\n    return function(obj) {\n      var k, v;\n      return ((function() {\n        var results;\n        results = [];\n        for (k in obj) {\n          v = obj[k];\n          if (v !== void 0) {\n            results.push((encodeURIComponent(k)) + \"=\" + (encodeURIComponent(component_packer(v))));\n          }\n        }\n        return results;\n      })()).join('&');\n    };\n  };\n  uri_decoder = function(component_unpacker) {\n    if (component_unpacker == null) {\n      component_unpacker = (function(s) {\n        return s;\n      });\n    }\n    return function(str) {\n      var d, i, j, k, len, ref, ref1, ref2, s, v;\n      d = {};\n      ref1 = (ref = str.match(/[^?=&]+=[^&]*/g)) != null ? ref : [];\n      for (i = 0, len = ref1.length; i < len; i++) {\n        s = ref1[i];\n        ref2 = s.match(/([^=]+)=(.*)/), j = ref2.length - 2, k = ref2[j++], v = ref2[j++];\n        d[decodeURIComponent(k)] = component_unpacker(decodeURIComponent(v));\n      }\n      return d;\n    };\n  };\n  return {\n    uri_encoder: uri_encoder,\n    uri_decoder: uri_decoder\n  };\n};\n\nmodule.exports = this_module();\n\n\n},{}],8:[function(require,module,exports){\n(function (process){\nvar this_module,\n  slice = [].slice;\n\nthis_module = function() {\n  var assert, assertEq, assertEqOn, copy, deepcopy, dict, extend, function_literal, log, overload, ref, securely, time_now, update;\n  function_literal = function(f) {\n    var expr;\n    expr = f.toString().replace(/^\\s*function\\s?\\(\\s?\\)\\s?{\\s*return\\s*([^]*?);?\\s*}$/, '$1');\n    if (expr.length <= 100) {\n      expr = expr.replace(/[\\r\\n]{1,2}\\s*/g, '');\n    }\n    return expr;\n  };\n  time_now = function() {\n    return (new Date).getTime();\n  };\n  log = (function() {\n    var dye, factory, got, histories, log_label;\n    dye = (function() {\n      var cavailable, palette;\n      cavailable = (typeof window === \"undefined\" || window === null) && (typeof process !== \"undefined\" && process !== null) && !process.env.NODE_DISABLE_COLORS;\n      palette = {\n        bold: '\\x1B[0;1m',\n        red: '\\x1B[0;31m',\n        green: '\\x1B[0;32m',\n        yellow: '\\x1B[0;33m',\n        blue: '\\x1B[0;34m',\n        bold_grey: '\\x1B[1;30m'\n      };\n      if (!cavailable) {\n        return function(color) {\n          return function(s) {\n            return s;\n          };\n        };\n      } else {\n        return function(color) {\n          return function(s) {\n            return \"\" + palette[color] + s + '\\x1B[0m';\n          };\n        };\n      }\n    })();\n    log_label = (function() {\n      var flag_palette, op_flag;\n      flag_palette = {\n        '#': 'bold_grey',\n        'I': 'green',\n        'E': 'red',\n        'W': 'yellow'\n      };\n      op_flag = function(op) {\n        if (op === 'log') {\n          return '#';\n        } else {\n          return op[0].toUpperCase();\n        }\n      };\n      return function(op) {\n        var flag;\n        flag = op_flag(op);\n        return dye(flag_palette[flag])(flag);\n      };\n    })();\n    histories = [];\n    factory = function(op) {\n      var prefix;\n      prefix = \"\" + (dye('bold_grey')('#')) + (log_label(op));\n      return function() {\n        var args, ball, eval_result, expr, f, i, len, start_time, time_used;\n        args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        ball = [];\n        for (i = 0, len = args.length; i < len; i++) {\n          f = args[i];\n          if (typeof f === 'function') {\n            expr = function_literal(f);\n            start_time = time_now();\n            eval_result = f();\n            time_used = time_now() - start_time;\n            ball.push(prefix + \" \" + (dye('green')(expr)) + \" \" + (dye('bold_grey')('==>')), eval_result);\n            if (time_used > 0) {\n              ball.push(dye('yellow')(\"[\" + time_used + \"ms]\"));\n            }\n          } else {\n            ball.push(\"\" + prefix, f);\n          }\n        }\n        console[op].apply(console, ball);\n        histories.push(ball);\n        if (histories.length >= 10) {\n          histories.shift();\n        }\n        return null;\n      };\n    };\n    got = factory('log');\n    got.histories = histories;\n    got.info = factory('info');\n    got.warn = factory('warn');\n    got.error = got.err = factory('error');\n    return got;\n  })();\n  assert = function(f, msg) {\n    var e, r, ref;\n    if (!(f instanceof Function)) {\n      ref = [msg, f], f = ref[0], msg = ref[1];\n    }\n    try {\n      r = f();\n    } catch (_error) {\n      e = _error;\n      throw Error(\"Assertion \" + (msg != null ? msg : function_literal(f)) + \" Unknown:\\n\" + e);\n    }\n    if (!r) {\n      throw Error(\"Assertion \" + (msg != null ? msg : function_literal(f)) + \" Failed!\");\n    }\n  };\n  assertEq = function(l, r) {\n    var e, lv, rv;\n    try {\n      lv = l();\n      rv = r();\n    } catch (_error) {\n      e = _error;\n      throw Error(\"Equation Between \" + (function_literal(l)) + \" And \" + (function_literal(r)) + \" Unknown:\\n\" + e);\n    }\n    if (lv !== rv) {\n      throw Error(\"Equation Failed:\\n\\t\" + (function_literal(l)) + \" IS \" + lv + \" BUT\\n\\t\" + (function_literal(r)) + \" IS \" + rv + \".\");\n    }\n  };\n  assertEqOn = function(f) {\n    return function(l, r) {\n      var e, flv, frv, lv, rv;\n      try {\n        lv = l();\n        rv = r();\n        flv = f(lv);\n        frv = f(rv);\n      } catch (_error) {\n        e = _error;\n        throw Error(\"MAPPED Equation Between \" + (function_literal(l)) + \" And \" + (function_literal(r)) + \" Unknown:\\n\" + e);\n      }\n      if (flv !== frv) {\n        throw Error(\"Equation Failed:\\n\\t\" + (function_literal(l)) + \" IS \" + lv + \" AND MAPPED TO \" + flv + \" BUT\\n\\t\" + (function_literal(r)) + \" IS \" + rv + \" AND MAPPED TO \" + frv + \".\");\n      }\n    };\n  };\n  securely = function(f) {\n    return function() {\n      var args;\n      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      args = deepcopy(args);\n      return f.apply(null, args);\n    };\n  };\n  dict = function(pairs) {\n    var d, i, k, len, ref, v;\n    d = {};\n    for (i = 0, len = pairs.length; i < len; i++) {\n      ref = pairs[i], k = ref[0], v = ref[1];\n      d[k] = v;\n    }\n    return d;\n  };\n  ref = (function() {\n    var cp;\n    cp = function(root, dep) {\n      var k, r, v;\n      if (dep === 0 || (root == null) || typeof root !== 'object') {\n        return root;\n      }\n      if (root instanceof Array) {\n        r = (function() {\n          var i, len, results;\n          results = [];\n          for (i = 0, len = root.length; i < len; i++) {\n            v = root[i];\n            results.push(cp(v, dep - 1));\n          }\n          return results;\n        })();\n      } else {\n        r = {};\n        for (k in root) {\n          v = root[k];\n          r[k] = cp(v, dep - 1);\n        }\n      }\n      return r;\n    };\n    return {\n      copy: function(obj, depth) {\n        if (depth == null) {\n          depth = 1;\n        }\n        return cp(obj, depth);\n      },\n      deepcopy: function(obj, depth) {\n        if (depth == null) {\n          depth = Infinity;\n        }\n        return cp(obj, depth);\n      }\n    };\n  })(), copy = ref.copy, deepcopy = ref.deepcopy;\n  extend = function(base) {\n    return function() {\n      var d, defaults, i, k, len, v;\n      defaults = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      for (i = 0, len = defaults.length; i < len; i++) {\n        d = defaults[i];\n        if (d != null) {\n          for (k in d) {\n            v = d[k];\n            if (base[k] == null) {\n              base[k] = v;\n            }\n          }\n        }\n      }\n      return base;\n    };\n  };\n  update = function(base) {\n    return function() {\n      var d, i, k, len, updates, v;\n      updates = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      for (i = 0, len = updates.length; i < len; i++) {\n        d = updates[i];\n        if (d != null) {\n          for (k in d) {\n            v = d[k];\n            base[k] = v;\n          }\n        }\n      }\n      return base;\n    };\n  };\n  overload = function(_d) {\n    var d, fallback;\n    d = copy(_d);\n    fallback = d['_'];\n    if (fallback != null) {\n      return function() {\n        var args, ref1;\n        args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        return ((ref1 = d[args.length]) != null ? ref1 : fallback).apply(null, args);\n      };\n    } else {\n      return function() {\n        var args, f;\n        args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        f = d[args.length];\n        if (f == null) {\n          throw Error(\"This Function Can't Accept \" + args.length + \" Args\");\n        } else {\n          return f.apply(null, args);\n        }\n      };\n    }\n  };\n  return {\n    log: log,\n    assert: assert,\n    assertEq: assertEq,\n    assertEqOn: assertEqOn,\n    dict: dict,\n    copy: copy,\n    deepcopy: deepcopy,\n    securely: securely,\n    extend: extend,\n    update: update,\n    overload: overload\n  };\n};\n\nmodule.exports = this_module();\n\n\n\n}).call(this,require('_process'))\n\n},{\"_process\":2}]},{},[1])(1)\n});\n\n\n//# sourceMappingURL=coffee-mate.js.map","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            currentQueue[queueIndex].run();\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (!draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","(function() {\n  var this_module,\n    slice = [].slice;\n\n  this_module = function(arg) {\n    var Iterator, LazyList, Symbol, all, any, best, brk, cartProd, concat, cons, drop, dropWhile, enumerate, filter, foldl, foreach, fromList, groupOn, head, iterate, last, lazy, length, list, map, maximum, maximumOn, minimum, minimumOn, naturals, nil, partition, permutations, primes, randoms, range, ref, repeat, reverse, scanl, sort, sortOn, streak, streak2, take, takeWhile, zip, zipWith;\n    Symbol = arg.Symbol;\n    LazyList = function(f) {\n      f[Symbol.iterator] = function() {\n        return f();\n      };\n      f.toString = function() {\n        return \"LazyList\";\n      };\n      return f;\n    };\n    nil = LazyList(function() {\n      return nil;\n    });\n    nil.toString = function() {\n      return 'nil';\n    };\n    Iterator = function(it) {\n      it.next = function() {\n        var r;\n        r = it();\n        return {\n          value: r,\n          done: r === nil\n        };\n      };\n      it.toString = function() {\n        return \"Iterator\";\n      };\n      return it;\n    };\n    naturals = LazyList(function() {\n      var i;\n      i = -1;\n      return Iterator(function() {\n        return ++i;\n      });\n    });\n    range = function() {\n      var args;\n      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      if (args.length === 0) {\n        return naturals;\n      } else if (args.length === 1) {\n        return LazyList(function() {\n          var i, stop;\n          stop = args[0];\n          i = -1;\n          return Iterator(function() {\n            if (++i < stop) {\n              return i;\n            } else {\n              return nil;\n            }\n          });\n        });\n      } else if (args.length === 2) {\n        return LazyList(function() {\n          var i, start, stop;\n          start = args[0], stop = args[1];\n          if (start < stop) {\n            i = start - 1;\n            return Iterator(function() {\n              if (++i < stop) {\n                return i;\n              } else {\n                return nil;\n              }\n            });\n          } else {\n            i = start + 1;\n            return Iterator(function() {\n              if (--i > stop) {\n                return i;\n              } else {\n                return nil;\n              }\n            });\n          }\n        });\n      } else {\n        return LazyList(function() {\n          var i, start, step, stop;\n          start = args[0], stop = args[1], step = args[2];\n          if (stop !== start && (stop - start) * step < 0) {\n            throw 'ERR IN range(): YOU ARE CREATING AN UNLIMITTED RANGE';\n          }\n          i = start - step;\n          if (start < stop) {\n            return Iterator(function() {\n              if ((i += step) < stop) {\n                return i;\n              } else {\n                return nil;\n              }\n            });\n          } else {\n            return Iterator(function() {\n              if ((i += step) > stop) {\n                return i;\n              } else {\n                return nil;\n              }\n            });\n          }\n        });\n      }\n    };\n    primes = LazyList(function() {\n      return filter(function(x) {\n        return all(function(p) {\n          return x % p !== 0;\n        })(takeWhile(function(p) {\n          return p * p <= x;\n        })(range(2, Infinity)));\n      })(range(2, Infinity))();\n    });\n    lazy = function(xs) {\n      var ref;\n      if (typeof xs === 'function') {\n        if (xs[Symbol.iterator] != null) {\n          return xs;\n        } else {\n          return LazyList(xs);\n        }\n      } else if ((ref = xs.constructor) === Array || ref === String) {\n        return LazyList(function() {\n          var i;\n          i = -1;\n          return Iterator(function() {\n            if ((++i) < xs.length) {\n              return xs[i];\n            } else {\n              return nil;\n            }\n          });\n        });\n      } else if (xs[Symbol.iterator] != null) {\n        return LazyList(function() {\n          var it;\n          it = xs[Symbol.iterator]();\n          return Iterator(function() {\n            var r;\n            r = it.next();\n            if (r.done) {\n              return nil;\n            } else {\n              return r.value;\n            }\n          });\n        });\n      } else {\n        throw Error('lazy(xs): xs is neither Array nor Iterable');\n      }\n    };\n    enumerate = function(it) {\n      if ((it[Symbol.iterator] != null) || it instanceof Array) {\n        return zip(naturals, it);\n      } else {\n        return LazyList(function() {\n          var i, keys;\n          keys = Object.keys(it);\n          i = -1;\n          return Iterator(function() {\n            var k;\n            if (++i < keys.length) {\n              return [(k = keys[i]), it[k]];\n            } else {\n              return nil;\n            }\n          });\n        });\n      }\n    };\n    repeat = function(x) {\n      return LazyList(function() {\n        return Iterator(function() {\n          return x;\n        });\n      });\n    };\n    iterate = function(next, init) {\n      return LazyList(function() {\n        var st;\n        st = init;\n        return Iterator(function() {\n          var r;\n          r = st;\n          st = next(st);\n          return r;\n        });\n      });\n    };\n    randoms = (function() {\n      var hash, normal, salt;\n      salt = Math.PI / 3.0;\n      hash = function(x) {\n        x = Math.sin(x + salt) * 1e4;\n        return x - Math.floor(x);\n      };\n      normal = function(seed) {\n        return iterate(hash, hash(seed));\n      };\n      return function(opts) {\n        var k, ref, ref1, rg, s, seed;\n        if (opts == null) {\n          return normal(0);\n        } else if (typeof opts === 'number') {\n          return normal(opts);\n        } else {\n          seed = (ref = opts.seed) != null ? ref : 0;\n          rg = opts.range;\n          if (rg != null) {\n            if (typeof rg === 'number') {\n              return map(function(x) {\n                return Math.floor(x * rg);\n              })(normal(seed));\n            } else {\n              ref1 = [rg[0], rg[1] - rg[0] + 1], s = ref1[0], k = ref1[1];\n              return map(function(x) {\n                return s + Math.floor(x * k);\n              })(normal(seed));\n            }\n          } else {\n            return normal(seed);\n          }\n        }\n      };\n    })();\n    permutations = (function() {\n      var next_permutation;\n      next_permutation = function(x) {\n        var l, m, r, ref, ref1;\n        x = x.slice(0);\n        l = x.length - 1;\n        while (l >= 1 && x[l] <= x[l - 1]) {\n          --l;\n        }\n        if (l !== 0) {\n          m = x.length - 1;\n          while (m > l - 1 && x[m] <= x[l - 1]) {\n            --m;\n          }\n          ref = [x[l - 1], x[m]], x[m] = ref[0], x[l - 1] = ref[1];\n        }\n        r = x.length - 1;\n        while (l < r) {\n          ref1 = [x[r], x[l]], x[l] = ref1[0], x[r] = ref1[1];\n          ++l;\n          --r;\n        }\n        return x;\n      };\n      return function(xs) {\n        var arr;\n        arr = list(xs);\n        if (arr.length === 0) {\n          return nil;\n        } else {\n          return cons(arr.slice(0))(takeWhile(function(ls) {\n            return json(ls) !== json(arr);\n          })(drop(1)(iterate(next_permutation, arr))));\n        }\n      };\n    })();\n    take = function(n) {\n      return function(xs) {\n        return LazyList(function() {\n          var c, iter;\n          iter = lazy(xs)[Symbol.iterator]();\n          c = -1;\n          return Iterator(function() {\n            if (++c < n) {\n              return iter();\n            } else {\n              return nil;\n            }\n          });\n        });\n      };\n    };\n    takeWhile = function(ok) {\n      return function(xs) {\n        return LazyList(function() {\n          var iter;\n          iter = lazy(xs)[Symbol.iterator]();\n          return Iterator(function() {\n            var x;\n            if ((x = iter()) !== nil && ok(x)) {\n              return x;\n            } else {\n              return nil;\n            }\n          });\n        });\n      };\n    };\n    drop = function(n) {\n      return function(xs) {\n        return LazyList(function() {\n          var finished, i, iter, j, ref;\n          iter = lazy(xs)[Symbol.iterator]();\n          finished = false;\n          for (i = j = 0, ref = n; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n            finished || (finished = iter() === nil);\n            if (finished) {\n              break;\n            }\n          }\n          if (finished) {\n            return function() {\n              return nil;\n            };\n          } else {\n            return iter;\n          }\n        });\n      };\n    };\n    dropWhile = function(ok) {\n      return function(xs) {\n        return LazyList(function() {\n          var iter, x;\n          iter = lazy(xs)[Symbol.iterator]();\n          while (ok(x = iter()) && x !== nil) {\n            null;\n          }\n          return Iterator(function() {\n            var prevx, ref;\n            ref = [x, iter()], prevx = ref[0], x = ref[1];\n            return prevx;\n          });\n        });\n      };\n    };\n    cons = function(x) {\n      return function(xs) {\n        return LazyList(function() {\n          var iter;\n          iter = null;\n          return Iterator(function() {\n            if (iter === null) {\n              iter = lazy(xs)[Symbol.iterator]();\n              return x;\n            } else {\n              return iter();\n            }\n          });\n        });\n      };\n    };\n    map = function(f) {\n      return function(xs) {\n        return LazyList(function() {\n          var iter;\n          iter = lazy(xs)[Symbol.iterator]();\n          return Iterator(function() {\n            var x;\n            if ((x = iter()) !== nil) {\n              return f(x);\n            } else {\n              return nil;\n            }\n          });\n        });\n      };\n    };\n    filter = function(ok) {\n      return function(xs) {\n        return LazyList(function() {\n          var iter;\n          iter = lazy(xs)[Symbol.iterator]();\n          return Iterator(function() {\n            var x;\n            while ((x = iter()) !== nil && !ok(x)) {\n              null;\n            }\n            return x;\n          });\n        });\n      };\n    };\n    scanl = function(f, r) {\n      return function(xs) {\n        return LazyList(function() {\n          var iter;\n          iter = lazy(xs)[Symbol.iterator]();\n          return Iterator(function() {\n            var got, x;\n            got = r;\n            r = (x = iter()) !== nil ? f(r, x) : nil;\n            return got;\n          });\n        });\n      };\n    };\n    streak = function(n) {\n      if (n < 1) {\n        return nil;\n      } else {\n        return function(xs) {\n          return drop(n - 1)(LazyList(function() {\n            var buf, iter;\n            iter = lazy(xs)[Symbol.iterator]();\n            buf = [];\n            return Iterator(function() {\n              var x;\n              if ((x = iter()) === nil) {\n                return nil;\n              }\n              buf.push(x);\n              if (buf.length > n) {\n                buf.shift(1);\n              }\n              return buf.slice(0);\n            });\n          }));\n        };\n      }\n    };\n    streak2 = function(n) {\n      return function(xs) {\n        return streak(n)(concat([xs, take(n - 1)(xs)]));\n      };\n    };\n    reverse = function(xs) {\n      var ref;\n      if ((ref = xs.constructor) === Array || ref === String) {\n        return LazyList(function() {\n          var i;\n          i = xs.length;\n          return Iterator(function() {\n            if ((--i) >= 0) {\n              return xs[i];\n            } else {\n              return nil;\n            }\n          });\n        });\n      } else {\n        return list(lazy(xs)).reverse();\n      }\n    };\n    sort = function(xs) {\n      var arr;\n      arr = list(lazy(xs));\n      return arr.sort(function(a, b) {\n        return (a > b) - (a < b);\n      });\n    };\n    sortOn = function(f) {\n      return function(xs) {\n        var arr;\n        arr = list(lazy(xs));\n        return arr.sort(function(a, b) {\n          var fa, fb;\n          return ((fa = f(a)) > (fb = f(b))) - (fa < fb);\n        });\n      };\n    };\n    groupOn = function(f) {\n      return function(xs) {\n        var k, memo, v;\n        memo = {};\n        foreach(xs, function(x) {\n          var y;\n          y = f(x);\n          if (memo[y] == null) {\n            memo[y] = [];\n          }\n          return memo[y].push(x);\n        });\n        return (function() {\n          var results;\n          results = [];\n          for (k in memo) {\n            v = memo[k];\n            results.push(v);\n          }\n          return results;\n        })();\n      };\n    };\n    partition = function(f) {\n      return function(xs) {\n        var memo;\n        memo = [[], []];\n        foreach(xs, function(x) {\n          var y;\n          y = !f(x) + 0;\n          return memo[y].push(x);\n        });\n        return memo;\n      };\n    };\n    concat = function(xss) {\n      xss = filter(function(x) {\n        var ref;\n        return ((ref = x.constructor) !== Array && ref !== String) || x.length > 0;\n      })(xss);\n      return LazyList(function() {\n        var iter, xs, xs_iter;\n        xs_iter = lazy(xss)[Symbol.iterator]();\n        xs = xs_iter();\n        iter = lazy(xs)[Symbol.iterator]();\n        return Iterator(function() {\n          var x;\n          if ((x = iter()) !== nil) {\n            return x;\n          } else if ((xs = xs_iter()) !== nil) {\n            iter = lazy(xs)[Symbol.iterator]();\n            return iter();\n          } else {\n            return nil;\n          }\n        });\n      });\n    };\n    ref = (function() {\n      var finished, zip, zipWith;\n      finished = function(arr) {\n        var j, len1, x;\n        for (j = 0, len1 = arr.length; j < len1; j++) {\n          x = arr[j];\n          if (x === nil) {\n            return true;\n          }\n        }\n        return false;\n      };\n      zip = function() {\n        var xss;\n        xss = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        return LazyList(function() {\n          var iters, xs;\n          iters = (function() {\n            var j, len1, results;\n            results = [];\n            for (j = 0, len1 = xss.length; j < len1; j++) {\n              xs = xss[j];\n              results.push(lazy(xs)[Symbol.iterator]());\n            }\n            return results;\n          })();\n          return Iterator(function() {\n            var iter, next;\n            next = (function() {\n              var j, len1, results;\n              results = [];\n              for (j = 0, len1 = iters.length; j < len1; j++) {\n                iter = iters[j];\n                results.push(iter());\n              }\n              return results;\n            })();\n            if (finished(next)) {\n              return nil;\n            } else {\n              return next;\n            }\n          });\n        });\n      };\n      zipWith = function(f) {\n        return function() {\n          var xss;\n          xss = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n          return LazyList(function() {\n            var iters, xs;\n            iters = (function() {\n              var j, len1, results;\n              results = [];\n              for (j = 0, len1 = xss.length; j < len1; j++) {\n                xs = xss[j];\n                results.push(lazy(xs)[Symbol.iterator]());\n              }\n              return results;\n            })();\n            return Iterator(function() {\n              var iter, next;\n              next = (function() {\n                var j, len1, results;\n                results = [];\n                for (j = 0, len1 = iters.length; j < len1; j++) {\n                  iter = iters[j];\n                  results.push(iter());\n                }\n                return results;\n              })();\n              if (finished(next)) {\n                return nil;\n              } else {\n                return f.apply(null, next);\n              }\n            });\n          });\n        };\n      };\n      return {\n        zip: zip,\n        zipWith: zipWith\n      };\n    })(), zip = ref.zip, zipWith = ref.zipWith;\n    cartProd = (function() {\n      var apply_vector, inc_vector;\n      inc_vector = function(limits) {\n        var len_minus_1;\n        len_minus_1 = limits.length - 1;\n        return function(vec) {\n          var i;\n          i = len_minus_1;\n          while (!(++vec[i] < limits[i] || i <= 0)) {\n            vec[i--] = 0;\n          }\n          return vec;\n        };\n      };\n      apply_vector = function(space) {\n        var len;\n        len = space.length;\n        return function(vec) {\n          var i, j, ref1, results;\n          results = [];\n          for (i = j = 0, ref1 = len; 0 <= ref1 ? j < ref1 : j > ref1; i = 0 <= ref1 ? ++j : --j) {\n            results.push(space[i][vec[i]]);\n          }\n          return results;\n        };\n      };\n      return function() {\n        var xss;\n        xss = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        return LazyList(function() {\n          var get_value, i, inc, j, len, len1, limits, v, xs;\n          xss = (function() {\n            var j, len1, results;\n            results = [];\n            for (j = 0, len1 = xss.length; j < len1; j++) {\n              xs = xss[j];\n              results.push(list(xs));\n            }\n            return results;\n          })();\n          limits = (function() {\n            var j, ref1, results;\n            results = [];\n            for (i = j = 0, ref1 = xss.length; 0 <= ref1 ? j < ref1 : j > ref1; i = 0 <= ref1 ? ++j : --j) {\n              results.push(xss[i].length);\n            }\n            return results;\n          })();\n          for (j = 0, len1 = limits.length; j < len1; j++) {\n            len = limits[j];\n            if (len === 0) {\n              return nil;\n            }\n          }\n          inc = inc_vector(limits);\n          get_value = apply_vector(xss);\n          v = (function() {\n            var o, ref1, results;\n            results = [];\n            for (i = o = 0, ref1 = xss.length; 0 <= ref1 ? o < ref1 : o > ref1; i = 0 <= ref1 ? ++o : --o) {\n              results.push(0);\n            }\n            return results;\n          })();\n          return Iterator(function() {\n            var r;\n            if (v[0] < limits[0]) {\n              r = get_value(v);\n              inc(v);\n              return r;\n            } else {\n              return nil;\n            }\n          });\n        });\n      };\n    })();\n    list = function(xs) {\n      var it, n, results, results1, x;\n      if (xs instanceof Array) {\n        return xs;\n      } else if (typeof xs === 'function') {\n        it = xs[Symbol.iterator]();\n        results = [];\n        while ((x = it()) !== nil) {\n          results.push(x);\n        }\n        return results;\n      } else if (xs[Symbol.iterator] != null) {\n        it = lazy(xs)[Symbol.iterator]();\n        results1 = [];\n        while ((x = it()) !== nil) {\n          results1.push(x);\n        }\n        return results1;\n      } else if (typeof xs === 'number') {\n        n = xs;\n        return function(xs) {\n          return list(take(n)(xs));\n        };\n      } else {\n        throw Error({\n          message: 'list(xs): xs is neither Array nor Iterable',\n          info: {\n            \"xs\": xs,\n            \"xs.constructor\": xs != null ? xs.constructor : void 0\n          }\n        });\n      }\n    };\n    head = function(xs) {\n      var iter, r, ref1;\n      if ((ref1 = xs.constructor) === Array || ref1 === String) {\n        if (xs.length > 0) {\n          return xs[0];\n        } else {\n          throw \"Error: head() used on empty list.\";\n        }\n      } else {\n        iter = lazy(xs)[Symbol.iterator]();\n        if ((r = iter()) !== nil) {\n          return r;\n        } else {\n          throw \"Error: head() used on empty list.\";\n        }\n      }\n    };\n    last = function(xs) {\n      var iter, r, ref1, ref2, x;\n      if ((ref1 = xs.constructor) === Array || ref1 === String) {\n        return (ref2 = xs[xs.length - 1]) != null ? ref2 : nil;\n      } else {\n        iter = lazy(xs)[Symbol.iterator]();\n        r = nil;\n        while ((x = iter()) !== nil) {\n          r = x;\n        }\n        return r;\n      }\n    };\n    length = function(xs) {\n      var iter, r, ref1, x;\n      if ((ref1 = xs.constructor) === Array || ref1 === String) {\n        return xs.length;\n      } else {\n        iter = lazy(xs)[Symbol.iterator]();\n        r = 0;\n        while ((x = iter()) !== nil) {\n          ++r;\n        }\n        return r;\n      }\n    };\n    foldl = function(f, init) {\n      return function(xs) {\n        var iter, r, x;\n        r = init;\n        iter = lazy(xs)[Symbol.iterator]();\n        while ((x = iter()) !== nil) {\n          r = f(r, x);\n        }\n        return r;\n      };\n    };\n    best = function(better) {\n      return function(xs) {\n        var it, iter, r;\n        iter = lazy(xs)[Symbol.iterator]();\n        if ((r = iter()) === nil) {\n          return null;\n        }\n        while ((it = iter()) !== nil) {\n          r = better(it, r) ? it : r;\n        }\n        return r;\n      };\n    };\n    maximumOn = function(f) {\n      return best(function(a, b) {\n        return f(a) > f(b);\n      });\n    };\n    minimumOn = function(f) {\n      return best(function(a, b) {\n        return f(a) > f(b);\n      });\n    };\n    maximum = best(function(x, y) {\n      return x > y;\n    });\n    minimum = best(function(x, y) {\n      return x < y;\n    });\n    all = function(f) {\n      if (typeof f !== 'function') {\n        f = (function(x) {\n          return x === f;\n        });\n      }\n      return function(xs) {\n        var iter, x;\n        iter = lazy(xs)[Symbol.iterator]();\n        while ((x = iter()) !== nil) {\n          if (!f(x)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    };\n    any = function(f) {\n      var all_not;\n      all_not = all(function(x) {\n        return !f(x);\n      });\n      return function(xs) {\n        return !(all_not(xs));\n      };\n    };\n    fromList = function(pairs) {\n      var r;\n      r = {};\n      foreach(pairs, function(arg1) {\n        var k, v;\n        k = arg1[0], v = arg1[1];\n        return r[k] = v;\n      });\n      return r;\n    };\n    brk = function() {\n      return brk;\n    };\n    brk.toString = function() {\n      return 'foreach.break';\n    };\n    foreach = function(xs, callback, fruit) {\n      var iter, x;\n      iter = lazy(xs)[Symbol.iterator]();\n      while ((x = iter()) !== nil) {\n        if (callback(x, fruit) === brk) {\n          break;\n        }\n      }\n      return fruit;\n    };\n    Object.defineProperties(foreach, {\n      \"break\": {\n        writable: false,\n        configurable: false,\n        enumerable: false,\n        value: brk\n      }\n    });\n    return {\n      nil: nil,\n      LazyList: LazyList,\n      Iterator: Iterator,\n      Symbol: Symbol,\n      naturals: naturals,\n      range: range,\n      primes: primes,\n      lazy: lazy,\n      enumerate: enumerate,\n      repeat: repeat,\n      iterate: iterate,\n      randoms: randoms,\n      permutations: permutations,\n      cons: cons,\n      map: map,\n      filter: filter,\n      take: take,\n      takeWhile: takeWhile,\n      drop: drop,\n      dropWhile: dropWhile,\n      scanl: scanl,\n      streak: streak,\n      streak2: streak2,\n      reverse: reverse,\n      sort: sort,\n      sortOn: sortOn,\n      groupOn: groupOn,\n      partition: partition,\n      concat: concat,\n      zip: zip,\n      zipWith: zipWith,\n      cartProd: cartProd,\n      list: list,\n      head: head,\n      last: last,\n      length: length,\n      foldl: foldl,\n      best: best,\n      maximum: maximum,\n      minimum: minimum,\n      maximumOn: maximumOn,\n      minimumOn: minimumOn,\n      all: all,\n      any: any,\n      fromList: fromList,\n      foreach: foreach\n    };\n  };\n\n  module.exports = this_module({\n    Symbol: typeof Symbol !== \"undefined\" && Symbol !== null ? Symbol : {\n      iterator: 'iter'\n    }\n  });\n\n}).call(this);\n\n//# sourceMappingURL=lazy.js.map","this_module = ({best}) ->\n\t# transformers\n\tflip = (f) ->\n\t\t(x) -> (y) -> f(y)(x)\n\n\tcombine = (f) -> (g) ->\n\t\t(x) -> f g(x)\n\n\tcurry2 = (f) ->\n\t\t(a) -> (b) -> f(a, b)\n\n\tcurry3 = (f) ->\n\t\t(a) -> (b) -> (c) -> f(a, b, c)\n\n\tuncurry2 = (f) ->\n\t\t(a, b) -> f(a)(b)\n\n\tuncurry3 = (f) ->\n\t\t(a, b, c) -> f(a)(b)(c)\n\n\tpack = (f) ->\n\t\t(arr) -> f(arr...)\n\n\tunpack = (f) ->\n\t\t(arr...) -> f(arr)\n\n\t# seek & pluck in Array or Object\n\tseek = (arr) ->\n\t\t(i) -> arr[i]\n\n\tpluck = (attr) ->\n\t\t(d) -> d[attr]\n\n\t# compare\n\tequal = (it) ->\n\t\t(x) -> x == it\n\n\tnotEqual = (it) ->\n\t\t(x) -> x != it\n\n\tlessThan = (it) ->\n\t\t(x) -> x < it\n\n\tgreaterThan = (it) ->\n\t\t(x) -> x > it\n\n\tlessEqual = (it) ->\n\t\t(x) -> x <= it\n\n\tgreaterEqual = (it) ->\n\t\t(x) -> x >= it\n\n\t# math\n\tplus = (it) ->\n\t\t(x) -> x + it\n\n\tminus = (it) ->\n\t\t(x) -> x - it\n\n\tabs = Math.abs\n\tfloor = Math.floor\n\tceil = Math.ceil\n\n\tprecise = (n) ->\n\t\t(x) -> parseFloat x.toPrecision(n)\n\n\taccept_multi_or_array = (f) ->\n\t\t(arr...) ->\n\t\t\tf(if arr.length == 1 and arr.first instanceof Array then arr.first else arr)\n\n\tsum = accept_multi_or_array (arr) ->\n\t\tarr = arr.first if arr.length == 1 and arr.first instanceof Array\n\t\tr = 0\n\t\tr += x for x in arr\n\t\tr\n\n\tmax = accept_multi_or_array (arr) ->\n\t\tbest((a, b) -> a > b) arr\n\n\tmin = accept_multi_or_array (arr) ->\n\t\tbest((a, b) -> a < b) arr\n\n\tmax_index = accept_multi_or_array (arr) ->\n\t\tbest((i, j) -> arr[i] > arr[j]) [0...arr.length]\n\n\tmin_index = accept_multi_or_array (arr) ->\n\t\tbest((i, j) -> arr[i] < arr[j]) [0...arr.length]\n\n\treturn {\n\t\tflip, combine,\n\t\tcurry2, curry3, uncurry2, uncurry3, pack, unpack,\n\t\tseek, pluck,\n\t\tequal, notEqual, lessThan, lessEqual, greaterThan, greaterEqual,\n\t\tplus, minus, abs, floor, ceil, precise,\n\t\tsum, max, min, max_index, min_index,\n\t}\n\nmodule.exports = this_module\n\tbest: require('lazy-list').best\n\n","this_module = () ->\n\tint = (s, base) -> if typeof(s) == 'string' then (r = parseInt(s, base); unless s.slice? and r == parseInt(s.slice(0,-1), base) then r else null) else parseInt(0 + s)\n\tfloat = (s) -> if /^-?[0-9]*(\\.[0-9]+)?([eE]-?[0-9]+)?$/.test(s) then parseFloat(s) else null\n\tstr = (x, base) -> x.toString(base)\n\tbool = (x) -> if x in [true, false] then x else null\n\thex = (x) -> x.toString(16)\n\tord = (c) -> c.charCodeAt()\n\tchr = (x) -> String.fromCharCode(x)\n\tjson = (it, indent) -> JSON.stringify(it, null, indent)\n\tobj = (s) -> JSON.parse(s)\n\n\treturn {\n\t\tint, float, bool, str, hex, ord, chr, json, obj,\n\t}\n\nmodule.exports = this_module()\n\n","this_module = () ->\n\tchurch = (n) -> #the nth church number\n\t\titer = (f, n, r) ->\n\t\t\tif n == 0 then r else iter(f, n - 1, f(r))\n\t\t(f) ->\n\t\t\t(x) -> iter(f, n + 0, x)\n\n\tY = (f) -> #the Y combinator\n\t\t((x) -> (x x)) ((x) -> (f ((y) -> ((x x) y))))\n\n\tmemoize = (f, get_key = ((args...) -> json(args))) ->\n\t\tcache = {}\n\t\t(args...) ->\n\t\t\tkey = get_key(args...)\n\t\t\tcached = cache[key]\n\t\t\tif cached?\n\t\t\t\tcached\n\t\t\telse\n\t\t\t\tr = f(args...)\n\t\t\t\tcache[key] = r\n\t\t\t\tr\n\n\tfix = Y\n\n\tmemoFix = (ff) ->\n\t\tf = memoize (ff ((args...) -> f(args...)))\n\t\treturn f\n\n\treturn {\n\t\tchurch, Y, memoize, fix, memoFix,\n\t}\n\nmodule.exports = this_module()\n\n","this_module = () ->\n\turi_encoder = (component_packer = str) ->\n\t\t(obj) ->\n\t\t\t(\"#{encodeURIComponent(k)}=#{encodeURIComponent component_packer v}\" for k, v of obj when v isnt undefined).join('&')\n\n\turi_decoder = (component_unpacker = ((s) -> s)) ->\n\t\t(str) ->\n\t\t\td = {}\n\t\t\tfor s in (str.match /[^?=&]+=[^&]*/g) ? []\n\t\t\t\t[..., k, v] = s.match /([^=]+)=(.*)/\n\t\t\t\td[decodeURIComponent(k)] = (component_unpacker decodeURIComponent v)\n\t\t\treturn d\n\n\treturn {\n\t\turi_encoder, uri_decoder,\n\t}\n\nmodule.exports = this_module()\n\n","this_module = () ->\n\tfunction_literal = (f) ->\n\t\texpr = f.toString().replace(/^\\s*function\\s?\\(\\s?\\)\\s?{\\s*return\\s*([^]*?);?\\s*}$/, '$1')\n\t\texpr = expr.replace(/[\\r\\n]{1,2}\\s*/g, '') if expr.length <= 100\n\t\treturn expr\n\n\ttime_now = ->\n\t\t(new Date).getTime()\n\n\tlog = do -> #log an expression with it's literal and time used\n\t\tdye = do ->\n\t\t\t# ANSI Terminal Colors.\n\t\t\tcavailable = (not window?) and process? and not process.env.NODE_DISABLE_COLORS\n\t\t\tpalette =\n\t\t\t\tbold: '\\x1B[0;1m'\n\t\t\t\tred: '\\x1B[0;31m'\n\t\t\t\tgreen: '\\x1B[0;32m'\n\t\t\t\tyellow: '\\x1B[0;33m'\n\t\t\t\tblue: '\\x1B[0;34m'\n\t\t\t\tbold_grey: '\\x1B[1;30m'\n\t\t\tif not cavailable\n\t\t\t\t(color) -> (s) -> s\n\t\t\telse\n\t\t\t\t(color) ->\n\t\t\t\t\t(s) -> \"#{palette[color]}#{s}#{'\\x1B[0m'}\"\n\n\t\tlog_label = do ->\n\t\t\tflag_palette =\n\t\t\t\t'#': 'bold_grey'\n\t\t\t\t'I': 'green'\n\t\t\t\t'E': 'red'\n\t\t\t\t'W': 'yellow'\n\t\t\top_flag = (op) ->\n\t\t\t\tif op == 'log' then '#' else op[0].toUpperCase()\n\t\t\t(op) ->\n\t\t\t\tflag = op_flag(op)\n\t\t\t\tdye(flag_palette[flag]) flag\n\n\t\thistories = []\n\t\tfactory = (op) ->\n\t\t\tprefix = \"#{dye('bold_grey') '#'}#{log_label op}\"\n\t\t\t(args...) ->\n\t\t\t\tball = []\n\t\t\t\tfor f in args\n\t\t\t\t\tif typeof f == 'function'\n\t\t\t\t\t\texpr = function_literal(f)\n\t\t\t\t\t\tstart_time = time_now()\n\t\t\t\t\t\teval_result = f()\n\t\t\t\t\t\ttime_used = time_now() - start_time\n\t\t\t\t\t\tball.push(\"#{prefix} #{dye('green') expr} #{dye('bold_grey') '==>'}\", eval_result)\n\t\t\t\t\t\tball.push(dye('yellow') \"[#{time_used}ms]\") if time_used > 0\n\t\t\t\t\telse\n\t\t\t\t\t\tball.push(\"#{prefix}\", f)\n\t\t\t\tconsole[op] ball...\n\t\t\t\thistories.push(ball)\n\t\t\t\thistories.shift() if histories.length >= 10\n\t\t\t\treturn null\n\t\tgot = factory('log')\n\t\tgot.histories = histories\n\t\tgot.info = factory('info')\n\t\tgot.warn = factory('warn')\n\t\tgot.error = got.err = factory('error')\n\t\treturn got\n\n\tassert = (f, msg) ->\n\t\t[f, msg] = [msg, f] if f not instanceof Function\n\t\ttry\n\t\t\tr = f()\n\t\tcatch e\n\t\t\tthrow Error \"Assertion #{msg ? function_literal(f)} Unknown:\\n#{e}\"\n\t\tif not r\n\t\t\tthrow Error \"Assertion #{msg ? function_literal(f)} Failed!\"\n\n\tassertEq = (l, r) ->\n\t\ttry\n\t\t\tlv = l()\n\t\t\trv = r()\n\t\tcatch e\n\t\t\tthrow Error \"Equation Between #{function_literal(l)} And #{function_literal(r)} Unknown:\\n#{e}\"\n\t\tif lv isnt rv\n\t\t\tthrow Error \"Equation Failed:\\n\\t#{function_literal(l)} IS #{lv} BUT\\n\\t#{function_literal(r)} IS #{rv}.\"\n\n\tassertEqOn = (f) -> (l, r) ->\n\t\ttry\n\t\t\tlv = l()\n\t\t\trv = r()\n\t\t\tflv = f(lv)\n\t\t\tfrv = f(rv)\n\t\tcatch e\n\t\t\tthrow Error \"MAPPED Equation Between #{function_literal(l)} And #{function_literal(r)} Unknown:\\n#{e}\"\n\t\tif flv isnt frv\n\t\t\tthrow Error \"Equation Failed:\\n\\t#{function_literal(l)} IS #{lv} AND MAPPED TO #{flv} BUT\\n\\t#{function_literal(r)} IS #{rv} AND MAPPED TO #{frv}.\"\n\n\tsecurely = (f) -> # ensure a function not to modify it's arguments\n\t\t(args...) ->\n\t\t\targs = deepcopy args\n\t\t\tf(args...)\n\n\tdict = (pairs) -> #for dict comprehensions\n\t\td = {}\n\t\td[k] = v for [k, v] in pairs\n\t\treturn d\n\n\t{copy, deepcopy} = do ->\n\t\tcp = (root, dep) ->\n\t\t\treturn root if dep == 0 or not root? or typeof(root) != 'object'\n\t\t\tif root instanceof Array\n\t\t\t\tr = (cp(v, dep-1) for v in root)\n\t\t\telse\n\t\t\t\tr = {}\n\t\t\t\tr[k] = cp(v, dep-1) for k, v of root\n\t\t\treturn r\n\t\tcopy: (obj, depth=1) -> cp(obj, depth)\n\t\tdeepcopy: (obj, depth=Infinity) -> cp(obj, depth)\n\n\textend = (base) -> (defaults...) -> #NOTE: modified inplace, use copy() to protect it.\n\t\tfor d in defaults when d?\n\t\t\tbase[k] ?= v for k, v of d #NOTE: null values will be replaced if a default value exists.\n\t\treturn base\n\n\tupdate = (base) -> (updates...) -> #NOTE: modified inplace, use copy() to protect it.\n\t\tfor d in updates when d?\n\t\t\tbase[k] = v for k, v of d\n\t\treturn base\n\n\toverload = (_d) ->\n\t\td = copy _d\n\t\tfallback = d['_']\n\t\tif fallback?\n\t\t\t(args...) ->\n\t\t\t\t(d[args.length] ? fallback) args...\n\t\telse\n\t\t\t(args...) ->\n\t\t\t\tf = d[args.length]\n\t\t\t\tif not f?\n\t\t\t\t\tthrow Error \"This Function Can't Accept #{args.length} Args\"\n\t\t\t\telse\n\t\t\t\t\treturn f args...\n\n\treturn {\n\t\tlog, assert, assertEq, assertEqOn, dict, copy, deepcopy, securely, extend, update, overload,\n\t}\n\nmodule.exports = this_module()\n\n"],"sourceRoot":"/source/"}