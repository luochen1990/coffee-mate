{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","global.js","src/global.coffee","node_modules/browserify/node_modules/process/browser.js","node_modules/lazy-list/build/nodejs/lazy.js","src/basics.coffee","src/coffee-mate.coffee","src/convertors.coffee","src/funny.coffee","src/url-helpers.coffee","src/utils.coffee"],"names":["f","exports","module","define","amd","g","window","global","self","this","__CoffeeMate","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"k","mate","v","./coffee-mate",2,"cleanUpNextTick","draining","currentQueue","queue","concat","queueIndex","drainQueue","timeout","setTimeout","len","run","clearTimeout","Item","fun","array","noop","process","nextTick","args","Array","arguments","push","prototype","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","name","cwd","chdir","dir","umask",3,"this_module","slice","arg","CustomErrorType","Iterator","LazyList","ListError","Symbol","all","any","best","brk","cartProd","cons","drop","dropWhile","enumerate","filter","foldl","foreach","fromList","groupOn","head","iterate","last","lazy","list","map","maximum","maximumOn","minimum","minimumOn","naturals","nil","partition","permutations","powerset","primes","randoms","range","ref","repeat","reverse","scanl","sort","sortOn","streak","streak2","tail","take","takeWhile","zip","zipWith","errorName","msg","CustomError","__proto__","iterator","toString","toJSON","it","next","value","done","stop","start","step","x","p","xs","constructor","String","keys","Object","init","st","hash","normal","salt","Math","PI","sin","floor","seed","opts","ref1","rg","next_permutation","m","arr","ls","json","ss","c","iter","ok","finished","j","prevx","op","got","buf","shift","b","fa","fb","memo","y","results","xss","xs_iter","len1","iters","apply_vector","inc_vector","limits","len_minus_1","vec","space","get_value","inc","results1","better","all_not","pairs","arg1","callback","fruit","defineProperties","break","writable","configurable","enumerable",4,"abs","ceil","combine","curry2","curry3","equal","flip","format","greaterEqual","greaterThan","identity","lessEqual","lessThan","minus","notEqual","pack","pluck","plus","precise","seek","sum","uncurry2","uncurry3","unpack","form","replace","attr","d","parseFloat","toPrecision","lazy-list",5,"basics","convertors","funny","url_helpers","utils","extend","./basics","./convertors","./funny","./url-helpers","./utils",6,"bool","chr","flatJson","float","hex","int","jsonWith","obj","ord","prettyJson","str","base","parseInt","test","charCodeAt","fromCharCode","JSON","stringify","indent","convertor","flat","parse","error",7,"Y","church","fix","memoFix","memoize","get_key","cache","cached","key","ff",8,"uri_decoder","uri_encoder","component_packer","encodeURIComponent","join","component_unpacker","ref2","match","decodeURIComponent",9,"assert","assertEq","assertEqOn","copy","deepcopy","dict","literal","log","overload","purify","simpl","time_now","update","lit","thunk","s0","s1","s2","Date","getTime","dye","factory","histories","log_label","cavailable","palette","NODE_DISABLE_COLORS","bold","red","green","yellow","blue","bold_grey","color","flag_palette","op_flag","#","I","E","W","toUpperCase","flag","prefix","ball","eval_result","expr","start_time","time_used","console","info","warn","err","Function","lv","rv","flv","frv","cp","root","dep","depth","defaults","updates","_d","fallback","_process"],"mappings":"CAAA,SAAAA,GAAA,GAAA,gBAAAC,UAAA,mBAAAC,QAAAA,OAAAD,QAAAD,QAAA,IAAA,kBAAAG,SAAAA,OAAAC,IAAAD,UAAAH,OAAA,CAAA,GAAAK,EAAAA,GAAA,mBAAAC,QAAAA,OAAA,mBAAAC,QAAAA,OAAA,mBAAAC,MAAAA,KAAAC,KAAAJ,EAAAK,aAAAV,MAAA,WAAA,MAAA,SAAAW,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAhB,GAAA,GAAAqB,OAAA,uBAAAL,EAAA,IAAA,MAAAhB,GAAAsB,KAAA,mBAAAtB,EAAA,GAAAuB,GAAAV,EAAAG,IAAAf,WAAAW,GAAAI,GAAA,GAAAQ,KAAAD,EAAAtB,QAAA,SAAAU,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAY,EAAAA,EAAAtB,QAAAU,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAf,QAAA,IAAA,GAAAmB,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAW,OAAAT,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAW,GAAA,SAAAP,EAAAjB,EAAAD,ICCA,SAAWM,GCDX,GAAAoB,GAAAC,EAAAC,CAEAD,GAAAT,EAAA,gBAEA,KAAAQ,IAAAC,GACAC,EAAAD,EAAAD,GACApB,EAAAoB,GAAAE,IDOGL,KAAKf,KAAuB,mBAAXF,QAAyBA,OAAyB,mBAATC,MAAuBA,KAAyB,mBAAXF,QAAyBA,aAExHwB,gBAAgB,IAAIC,GAAG,SAASZ,EAAQjB,EAAOD,GEPlD,QAAA+B,KACAC,GAAA,EACAC,EAAAT,OACAU,EAAAD,EAAAE,OAAAD,GAEAE,EAAA,GAEAF,EAAAV,QACAa,IAIA,QAAAA,KACA,IAAAL,EAAA,CAGA,GAAAM,GAAAC,WAAAR,EACAC,IAAA,CAGA,KADA,GAAAQ,GAAAN,EAAAV,OACAgB,GAAA,CAGA,IAFAP,EAAAC,EACAA,OACAE,EAAAI,GACAP,EAAAG,GAAAK,KAEAL,GAAA,GACAI,EAAAN,EAAAV,OAEAS,EAAA,KACAD,GAAA,EACAU,aAAAJ,IAiBA,QAAAK,GAAAC,EAAAC,GACArC,KAAAoC,IAAAA,EACApC,KAAAqC,MAAAA,EAYA,QAAAC,MApEA,GAGAb,GAHAc,EAAA9C,EAAAD,WACAkC,KACAF,GAAA,EAEAI,EAAA,EAoCAW,GAAAC,SAAA,SAAAJ,GACA,GAAAK,GAAA,GAAAC,OAAAC,UAAA3B,OAAA,EACA,IAAA2B,UAAA3B,OAAA,EACA,IAAA,GAAAL,GAAA,EAAAA,EAAAgC,UAAA3B,OAAAL,IACA8B,EAAA9B,EAAA,GAAAgC,UAAAhC,EAGAe,GAAAkB,KAAA,GAAAT,GAAAC,EAAAK,IACAjB,GACAO,WAAAF,EAAA,IASAM,EAAAU,UAAAZ,IAAA,WACAjC,KAAAoC,IAAAU,MAAA,KAAA9C,KAAAqC,QAEAE,EAAAQ,MAAA,UACAR,EAAAS,SAAA,EACAT,EAAAU,OACAV,EAAAW,QACAX,EAAAY,QAAA,GACAZ,EAAAa,YAIAb,EAAAc,GAAAf,EACAC,EAAAe,YAAAhB,EACAC,EAAAgB,KAAAjB,EACAC,EAAAiB,IAAAlB,EACAC,EAAAkB,eAAAnB,EACAC,EAAAmB,mBAAApB,EACAC,EAAAoB,KAAArB,EAEAC,EAAAqB,QAAA,SAAAC,GACA,KAAA,IAAAjD,OAAA,qCAIA2B,EAAAuB,IAAA,WAAA,MAAA,KACAvB,EAAAwB,MAAA,SAAAC,GACA,KAAA,IAAApD,OAAA,mCAEA2B,EAAA0B,MAAA,WAAA,MAAA,SFkBMC,GAAG,SAASxD,EAAQjB,EAAOD,IG3GjC,WACA,GAAA2E,GACAC,KAAAA,KAEAD,GAAA,SAAAE,GACA,GAAAC,GAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAApD,EAAAqD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA5E,EAAA6E,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,CA43BA,OA33BA7C,GAAAL,EAAAK,OACAJ,EAAA,SAAAkD,GACA,MAAA,UAAAC,GACA,GAAAC,EASA,OARAA,GAAA,SAAAD,GACA,GAAA1H,EAIA,OAHAA,GAAA,GAAAa,OAAA6G,GACA1H,EAAA8D,KAAA2D,EACAzH,EAAA4H,UAAAD,EAAA7E,UACA9C,GAEA2H,EAAA7E,UAAA8E,UAAA/G,MAAAiC,UACA,GAAA6E,GAAAD,KAGAhD,EAAAH,EAAA,aACAE,EAAA,SAAAjF,GAUA,MATAA,GAAAmF,EAAAkD,UAAA,WACA,MAAArI,MAEAA,EAAAsI,SAAA,WACA,MAAA,YAEAtI,EAAAuI,OAAA,WACA,MAAAjC,GAAAtG,IAEAA,GAEA6G,EAAA5B,EAAA,WACA,MAAA4B,KAEAA,EAAAyB,SAAA,WACA,MAAA,OAEAtD,EAAA,SAAAwD,GAYA,MAXAA,GAAAC,KAAA,WACA,GAAA3H,EAEA,OADAA,GAAA0H,KAEAE,MAAA5H,EACA6H,KAAA7H,IAAA+F,IAGA2B,EAAAF,SAAA,WACA,MAAA,YAEAE,GAEA5B,EAAA3B,EAAA,WACA,GAAA7D,EAEA,OADAA,GAAA,GACA4D,EAAA,WACA,QAAA5D,MAGA+F,EAAA,WACA,GAAAjE,EAEA,OADAA,GAAA,GAAAE,UAAA3B,OAAAoD,EAAArD,KAAA4B,UAAA,MACA,IAAAF,EAAAzB,OACAmF,EAEA3B,EADA,IAAA/B,EAAAzB,OACA,WACA,GAAAL,GAAAwH,CAGA,OAFAA,GAAA1F,EAAA,GACA9B,EAAA,GACA4D,EAAA,WACA,QAAA5D,EAAAwH,EACAxH,EAEAyF,KAIA,IAAA3D,EAAAzB,OACA,WACA,GAAAL,GAAAyH,EAAAD,CAEA,OADAC,GAAA3F,EAAA,GAAA0F,EAAA1F,EAAA,GACA0F,EAAAC,GACAzH,EAAAyH,EAAA,EACA7D,EAAA,WACA,QAAA5D,EAAAwH,EACAxH,EAEAyF,MAIAzF,EAAAyH,EAAA,EACA7D,EAAA,WACA,QAAA5D,EAAAwH,EACAxH,EAEAyF,MAMA,WACA,GAAAzF,GAAAyH,EAAAC,EAAAF,CAEA,IADAC,EAAA3F,EAAA,GAAA0F,EAAA1F,EAAA,GAAA4F,EAAA5F,EAAA,GACA0F,IAAAC,GAAA,GAAAD,EAAAC,GAAAC,EACA,KAAA5D,GAAA,uDAGA,OADA9D,GAAAyH,EAAAC,EAEA9D,EADA4D,EAAAC,EACA,WACA,OAAAzH,GAAA0H,GAAAF,EACAxH,EAEAyF,GAIA,WACA,OAAAzF,GAAA0H,GAAAF,EACAxH,EAEAyF,OAOAI,EAAAhC,EAAA,WACA,MAAAY,GAAA,SAAAkD,GACA,MAAA3D,GAAA,SAAA4D,GACA,MAAAD,GAAAC,IAAA,IACAlB,EAAA,SAAAkB,GACA,MAAAD,IAAAC,EAAAA,IACA7B,EAAA,EAAA,cACAA,EAAA,EAAA,eAEAd,EAAA,SAAA4C,GACA,GAAA7B,EACA,IAAA,kBAAA6B,GACA,MAAA,OAAAA,EAAA9D,EAAAkD,UACAY,EAEAhE,EAAAgE,EAEA,KAAA7B,EAAA6B,EAAAC,eAAA/F,OAAAiE,IAAA+B,OACA,MAAAlE,GAAA,WACA,GAAA7D,EAEA,OADAA,GAAA,GACA4D,EAAA,WACA,QAAA5D,EAAA6H,EAAAxH,OACAwH,EAAA7H,GAEAyF,KAIA,IAAA,MAAAoC,EAAA9D,EAAAkD,UACA,MAAApD,GAAA,WACA,GAAAuD,EAEA,OADAA,GAAAS,EAAA9D,EAAAkD,YACArD,EAAA,WACA,GAAAlE,EAEA,OADAA,GAAA0H,EAAAC,OACA3H,EAAA6H,KACA9B,EAEA/F,EAAA4H,SAKA,MAAAxD,GAAA,+CAGAU,EAAA,SAAA4C,GACA,MAAA,OAAAA,EAAArD,EAAAkD,WAAAG,YAAArF,OACA4E,EAAAnB,EAAA4B,GAEAvD,EAAA,WACA,GAAA7D,GAAAgI,CAGA,OAFAA,GAAAC,OAAAD,KAAAZ,GACApH,EAAA,GACA4D,EAAA,WACA,GAAArD,EACA,SAAAP,EAAAgI,EAAA3H,QACAE,EAAAyH,EAAAhI,GAAAoH,EAAA7G,IAEAkF,OAMAQ,EAAA,SAAA0B,GACA,MAAA9D,GAAA,WACA,MAAAD,GAAA,WACA,MAAA+D,QAIA5C,EAAA,SAAAsC,EAAAa,GACA,MAAArE,GAAA,WACA,GAAAsE,EAEA,OADAA,GAAAD,EACAtE,EAAA,WACA,GAAAlE,EAGA,OAFAA,GAAAyI,EACAA,EAAAd,EAAAc,GACAzI,OAIAoG,EAAA,WACA,GAAAsC,GAAAC,EAAAC,CASA,OARAA,GAAAC,KAAAC,GAAA,EACAJ,EAAA,SAAAT,GAEA,MADAA,GAAA,IAAAY,KAAAE,IAAAd,EAAAW,GACAX,EAAAY,KAAAG,MAAAf,IAEAU,EAAA,SAAAM,GACA,MAAA5D,GAAAqD,EAAAA,EAAAO,KAEA,SAAAC,GACA,GAAArI,GAAAyF,EAAA6C,EAAAC,EAAAnJ,EAAAgJ,CACA,OAAA,OAAAC,EACAP,EAAA,GACA,gBAAAO,GACAP,EAAAO,IAEAD,EAAA,OAAA3C,EAAA4C,EAAAD,MAAA3C,EAAA,EACA8C,EAAAF,EAAA7C,MACA,MAAA+C,EACA,gBAAAA,GACA3D,EAAA,SAAAwC,GACA,MAAAY,MAAAG,MAAAf,EAAAmB,KACAT,EAAAM,KAEAE,GAAAC,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAA,GAAAnJ,EAAAkJ,EAAA,GAAAtI,EAAAsI,EAAA,GACA1D,EAAA,SAAAwC,GACA,MAAAhI,GAAA4I,KAAAG,MAAAf,EAAApH,KACA8H,EAAAM,KAGAN,EAAAM,QAKAhD,EAAA,WACA,GAAAoD,EAuBA,OAtBAA,GAAA,SAAApB,GACA,GAAAxH,GAAA6I,EAAAtJ,EAAAsG,EAAA6C,CAGA,KAFAlB,EAAAA,EAAAlE,MAAA,GACAtD,EAAAwH,EAAAtH,OAAA,EACAF,GAAA,GAAAwH,EAAAxH,IAAAwH,EAAAxH,EAAA,MACAA,CAEA,IAAA,IAAAA,EAAA,CAEA,IADA6I,EAAArB,EAAAtH,OAAA,EACA2I,EAAA7I,EAAA,GAAAwH,EAAAqB,IAAArB,EAAAxH,EAAA,MACA6I,CAEAhD,IAAA2B,EAAAxH,EAAA,GAAAwH,EAAAqB,IAAArB,EAAAqB,GAAAhD,EAAA,GAAA2B,EAAAxH,EAAA,GAAA6F,EAAA,GAGA,IADAtG,EAAAiI,EAAAtH,OAAA,EACAX,EAAAS,GACA0I,GAAAlB,EAAAjI,GAAAiI,EAAAxH,IAAAwH,EAAAxH,GAAA0I,EAAA,GAAAlB,EAAAjI,GAAAmJ,EAAA,KACA1I,IACAT,CAEA,OAAAiI,IAEA,SAAAE,GACA,GAAAoB,EAEA,OADAA,GAAA/D,EAAA2C,GACA,IAAAoB,EAAA5I,OACAoF,EAEApB,EAAA4E,EAAAxF,MAAA,IAAAiD,EAAA,SAAAwC,GACA,MAAAC,MAAAD,KAAAC,KAAAF,KACA3E,EAAA,GAAAS,EAAAgE,EAAAE,UAIArD,EAAA,SAAAiC,GACA,GAAAuB,EACA,OAAA,KAAA/I,EAAAwH,SAGAuB,EAAAxD,EAAAtB,EAAA,GAAAuD,IACA7G,GAAAoI,EAAAjE,EAAAd,EAAAS,EAAA+C,KAAAuB,OAGA3C,EAAA,SAAAhH,GACA,MAAA,UAAAoI,GACA,MAAAhE,GAAA,WACA,GAAAwF,GAAAC,CAGA,OAFAA,GAAArE,EAAA4C,GAAA9D,EAAAkD,YACAoC,EAAA,GACAzF,EAAA,WACA,QAAAyF,EAAA5J,EACA6J,IAEA7D,QAMAiB,EAAA,SAAA6C,GACA,MAAA,UAAA1B,GACA,MAAAhE,GAAA,WACA,GAAAyF,EAEA,OADAA,GAAArE,EAAA4C,GAAA9D,EAAAkD,YACArD,EAAA,WACA,GAAA+D,EACA,QAAAA,EAAA2B,OAAA7D,GAAA8D,EAAA5B,GACAA,EAEAlC,QAMAnB,EAAA,SAAA7E,GACA,MAAA,UAAAoI,GACA,MAAAhE,GAAA,WACA,GAAA2F,GAAAxJ,EAAAsJ,EAAAG,EAAAzD,CAGA,KAFAsD,EAAArE,EAAA4C,GAAA9D,EAAAkD,YACAuC,GAAA,EACAxJ,EAAAyJ,EAAA,EAAAzD,EAAAvG,GAAAuG,GAAA,EAAAA,EAAAyD,EAAAA,EAAAzD,KACAwD,IAAAA,EAAAF,MAAA7D,IACA+D,GAFAxJ,EAAAgG,GAAA,IAAAyD,IAAAA,GAMA,MAAAD,GACA,WACA,MAAA/D,IAGA6D,MAKA/E,EAAA,SAAAgF,GACA,MAAA,UAAA1B,GACA,MAAAhE,GAAA,WACA,GAAAyF,GAAA3B,CAEA,KADA2B,EAAArE,EAAA4C,GAAA9D,EAAAkD,YACAsC,EAAA5B,EAAA2B,MAAA3B,IAAAlC,IAGA,MAAA7B,GAAA,WACA,GAAA8F,GAAA1D,CAEA,OADAA,IAAA2B,EAAA2B,KAAAI,EAAA1D,EAAA,GAAA2B,EAAA3B,EAAA,GACA0D,QAKArF,EAAA,SAAAsD,GACA,MAAA,UAAAE,GACA,MAAAhE,GAAA,WACA,GAAAyF,EAEA,OADAA,GAAA,KACA1F,EAAA,WACA,MAAA,QAAA0F,GACAA,EAAArE,EAAA4C,GAAA9D,EAAAkD,YACAU,GAEA2B,UAMAnE,EAAA,SAAAvG,GACA,MAAA,UAAAiJ,GACA,MAAAhE,GAAA,WACA,GAAAyF,EAEA,OADAA,GAAArE,EAAA4C,GAAA9D,EAAAkD,YACArD,EAAA,WACA,GAAA+D,EACA,QAAAA,EAAA2B,OAAA7D,EACA7G,EAAA+I,GAEAlC,QAMAhB,EAAA,SAAA8E,GACA,MAAA,UAAA1B,GACA,MAAAhE,GAAA,WACA,GAAAyF,EAEA,OADAA,GAAArE,EAAA4C,GAAA9D,EAAAkD,YACArD,EAAA,WAEA,IADA,GAAA+D,IACAA,EAAA2B,OAAA7D,IAAA8D,EAAA5B,KAGA,MAAAA,SAKAxB,EAAA,SAAAwD,GACA,MAAA,UAAAjK,GACA,MAAA,UAAAmI,GACA,MAAAhE,GAAA,WACA,GAAAyF,EAEA,OADAA,GAAArE,EAAA4C,GAAA9D,EAAAkD,YACArD,EAAA,WACA,GAAAgG,GAAAjC,CAGA,OAFAiC,GAAAlK,EACAA,GAAAiI,EAAA2B,OAAA7D,EAAAkE,EAAAjK,GAAAiI,GAAAlC,EACAmE,SAMAtD,EAAA,SAAA7G,GACA,MAAA,GAAAA,EACAgG,EAEA,SAAAoC,GACA,MAAAvD,GAAA7E,EAAA,GAAAoE,EAAA,WACA,GAAAgG,GAAAP,CAGA,OAFAA,GAAArE,EAAA4C,GAAA9D,EAAAkD,YACA4C,KACAjG,EAAA,WACA,GAAA+D,EACA,QAAAA,EAAA2B,OAAA7D,EACAA,GAEAoE,EAAA5H,KAAA0F,GACAkC,EAAAxJ,OAAAZ,GACAoK,EAAAC,MAAA,GAEAD,EAAApG,MAAA,WAMA8C,EAAA,SAAA9G,GACA,MAAA,UAAAoI,GACA,MAAAvB,GAAA7G,GAAAuB,GAAA6G,EAAApB,EAAAhH,EAAA,GAAAoI,QAGA3B,EAAA,SAAA2B,GACA,GAAA7B,EACA,QAAAA,EAAA6B,EAAAC,eAAA/F,OAAAiE,IAAA+B,OACAlE,EAAA,WACA,GAAA7D,EAEA,OADAA,GAAA6H,EAAAxH,OACAuD,EAAA,WACA,QAAA5D,GAAA,EACA6H,EAAA7H,GAEAyF,MAKAP,EAAAD,EAAA4C,IAAA3B,WAGAE,EAAA,SAAAyB,GACA,GAAAoB,EAEA,OADAA,GAAA/D,EAAAD,EAAA4C,IACAoB,EAAA7C,KAAA,SAAAtG,EAAAiK,GACA,OAAAjK,EAAAiK,IAAAA,EAAAjK,MAGAuG,EAAA,SAAAzH,GACA,MAAA,UAAAiJ,GACA,GAAAoB,EAEA,OADAA,GAAA/D,EAAAD,EAAA4C,IACAoB,EAAA7C,KAAA,SAAAtG,EAAAiK,GACA,GAAAC,GAAAC,CACA,SAAAD,EAAApL,EAAAkB,KAAAmK,EAAArL,EAAAmL,MAAAE,EAAAD,OAIAnF,EAAA,SAAAjG,GACA,MAAA,UAAAiJ,GACA,GAAAtH,GAAA2J,EAAAzJ,CAUA,OATAyJ,MACAvF,EAAAkD,EAAA,SAAAF,GACA,GAAAwC,EAKA,OAJAA,GAAAvL,EAAA+I,GACA,MAAAuC,EAAAC,KACAD,EAAAC,OAEAD,EAAAC,GAAAlI,KAAA0F,KAEA,WACA,GAAAyC,EACAA,KACA,KAAA7J,IAAA2J,GACAzJ,EAAAyJ,EAAA3J,GACA6J,EAAAnI,KAAAxB,EAEA,OAAA2J,QAIA1E,EAAA,SAAA9G,GACA,MAAA,UAAAiJ,GACA,GAAAqC,EAOA,OANAA,WACAvF,EAAAkD,EAAA,SAAAF,GACA,GAAAwC,EAEA,OADAA,IAAAvL,EAAA+I,GAAA,EACAuC,EAAAC,GAAAlI,KAAA0F,KAEAuC,IAGAlJ,EAAA,SAAAqJ,GAKA,MAJAA,GAAA5F,EAAA,SAAAkD,GACA,GAAA3B,EACA,QAAAA,EAAA2B,EAAAG,eAAA/F,OAAAiE,IAAA+B,QAAAJ,EAAAtH,OAAA,IACAgK,GACAxG,EAAA,WACA,GAAAyF,GAAAzB,EAAAyC,CAIA,OAHAA,GAAArF,EAAAoF,GAAAtG,EAAAkD,YACAY,EAAAyC,IACAhB,EAAArE,EAAA4C,GAAA9D,EAAAkD,YACArD,EAAA,WACA,GAAA+D,EACA,QAAAA,EAAA2B,OAAA7D,EACAkC,GACAE,EAAAyC,OAAA7E,GACA6D,EAAArE,EAAA4C,GAAA9D,EAAAkD,eAGAxB,OAKAO,EAAA,WACA,GAAAwD,GAAA7C,EAAAC,CA+EA,OA9EA4C,GAAA,SAAAP,GACA,GAAAQ,GAAAc,EAAA5C,CACA,KAAA8B,EAAA,EAAAc,EAAAtB,EAAA5I,OAAAkK,EAAAd,EAAAA,IAEA,GADA9B,EAAAsB,EAAAQ,GACA9B,IAAAlC,EACA,OAAA,CAGA,QAAA,GAEAkB,EAAA,WACA,GAAA0D,EAEA,OADAA,GAAA,GAAArI,UAAA3B,OAAAoD,EAAArD,KAAA4B,UAAA,MACA6B,EAAA,WACA,GAAA2G,GAAA3C,CAUA,OATA2C,GAAA,WACA,GAAAf,GAAAc,EAAAH,CAEA,KADAA,KACAX,EAAA,EAAAc,EAAAF,EAAAhK,OAAAkK,EAAAd,EAAAA,IACA5B,EAAAwC,EAAAZ,GACAW,EAAAnI,KAAAgD,EAAA4C,GAAA9D,EAAAkD,YAEA,OAAAmD,MAEAxG,EAAA,WACA,GAAA0F,GAAAjC,CAUA,OATAA,GAAA,WACA,GAAAoC,GAAAc,EAAAH,CAEA,KADAA,KACAX,EAAA,EAAAc,EAAAC,EAAAnK,OAAAkK,EAAAd,EAAAA,IACAH,EAAAkB,EAAAf,GACAW,EAAAnI,KAAAqH,IAEA,OAAAc,MAEAZ,EAAAnC,GACA5B,EAEA4B,OAKAT,EAAA,SAAAhI,GACA,MAAA,YACA,GAAAyL,EAEA,OADAA,GAAA,GAAArI,UAAA3B,OAAAoD,EAAArD,KAAA4B,UAAA,MACA6B,EAAA,WACA,GAAA2G,GAAA3C,CAUA,OATA2C,GAAA,WACA,GAAAf,GAAAc,EAAAH,CAEA,KADAA,KACAX,EAAA,EAAAc,EAAAF,EAAAhK,OAAAkK,EAAAd,EAAAA,IACA5B,EAAAwC,EAAAZ,GACAW,EAAAnI,KAAAgD,EAAA4C,GAAA9D,EAAAkD,YAEA,OAAAmD,MAEAxG,EAAA,WACA,GAAA0F,GAAAjC,CAUA,OATAA,GAAA,WACA,GAAAoC,GAAAc,EAAAH,CAEA,KADAA,KACAX,EAAA,EAAAc,EAAAC,EAAAnK,OAAAkK,EAAAd,EAAAA,IACAH,EAAAkB,EAAAf,GACAW,EAAAnI,KAAAqH,IAEA,OAAAc,MAEAZ,EAAAnC,GACA5B,EAEA7G,EAAAuD,MAAA,KAAAkF,UAOAV,IAAAA,EACAC,QAAAA,MAEAD,EAAAX,EAAAW,IAAAC,EAAAZ,EAAAY,QACAxC,EAAA,WACA,GAAAqG,GAAAC,CAyBA,OAxBAA,GAAA,SAAAC,GACA,GAAAC,EAEA,OADAA,GAAAD,EAAAtK,OAAA,EACA,SAAAwK,GACA,GAAA7K,EAEA,KADAA,EAAA4K,MACAC,EAAA7K,GAAA2K,EAAA3K,IAAA,GAAAA,IACA6K,EAAA7K,KAAA,CAEA,OAAA6K,KAGAJ,EAAA,SAAAK,GACA,GAAAzJ,EAEA,OADAA,GAAAyJ,EAAAzK,OACA,SAAAwK,GACA,GAAA7K,GAAAyJ,EAAAZ,EAAAuB,CAEA,KADAA,KACApK,EAAAyJ,EAAA,EAAAZ,EAAAxH,EAAAwH,GAAA,EAAAA,EAAAY,EAAAA,EAAAZ,EAAA7I,EAAA6I,GAAA,IAAAY,IAAAA,EACAW,EAAAnI,KAAA6I,EAAA9K,GAAA6K,EAAA7K,IAEA,OAAAoK,KAGA,WACA,GAAAC,EAEA,OADAA,GAAA,GAAArI,UAAA3B,OAAAoD,EAAArD,KAAA4B,UAAA,MACA6B,EAAA,WACA,GAAAkH,GAAA/K,EAAAgL,EAAAvB,EAAApI,EAAAkJ,EAAAI,EAAAlK,EAAAoH,CAkBA,KAjBAwC,EAAA,WACA,GAAAZ,GAAAc,EAAAH,CAEA,KADAA,KACAX,EAAA,EAAAc,EAAAF,EAAAhK,OAAAkK,EAAAd,EAAAA,IACA5B,EAAAwC,EAAAZ,GACAW,EAAAnI,KAAAiD,EAAA2C,GAEA,OAAAuC,MAEAO,EAAA,WACA,GAAAlB,GAAAZ,EAAAuB,CAEA,KADAA,KACApK,EAAAyJ,EAAA,EAAAZ,EAAAwB,EAAAhK,OAAAwI,GAAA,EAAAA,EAAAY,EAAAA,EAAAZ,EAAA7I,EAAA6I,GAAA,IAAAY,IAAAA,EACAW,EAAAnI,KAAAoI,EAAArK,GAAAK,OAEA,OAAA+J,MAEAX,EAAA,EAAAc,EAAAI,EAAAtK,OAAAkK,EAAAd,EAAAA,IAEA,GADApI,EAAAsJ,EAAAlB,GACA,IAAApI,EACA,MAAAoE,EAaA,OAVAuF,GAAAN,EAAAC,GACAI,EAAAN,EAAAJ,GACA5J,EAAA,WACA,GAAAb,GAAAiJ,EAAAuB,CAEA,KADAA,KACApK,EAAAJ,EAAA,EAAAiJ,EAAAwB,EAAAhK,OAAAwI,GAAA,EAAAA,EAAAjJ,EAAAA,EAAAiJ,EAAA7I,EAAA6I,GAAA,IAAAjJ,IAAAA,EACAwK,EAAAnI,KAAA,EAEA,OAAAmI,MAEAxG,EAAA,WACA,GAAAlE,EACA,OAAAe,GAAA,GAAAkK,EAAA,IACAjL,EAAAqL,EAAAtK,GACAuK,EAAAvK,GACAf,GAEA+F,UAMAP,EAAA,SAAA2C,GACA,GAAAT,GAAA3H,EAAA2K,EAAAa,EAAAtD,CACA,IAAAE,YAAA9F,OACA,MAAA8F,EACA,IAAA,kBAAAA,GAAA,CAGA,IAFAT,EAAAS,EAAA9D,EAAAkD,YACAmD,MACAzC,EAAAP,OAAA3B,GACA2E,EAAAnI,KAAA0F,EAEA,OAAAyC,GACA,GAAA,MAAAvC,EAAA9D,EAAAkD,UAAA,CAGA,IAFAG,EAAAnC,EAAA4C,GAAA9D,EAAAkD,YACAgE,MACAtD,EAAAP,OAAA3B,GACAwF,EAAAhJ,KAAA0F,EAEA,OAAAsD,GACA,GAAA,gBAAApD,GAEA,MADApI,GAAAoI,EACA,SAAAA,GACA,MAAA3C,GAAAuB,EAAAhH,GAAAoI,IAGA,MAAA/D,GAAA,+CAGAgB,EAAA,SAAA+C,GACA,GAAAyB,GAAA5J,EAAAmJ,CACA,KAAAA,EAAAhB,EAAAC,eAAA/F,OAAA8G,IAAAd,OAAA,CACA,GAAAF,EAAAxH,OAAA,EACA,MAAAwH,GAAA,EAEA,MAAA/D,GAAA,8BAIA,GADAwF,EAAArE,EAAA4C,GAAA9D,EAAAkD,aACAvH,EAAA4J,OAAA7D,EACA,MAAA/F,EAEA,MAAAoE,GAAA,+BAIA0C,EAAAlC,EAAA,GACAU,EAAA,SAAA6C,GACA,GAAAyB,GAAA5J,EAAAmJ,EAAAlB,CACA,KAAAkB,EAAAhB,EAAAC,eAAA/F,OAAA8G,IAAAd,OAAA,CACA,GAAAF,EAAAxH,OAAA,EACA,MAAAwH,GAAAA,EAAAxH,OAAA,EAEA,MAAAyD,GAAA,8BAKA,IAFAwF,EAAArE,EAAA4C,GAAA9D,EAAAkD,YACAvH,EAAA+F,GACAkC,EAAA2B,OAAA7D,GACA/F,EAAAiI,CAEA,IAAAjI,IAAA+F,EACA,MAAA/F,EAEA,MAAAoE,GAAA,+BAIAzD,EAAA,SAAAwH,GACA,GAAAyB,GAAA5J,EAAAmJ,EAAAlB,CACA,KAAAkB,EAAAhB,EAAAC,eAAA/F,OAAA8G,IAAAd,OACA,MAAAF,GAAAxH,MAIA,KAFAiJ,EAAArE,EAAA4C,GAAA9D,EAAAkD,YACAvH,EAAA,GACAiI,EAAA2B,OAAA7D,KACA/F,CAEA,OAAAA,IAGAgF,EAAA,SAAAiF,GACA,MAAA,UAAAzB,GACA,MAAA,UAAAL,GACA,GAAAyB,GAAA5J,EAAAiI,CAGA,KAFAjI,EAAAwI,EACAoB,EAAArE,EAAA4C,GAAA9D,EAAAkD,aACAU,EAAA2B,OAAA7D,GACA/F,EAAAiK,EAAAjK,GAAAiI,EAEA,OAAAjI,MAIAwE,EAAA,SAAAgH,GACA,MAAA,UAAArD,GACA,GAAAT,GAAAkC,EAAA5J,CAEA,IADA4J,EAAArE,EAAA4C,GAAA9D,EAAAkD,aACAvH,EAAA4J,OAAA7D,EACA,MAAA,KAEA,OAAA2B,EAAAkC,OAAA7D,GACA/F,EAAAwL,EAAA9D,EAAA1H,GAAA0H,EAAA1H,CAEA,OAAAA,KAGA2F,EAAA,SAAAzG,GACA,MAAAsF,GAAA,SAAApE,EAAAiK,GACA,MAAAnL,GAAAkB,GAAAlB,EAAAmL,MAGAxE,EAAA,SAAA3G,GACA,MAAAsF,GAAA,SAAApE,EAAAiK,GACA,MAAAnL,GAAAkB,GAAAlB,EAAAmL,MAGA3E,EAAAlB,EAAA,SAAAyD,EAAAwC,GACA,MAAAxC,GAAAwC,IAEA7E,EAAApB,EAAA,SAAAyD,EAAAwC,GACA,MAAAA,GAAAxC,IAEA3D,EAAA,SAAApF,GAMA,MALA,kBAAAA,KACAA,EAAA,SAAA+I,GACA,MAAAA,KAAA/I,IAGA,SAAAiJ,GACA,GAAAyB,GAAA3B,CAEA,KADA2B,EAAArE,EAAA4C,GAAA9D,EAAAkD,aACAU,EAAA2B,OAAA7D,GACA,IAAA7G,EAAA+I,GACA,OAAA,CAGA,QAAA,IAGA1D,EAAA,SAAArF,GACA,GAAAuM,EAIA,OAHAA,GAAAnH,EAAA,SAAA2D,GACA,OAAA/I,EAAA+I,KAEA,SAAAE,GACA,OAAAsD,EAAAtD,KAGAjD,EAAA,SAAAwG,GACA,GAAA1L,EASA,OARAA,MACAiF,EAAAyG,EAAA,SAAAC,GACA,GAAA9K,GAAAE,CAEA,OADAF,GAAA8K,EAAA,GAAA5K,EAAA4K,EAAA,GACA,SAAA5K,EACAf,EAAAa,GAAAE,EADA,SAIAf,GAEAyE,EAAA,WACA,MAAAA,IAEAA,EAAA+C,SAAA,WACA,MAAA,iBAEAvC,EAAA,SAAAkD,EAAAyD,EAAAC,GACA,GAAAjC,GAAA3B,CAEA,KADA2B,EAAArE,EAAA4C,GAAA9D,EAAAkD,aACAU,EAAA2B,OAAA7D,GACA6F,EAAA3D,EAAA4D,KAAApH,IAIA,MAAAoH,IAEAtD,OAAAuD,iBAAA7G,GACA8G,SACAC,UAAA,EACAC,cAAA,EACAC,YAAA,EACAtE,MAAAnD,MAIAsB,IAAAA,EACA5B,SAAAA,EACAD,SAAAA,EACAG,OAAAA,EACAyB,SAAAA,EACAO,MAAAA,EACAF,OAAAA,EACAZ,KAAAA,EACAT,UAAAA,EACAyB,OAAAA,EACAlB,QAAAA,EACAe,QAAAA,EACAH,aAAAA,EACAC,SAAAA,EACAvB,KAAAA,EACAc,IAAAA,EACAV,OAAAA,EACAgC,KAAAA,EACAC,UAAAA,EACAF,KAAAA,EACAlC,KAAAA,EACAC,UAAAA,EACA4B,MAAAA,EACAG,OAAAA,EACAC,QAAAA,EACAL,QAAAA,EACAE,KAAAA,EACAC,OAAAA,EACAxB,QAAAA,EACAa,UAAAA,EACA1E,OAAAA,EACA2F,IAAAA,EACAC,QAAAA,EACAxC,SAAAA,EACAc,KAAAA,EACAJ,KAAAA,EACAE,KAAAA,EACA3E,OAAAA,EACAqE,MAAAA,EACAR,KAAAA,EACAkB,QAAAA,EACAE,QAAAA,EACAD,UAAAA,EACAE,UAAAA,EACAvB,IAAAA,EACAC,IAAAA,EACAW,SAAAA,EACAD,QAAAA,IAIA7F,EAAAD,QAAA2E,GACAO,OAAA,mBAAAA,SAAA,OAAAA,OAAAA,QACAkD,SAAA,YAIA7G,KAAAf,WHgHMwM,GAAG,SAAS9L,EAAQjB,EAAOD,GI3iCjC,GAAA2E,GACAC,KAAAA,KAEAD,GAAA,SAAAE,GACA,GAAAoI,GAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA1D,EAAAhE,EAAA2H,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,CA4HA,OA3HA3I,GAAAhB,EAAAgB,MACA8H,EAAA,SAAA7E,GACA,MAAAA,IAEA0E,EAAA,SAAAiB,GACA,MAAA,UAAAhL,GACA,MAAAgL,GAAAC,QAAA,aAAA,SAAA5N,EAAAY,GACA,GAAAyF,EACA,OAAA,QAAAA,EAAA1D,EAAA/B,IAAAyF,EAAArG,MAIAyM,EAAA,SAAAxN,GACA,MAAA,UAAA+I,GACA,MAAA,UAAAwC,GACA,MAAAvL,GAAAuL,GAAAxC,MAIAqE,EAAA,SAAApN,GACA,MAAA,UAAAK,GACA,MAAA,UAAA0I,GACA,MAAA/I,GAAAK,EAAA0I,OAIAsE,EAAA,SAAArN,GACA,MAAA,UAAAkB,GACA,MAAA,UAAAiK,GACA,MAAAnL,GAAAkB,EAAAiK,MAIAmC,EAAA,SAAAtN,GACA,MAAA,UAAAkB,GACA,MAAA,UAAAiK,GACA,MAAA,UAAAV,GACA,MAAAzK,GAAAkB,EAAAiK,EAAAV,OAKA8D,EAAA,SAAAvO,GACA,MAAA,UAAAkB,EAAAiK,GACA,MAAAnL,GAAAkB,GAAAiK,KAGAqD,EAAA,SAAAxO,GACA,MAAA,UAAAkB,EAAAiK,EAAAV,GACA,MAAAzK,GAAAkB,GAAAiK,GAAAV,KAGAwD,EAAA,SAAAjO,GACA,MAAA,UAAAqK,GACA,MAAArK,GAAAuD,MAAA,KAAA8G,KAGAoE,EAAA,SAAAzO,GACA,MAAA,YACA,GAAAqK,EAEA,OADAA,GAAA,GAAAjH,UAAA3B,OAAAoD,EAAArD,KAAA4B,UAAA,MACApD,EAAAqK,KAGAgE,EAAA,SAAAhE,GACA,MAAA,UAAAjJ,GACA,MAAAiJ,GAAAjJ,KAGA8M,EAAA,SAAAU,GACA,MAAA,UAAAC,GACA,MAAAA,GAAAD,KAGArB,EAAA,SAAA/E,GACA,MAAA,UAAAO,GACA,MAAAA,KAAAP,IAGAwF,EAAA,SAAAxF,GACA,MAAA,UAAAO,GACA,MAAAA,KAAAP,IAGAsF,EAAA,SAAAtF,GACA,MAAA,UAAAO,GACA,MAAAP,GAAAO,IAGA4E,EAAA,SAAAnF,GACA,MAAA,UAAAO,GACA,MAAAA,GAAAP,IAGAqF,EAAA,SAAArF,GACA,MAAA,UAAAO,GACA,MAAAP,IAAAO,IAGA2E,EAAA,SAAAlF,GACA,MAAA,UAAAO,GACA,MAAAA,IAAAP,IAGA2F,EAAA,SAAApF,GACA,MAAA,UAAAwC,GACA,MAAAxC,GAAAwC,IAGAwC,EAAA,SAAAhF,GACA,MAAA,UAAAwC,GACA,MAAAxC,GAAAwC,IAGA2B,EAAAvD,KAAAuD,IACApD,EAAAH,KAAAG,MACAqD,EAAAxD,KAAAwD,KACAiB,EAAA,SAAAvN,GACA,MAAA,UAAAkI,GACA,MAAA+F,YAAA/F,EAAAgG,YAAAlO,MAGAyN,EAAAxI,EAAAqI,GAAA,IAEAP,SAAAA,EACAH,OAAAA,EACAD,KAAAA,EACAJ,QAAAA,EACAC,OAAAA,EACAC,OAAAA,EACAiB,SAAAA,EACAC,SAAAA,EACAP,KAAAA,EACAQ,OAAAA,EACAJ,KAAAA,EACAH,MAAAA,EACAX,MAAAA,EACAS,SAAAA,EACAF,SAAAA,EACAD,UAAAA,EACAF,YAAAA,EACAD,aAAAA,EACAS,KAAAA,EACAJ,MAAAA,EACAb,IAAAA,EACApD,MAAAA,EACAqD,KAAAA,EACAiB,QAAAA,EACAE,IAAAA,IAIApO,EAAAD,QAAA2E,GACAkB,MAAA3E,EAAA,aAAA2E,UAIAkJ,YAAA,IAAAC,GAAA,SAAA9N,EAAAjB,EAAAD,GClKA,GAAAiP,GAAAC,EAAAC,EAAA/I,EAAAgJ,EAAAC,CAEAA,GAAAnO,EAAA,WAEA+N,EAAA/N,EAAA,YAEAkF,EAAAlF,EAAA,aAEAiO,EAAAjO,EAAA,WAEAgO,EAAAhO,EAAA,gBAEAkO,EAAAlO,EAAA,iBAEAjB,EAAAD,QAAAqP,EAAAC,WAAAD,EAAAJ,EAAA7I,EAAA+I,EAAAD,EAAAE,KAGAG,WAAA,EAAAC,eAAA,EAAAC,UAAA,EAAAC,gBAAA,EAAAC,UAAA,EAAAZ,YAAA,IAAAa,GAAA,SAAA1O,EAAAjB,EAAAD,GCjBA,GAAA2E,EAEAA,GAAA,WACA,GAAAkL,GAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA5F,EAAA6F,EAAAC,EAAAC,EAAAC,EAAAC,CAuEA,OAtEAL,GAAA,SAAApP,EAAA0P,GACA,GAAA3P,EACA,OAAA,gBAAAC,IACAD,EAAA4P,SAAA3P,EAAA0P,GACA,MAAA1P,EAAA8D,OAAA/D,IAAA4P,SAAA3P,EAAA8D,MAAA,EAAA,IAAA4L,GACA3P,EAEA,MAGA4P,SAAA,EAAA3P,IAGAkP,EAAA,SAAAlP,GACA,MAAA,uCAAA4P,KAAA5P,GACA+N,WAAA/N,GAEA,MAGAyP,EAAA,SAAAzH,EAAA0H,GACA,MAAA1H,GAAAT,SAAAmI,IAEAX,EAAA,SAAA/G,GACA,MAAAA,MAAA,GAAAA,KAAA,EACAA,EAEA,MAGAmH,EAAA,SAAAnH,GACA,MAAAA,GAAAT,SAAA,KAEAgI,EAAA,SAAA7F,GACA,MAAAA,GAAAmG,cAEAb,EAAA,SAAAhH,GACA,MAAAI,QAAA0H,aAAA9H,IAEAwB,EAAA,SAAA/B,GACA,MAAAsI,MAAAC,UAAAvI,IAEA4H,EAAA,SAAAY,EAAAC,GACA,MAAA,UAAAzI,GACA,MAAAsI,MAAAC,UAAAvI,EAAAyI,EAAAD,KAGAT,EAAA,SAAA/H,GACA,MAAAsI,MAAAC,UAAAvI,EAAA,KAAA,IAEAwH,EAAA,WACA,GAAAkB,EAYA,OAXAA,GAAA,SAAAvP,EAAAE,GACA,GAAA,gBAAAA,GAOA,MAAAA,EANA,KACA,MAAAiP,MAAAK,MAAAtP,GACA,MAAAuP,GACA,MAAAvP,KAMA,SAAA2G,GACA,MAAAsI,MAAAC,UAAAvI,EAAA0I,EAAA,OAGAb,EAAA,SAAAtP,GACA,MAAA+P,MAAAK,MAAApQ,KAGAoP,MAAAA,EACAF,QAAAA,EACAH,KAAAA,EACAU,IAAAA,EACAN,IAAAA,EACAI,IAAAA,EACAP,IAAAA,EACAxF,KAAAA,EACA6F,SAAAA,EACAG,WAAAA,EACAP,SAAAA,EACAK,IAAAA,IAIAnQ,EAAAD,QAAA2E,SAGAyM,GAAA,SAAAlQ,EAAAjB,EAAAD,GC7FA,GAAA2E,GACAC,KAAAA,KAEAD,GAAA,WACA,GAAA0M,GAAAC,EAAAC,EAAAC,EAAAC,CA2DA,OA1DAH,GAAA,SAAA1Q,GACA,GAAA6J,EAQA,OAPAA,GAAA,SAAA1K,EAAAa,EAAAC,GACA,MAAA,KAAAD,EACAC,EAEA4J,EAAA1K,EAAAa,EAAA,EAAAb,EAAAc,KAGA,SAAAd,GACA,MAAA,UAAA+I,GACA,MAAA2B,GAAA1K,EAAAa,EAAA,EAAAkI,MAIAuI,EAAA,SAAAtR,GACA,MAAA,UAAA+I,GACA,MAAAA,GAAAA,IACA,SAAAA,GACA,MAAA/I,GAAA,SAAAuL,GACA,MAAAxC,GAAAA,GAAAwC,QAIAmG,EAAA,SAAA1R,EAAA2R,GACA,GAAAC,EASA,OARA,OAAAD,IACAA,EAAA,WACA,GAAAzO,EAEA,OADAA,GAAA,GAAAE,UAAA3B,OAAAoD,EAAArD,KAAA4B,UAAA,MACAmH,KAAArH,KAGA0O,KACA,WACA,GAAA1O,GAAA2O,EAAAC,EAAAhR,CAIA,OAHAoC,GAAA,GAAAE,UAAA3B,OAAAoD,EAAArD,KAAA4B,UAAA,MACA0O,EAAAH,EAAApO,MAAA,KAAAL,GACA2O,EAAAD,EAAAE,GACA,MAAAD,EACAA,GAEA/Q,EAAAd,EAAAuD,MAAA,KAAAL,GACA0O,EAAAE,GAAAhR,EACAA,KAIA0Q,EAAAF,EACAG,EAAA,SAAAM,GACA,GAAA/R,EAMA,OALAA,GAAA0R,EAAAK,EAAA,WACA,GAAA7O,EAEA,OADAA,GAAA,GAAAE,UAAA3B,OAAAoD,EAAArD,KAAA4B,UAAA,MACApD,EAAAuD,MAAA,KAAAL,QAKAqO,OAAAA,EACAD,EAAAA,EACAI,QAAAA,EACAF,IAAAA,EACAC,QAAAA,IAIAvR,EAAAD,QAAA2E,SAGAoN,GAAA,SAAA7Q,EAAAjB,EAAAD,GC3EA,GAAA2E,EAEAA,GAAA,WACA,GAAAqN,GAAAC,CAsCA,OArCAA,GAAA,SAAAC,GAIA,MAHA,OAAAA,IACAA,EAAA3B,KAEA,SAAAH,GACA,GAAA1O,GAAAE,CACA,OAAA,YACA,GAAA2J,EACAA,KACA,KAAA7J,IAAA0O,GACAxO,EAAAwO,EAAA1O,GACA,SAAAE,GACA2J,EAAAnI,KAAA+O,mBAAAzQ,GAAA,IAAAyQ,mBAAAD,EAAAtQ,IAGA,OAAA2J,MACA6G,KAAA,OAGAJ,EAAA,SAAAK,GAMA,MALA,OAAAA,IACAA,EAAA,SAAAvR,GACA,MAAAA,KAGA,SAAAyP,GACA,GAAA3B,GAAAzN,EAAAyJ,EAAAlJ,EAAAc,EAAA2E,EAAA6C,EAAAsI,EAAAxR,EAAAc,CAGA,KAFAgN,KACA5E,EAAA,OAAA7C,EAAAoJ,EAAAgC,MAAA,mBAAApL,KACAhG,EAAA,EAAAqB,EAAAwH,EAAAxI,OAAAgB,EAAArB,EAAAA,IACAL,EAAAkJ,EAAA7I,GACAmR,EAAAxR,EAAAyR,MAAA,gBAAA3H,EAAA0H,EAAA9Q,OAAA,EAAAE,EAAA4Q,EAAA1H,KAAAhJ,EAAA0Q,EAAA1H,KACAgE,EAAA4D,mBAAA9Q,IAAA2Q,EAAAG,mBAAA5Q,GAEA,OAAAgN,MAIAqD,YAAAA,EACAD,YAAAA,IAIA/R,EAAAD,QAAA2E,SAGA8N,GAAA,SAAAvR,EAAAjB,EAAAD,IR44CA,SAAW+C,GS97CX,GAAA4B,GACAC,KAAAA,KAEAD,GAAA,WACA,GAAA+N,GAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAzD,EAAA0D,EAAAC,EAAAC,EAAAC,EAAAhM,EAAAiM,EAAAC,EAAAC,CA8RA,OA7RAF,GAAA,SAAAG,GAIA,MAHAA,GAAAA,EAAA7E,QAAA,8EAAA,MACA6E,EAAAA,EAAA7E,QAAA,wEAAA,MACA6E,EAAAA,EAAA7E,QAAA,qDAAA,OAGAsE,EAAA,SAAAQ,GACA,GAAA3S,GAAA4S,EAAAC,EAAAC,CAGA,KAFAF,EAAA,IAAAD,EAAAnL,WAAA,MACAqL,EAAAN,EAAAK,GACAC,IAAAD,GACAA,EAAAC,EACAA,EAAAN,EAAAM,EAIA,OAFAC,GAAAF,EAAA/E,QAAA,kBAAA,IACA7N,EAAA8S,EAAAnS,QAAA,GAAAmS,EAAAF,GAGAJ,EAAA,WACA,OAAA,GAAAO,OAAAC,WAEAZ,EAAA,WACA,GAAAa,GAAAC,EAAAhJ,EAAAiJ,EAAAC,CAmFA,OAlFAH,GAAA,WACA,GAAAI,GAAAC,CAUA,OATAD,IAAA,mBAAA7T,SAAA,OAAAA,SAAA,mBAAA0C,IAAA,OAAAA,IAAAA,EAAAU,IAAA2Q,oBACAD,GACAE,KAAA,SACAC,IAAA,UACAC,MAAA,UACAC,OAAA,UACAC,KAAA,UACAC,UAAA,WAEAR,EAOA,SAAAS,GACA,MAAA,UAAA7T,GACA,MAAA,GAAAqT,EAAAQ,GAAA7T,EAAA,SARA,SAAA6T,GACA,MAAA,UAAA7T,GACA,MAAAA,QAWAmT,EAAA,WACA,GAAAW,GAAAC,CAcA,OAbAD,IACAE,IAAA,YACAC,EAAA,QACAC,EAAA,MACAC,EAAA,UAEAJ,EAAA,SAAA/J,GACA,MAAA,QAAAA,EACA,IAEAA,EAAA,GAAAoK,eAGA,SAAApK,GACA,GAAAqK,EAEA,OADAA,GAAAN,EAAA/J,GACAgJ,EAAAc,EAAAO,IAAAA,OAGAnB,KACAD,EAAA,SAAAjJ,GACA,GAAAsK,EAEA,OADAA,GAAA,GAAAtB,EAAA,aAAA,KAAAG,EAAAnJ,GACA,WACA,GAAA7H,GAAAoS,EAAAC,EAAAC,EAAAxV,EAAAoB,EAAAqB,EAAAgT,EAAAC,CAGA,KAFAxS,EAAA,GAAAE,UAAA3B,OAAAoD,EAAArD,KAAA4B,UAAA,MACAkS,KACAlU,EAAA,EAAAqB,EAAAS,EAAAzB,OAAAgB,EAAArB,EAAAA,IACApB,EAAAkD,EAAA9B,GACA,kBAAApB,IACAwV,EAAAvC,EAAAjT,GACAyV,EAAAnC,IACAiC,EAAAvV,IACA0V,EAAApC,IAAAmC,EACAH,EAAAjS,KAAAgS,EAAA,IAAAtB,EAAA,SAAAyB,GAAA,IAAAzB,EAAA,aAAA,OAAAwB,GACAG,EAAA,GACAJ,EAAAjS,KAAA0Q,EAAA,UAAA,IAAA2B,EAAA,SAGAJ,EAAAjS,KAAA,GAAAgS,EAAArV,EAQA,OALA2V,SAAA5K,GAAAxH,MAAAoS,QAAAL,GACArB,EAAA5Q,KAAAiS,GACArB,EAAAxS,QAAA,IACAwS,EAAA/I,QAEA,OAGAF,EAAAgJ,EAAA,OACAhJ,EAAAiJ,UAAAA,EACAjJ,EAAA4K,KAAA5B,EAAA,QACAhJ,EAAA6K,KAAA7B,EAAA,QACAhJ,EAAAoG,MAAApG,EAAA8K,IAAA9B,EAAA,SACAhJ,KAEA2H,EAAA,SAAA3S,EAAAkI,GACA,GAAAvH,GAAAG,EAAAsG,CACApH,aAAA+V,YACA3O,GAAApH,EAAAkI,GAAAA,EAAAd,EAAA,GAAApH,EAAAoH,EAAA,GAEA,KACAtG,EAAAd,IACA,MAAAoR,GAEA,KADAzQ,GAAAyQ,EACA/P,MAAA,4BAAA4R,EAAAjT,GAAA,oBAAAW,GAEA,GAAAG,KAAA,EAAA,CACA,GAAA,MAAAoH,GAAAA,YAAA6N,UACA,MAAA7N,GAAA+K,EAAAjT,GAEA,MAAAqB,OAAA,sBAAA,MAAA6G,EAAAA,EAAA+K,EAAAjT,OAIA4S,EAAA,SAAArR,EAAAT,EAAAoH,GACA,GAAAvH,GAAAqV,EAAA5O,EAAA6O,CACA1U,aAAAwU,YACA3O,GAAA7F,EAAAT,EAAAoH,GAAAA,EAAAd,EAAA,GAAA7F,EAAA6F,EAAA,GAAAtG,EAAAsG,EAAA,GAEA,KACA4O,EAAAzU,IACA0U,EAAAnV,IACA,MAAAsQ,GAEA,KADAzQ,GAAAyQ,EACA/P,MAAA,6BAAA4R,EAAA1R,GAAA,WAAA0R,EAAAnS,GAAA,sBAAAH,GAEA,GAAAqV,IAAAC,EAAA,CACA,GAAA,MAAA/N,GAAAA,YAAA6N,UACA,MAAA7N,GAAA+K,EAAA1R,GAAA0R,EAAAnS,GAEA,MAAAO,OAAA,2CAAA4R,EAAA1R,GAAA,oBAAA0R,EAAAnS,GAAA,oBAAAkV,EAAA,oBAAAC,EAAA,QAIApD,EAAA,SAAA7S,GACA,MAAA,UAAAuB,EAAAT,EAAAoH,GACA,GAAAvH,GAAAuV,EAAAC,EAAAH,EAAA5O,EAAA6O,CACA1U,aAAAwU,YACA3O,GAAA7F,EAAAT,EAAAoH,GAAAA,EAAAd,EAAA,GAAA7F,EAAA6F,EAAA,GAAAtG,EAAAsG,EAAA,GAEA,KACA4O,EAAAzU,IACA0U,EAAAnV,IACAoV,EAAAlW,EAAAgW,GACAG,EAAAnW,EAAAiW,GACA,MAAA7E,GAEA,KADAzQ,GAAAyQ,EACA/P,MAAA,6BAAA4R,EAAA1R,GAAA,WAAA0R,EAAAnS,GAAA,SAAAd,EAAAsE,KAAA,oBAAA3D,GAEA,GAAAuV,IAAAC,EAAA,CACA,GAAA,MAAAjO,GAAAA,YAAA6N,UACA,MAAA7N,GAAA+K,EAAA1R,GAAA0R,EAAAnS,GAAAd,EAAAsE,KAEA,MAAAjD,OAAA,2CAAA4R,EAAA1R,GAAA,oBAAA0R,EAAAnS,GAAA,oBAAAd,EAAAsE,KAAA,oBAAA4R,EAAA,oBAAAC,EAAA,SAKA/C,EAAA,SAAApT,GACA,MAAA,YACA,GAAAkD,EAGA,OAFAA,GAAA,GAAAE,UAAA3B,OAAAoD,EAAArD,KAAA4B,UAAA,MACAF,EAAA6P,EAAA7P,GACAlD,EAAAuD,MAAA,KAAAL,KAGA8P,EAAA,SAAAxG,GACA,GAAAqC,GAAAzN,EAAAO,EAAAc,EAAA2E,EAAAvF,CAEA,KADAgN,KACAzN,EAAA,EAAAqB,EAAA+J,EAAA/K,OAAAgB,EAAArB,EAAAA,IACAgG,EAAAoF,EAAApL,GAAAO,EAAAyF,EAAA,GAAAvF,EAAAuF,EAAA,GACAyH,EAAAlN,GAAAE,CAEA,OAAAgN,IAEAzH,EAAA,WACA,GAAAgP,EAyBA,OAxBAA,GAAA,SAAAC,EAAAC,GACA,GAAA3U,GAAAb,EAAAe,CACA,IAAA,IAAAyU,GAAA,MAAAD,GAAA,gBAAAA,GACA,MAAAA,EAEA,IAAAA,YAAAlT,OACArC,EAAA,WACA,GAAAM,GAAAqB,EAAA+I,CAEA,KADAA,KACApK,EAAA,EAAAqB,EAAA4T,EAAA5U,OAAAgB,EAAArB,EAAAA,IACAS,EAAAwU,EAAAjV,GACAoK,EAAAnI,KAAA+S,EAAAvU,EAAAyU,EAAA,GAEA,OAAA9K,UAEA,CACA1K,IACA,KAAAa,IAAA0U,GACAxU,EAAAwU,EAAA1U,GACAb,EAAAa,GAAAyU,EAAAvU,EAAAyU,EAAA,GAGA,MAAAxV,KAGAgS,KAAA,SAAAzC,EAAAkG,GAIA,MAHA,OAAAA,IACAA,EAAA,GAEAH,EAAA/F,EAAAkG,IAEAxD,SAAA,SAAA1C,EAAAkG,GAIA,MAHA,OAAAA,IACAA,EAAA,UAEAH,EAAA/F,EAAAkG,QAGAzD,EAAA1L,EAAA0L,KAAAC,EAAA3L,EAAA2L,SACAxD,EAAA,SAAAkB,GACA,MAAA,YACA,GAAA5B,GAAA2H,EAAApV,EAAAO,EAAAc,EAAAZ,CAEA,KADA2U,EAAA,GAAApT,UAAA3B,OAAAoD,EAAArD,KAAA4B,UAAA,MACAhC,EAAA,EAAAqB,EAAA+T,EAAA/U,OAAAgB,EAAArB,EAAAA,IAEA,GADAyN,EAAA2H,EAAApV,GACA,MAAAyN,EACA,IAAAlN,IAAAkN,GACAhN,EAAAgN,EAAAlN,GACA,MAAA8O,EAAA9O,KACA8O,EAAA9O,GAAAE,EAKA,OAAA4O,KAGA8C,EAAA,SAAA9C,GACA,MAAA,YACA,GAAA5B,GAAAzN,EAAAO,EAAAc,EAAAgU,EAAA5U,CAEA,KADA4U,EAAA,GAAArT,UAAA3B,OAAAoD,EAAArD,KAAA4B,UAAA,MACAhC,EAAA,EAAAqB,EAAAgU,EAAAhV,OAAAgB,EAAArB,EAAAA,IAEA,GADAyN,EAAA4H,EAAArV,GACA,MAAAyN,EACA,IAAAlN,IAAAkN,GACAhN,EAAAgN,EAAAlN,GACA8O,EAAA9O,GAAAE,CAIA,OAAA4O,KAGA0C,EAAA,SAAAuD,GACA,GAAA7H,GAAA8H,CAGA,OAFA9H,GAAAiE,EAAA4D,GACAC,EAAA9H,EAAA,EACA,MAAA8H,EACA,WACA,GAAAzT,GAAA+G,CAEA,OADA/G,GAAA,GAAAE,UAAA3B,OAAAoD,EAAArD,KAAA4B,UAAA,OACA,OAAA6G,EAAA4E,EAAA3L,EAAAzB,SAAAwI,EAAA0M,GAAApT,MAAA,KAAAL,IAGA,WACA,GAAAA,GAAAlD,CAGA,IAFAkD,EAAA,GAAAE,UAAA3B,OAAAoD,EAAArD,KAAA4B,UAAA,MACApD,EAAA6O,EAAA3L,EAAAzB,QACA,MAAAzB,EACA,KAAAqB,OAAA,8BAAA6B,EAAAzB,OAAA,QAEA,OAAAzB,GAAAuD,MAAA,KAAAL,MAMAgQ,IAAAA,EACAP,OAAAA,EACAC,SAAAA,EACAC,WAAAA,EACAG,KAAAA,EACAF,KAAAA,EACAC,SAAAA,EACAK,OAAAA,EACA7D,OAAAA,EACAgE,OAAAA,EACAJ,SAAAA,IAIAjT,EAAAD,QAAA2E,MTm8CGpD,KAAKf,KAAKU,EAAQ,eAElByV,SAAW,SAAS,IAAI","file":"global.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.__CoffeeMate = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n(function (global){\nvar k, mate, v;\n\nmate = require('./coffee-mate');\n\nfor (k in mate) {\n  v = mate[k];\n  global[k] = v;\n}\n\n\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./coffee-mate\":5}],2:[function(require,module,exports){\n// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            currentQueue[queueIndex].run();\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (!draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],3:[function(require,module,exports){\n(function() {\n  var this_module,\n    slice = [].slice;\n\n  this_module = function(arg) {\n    var CustomErrorType, Iterator, LazyList, ListError, Symbol, all, any, best, brk, cartProd, concat, cons, drop, dropWhile, enumerate, filter, foldl, foreach, fromList, groupOn, head, iterate, last, lazy, length, list, map, maximum, maximumOn, minimum, minimumOn, naturals, nil, partition, permutations, powerset, primes, randoms, range, ref, repeat, reverse, scanl, sort, sortOn, streak, streak2, tail, take, takeWhile, zip, zipWith;\n    Symbol = arg.Symbol;\n    CustomErrorType = function(errorName) {\n      return function(msg) {\n        var CustomError;\n        CustomError = function(msg) {\n          var self;\n          self = new Error(msg);\n          self.name = errorName;\n          self.__proto__ = CustomError.prototype;\n          return self;\n        };\n        CustomError.prototype.__proto__ = Error.prototype;\n        return new CustomError(msg);\n      };\n    };\n    ListError = CustomErrorType('ListError');\n    LazyList = function(f) {\n      f[Symbol.iterator] = function() {\n        return f();\n      };\n      f.toString = function() {\n        return \"LazyList\";\n      };\n      f.toJSON = function() {\n        return list(f);\n      };\n      return f;\n    };\n    nil = LazyList(function() {\n      return nil;\n    });\n    nil.toString = function() {\n      return 'nil';\n    };\n    Iterator = function(it) {\n      it.next = function() {\n        var r;\n        r = it();\n        return {\n          value: r,\n          done: r === nil\n        };\n      };\n      it.toString = function() {\n        return \"Iterator\";\n      };\n      return it;\n    };\n    naturals = LazyList(function() {\n      var i;\n      i = -1;\n      return Iterator(function() {\n        return ++i;\n      });\n    });\n    range = function() {\n      var args;\n      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      if (args.length === 0) {\n        return naturals;\n      } else if (args.length === 1) {\n        return LazyList(function() {\n          var i, stop;\n          stop = args[0];\n          i = -1;\n          return Iterator(function() {\n            if (++i < stop) {\n              return i;\n            } else {\n              return nil;\n            }\n          });\n        });\n      } else if (args.length === 2) {\n        return LazyList(function() {\n          var i, start, stop;\n          start = args[0], stop = args[1];\n          if (start < stop) {\n            i = start - 1;\n            return Iterator(function() {\n              if (++i < stop) {\n                return i;\n              } else {\n                return nil;\n              }\n            });\n          } else {\n            i = start + 1;\n            return Iterator(function() {\n              if (--i > stop) {\n                return i;\n              } else {\n                return nil;\n              }\n            });\n          }\n        });\n      } else {\n        return LazyList(function() {\n          var i, start, step, stop;\n          start = args[0], stop = args[1], step = args[2];\n          if (stop !== start && (stop - start) * step < 0) {\n            throw ListError('ERR IN range(): YOU ARE CREATING AN UNLIMITTED RANGE');\n          }\n          i = start - step;\n          if (start < stop) {\n            return Iterator(function() {\n              if ((i += step) < stop) {\n                return i;\n              } else {\n                return nil;\n              }\n            });\n          } else {\n            return Iterator(function() {\n              if ((i += step) > stop) {\n                return i;\n              } else {\n                return nil;\n              }\n            });\n          }\n        });\n      }\n    };\n    primes = LazyList(function() {\n      return filter(function(x) {\n        return all(function(p) {\n          return x % p !== 0;\n        })(takeWhile(function(p) {\n          return p * p <= x;\n        })(range(2, 2e308)));\n      })(range(2, 2e308))();\n    });\n    lazy = function(xs) {\n      var ref;\n      if (typeof xs === 'function') {\n        if (xs[Symbol.iterator] != null) {\n          return xs;\n        } else {\n          return LazyList(xs);\n        }\n      } else if ((ref = xs.constructor) === Array || ref === String) {\n        return LazyList(function() {\n          var i;\n          i = -1;\n          return Iterator(function() {\n            if ((++i) < xs.length) {\n              return xs[i];\n            } else {\n              return nil;\n            }\n          });\n        });\n      } else if (xs[Symbol.iterator] != null) {\n        return LazyList(function() {\n          var it;\n          it = xs[Symbol.iterator]();\n          return Iterator(function() {\n            var r;\n            r = it.next();\n            if (r.done) {\n              return nil;\n            } else {\n              return r.value;\n            }\n          });\n        });\n      } else {\n        throw ListError('lazy(xs): xs is neither Array nor Iterable');\n      }\n    };\n    enumerate = function(it) {\n      if ((it[Symbol.iterator] != null) || it instanceof Array) {\n        return zip(naturals, it);\n      } else {\n        return LazyList(function() {\n          var i, keys;\n          keys = Object.keys(it);\n          i = -1;\n          return Iterator(function() {\n            var k;\n            if (++i < keys.length) {\n              return [(k = keys[i]), it[k]];\n            } else {\n              return nil;\n            }\n          });\n        });\n      }\n    };\n    repeat = function(x) {\n      return LazyList(function() {\n        return Iterator(function() {\n          return x;\n        });\n      });\n    };\n    iterate = function(next, init) {\n      return LazyList(function() {\n        var st;\n        st = init;\n        return Iterator(function() {\n          var r;\n          r = st;\n          st = next(st);\n          return r;\n        });\n      });\n    };\n    randoms = (function() {\n      var hash, normal, salt;\n      salt = Math.PI / 3.0;\n      hash = function(x) {\n        x = Math.sin(x + salt) * 1e4;\n        return x - Math.floor(x);\n      };\n      normal = function(seed) {\n        return iterate(hash, hash(seed));\n      };\n      return function(opts) {\n        var k, ref, ref1, rg, s, seed;\n        if (opts == null) {\n          return normal(0);\n        } else if (typeof opts === 'number') {\n          return normal(opts);\n        } else {\n          seed = (ref = opts.seed) != null ? ref : 0;\n          rg = opts.range;\n          if (rg != null) {\n            if (typeof rg === 'number') {\n              return map(function(x) {\n                return Math.floor(x * rg);\n              })(normal(seed));\n            } else {\n              ref1 = [rg[0], rg[1] - rg[0] + 1], s = ref1[0], k = ref1[1];\n              return map(function(x) {\n                return s + Math.floor(x * k);\n              })(normal(seed));\n            }\n          } else {\n            return normal(seed);\n          }\n        }\n      };\n    })();\n    permutations = (function() {\n      var next_permutation;\n      next_permutation = function(x) {\n        var l, m, r, ref, ref1;\n        x = x.slice(0);\n        l = x.length - 1;\n        while (l >= 1 && x[l] <= x[l - 1]) {\n          --l;\n        }\n        if (l !== 0) {\n          m = x.length - 1;\n          while (m > l - 1 && x[m] <= x[l - 1]) {\n            --m;\n          }\n          ref = [x[l - 1], x[m]], x[m] = ref[0], x[l - 1] = ref[1];\n        }\n        r = x.length - 1;\n        while (l < r) {\n          ref1 = [x[r], x[l]], x[l] = ref1[0], x[r] = ref1[1];\n          ++l;\n          --r;\n        }\n        return x;\n      };\n      return function(xs) {\n        var arr;\n        arr = list(xs);\n        if (arr.length === 0) {\n          return nil;\n        } else {\n          return cons(arr.slice(0))(takeWhile(function(ls) {\n            return json(ls) !== json(arr);\n          })(drop(1)(iterate(next_permutation, arr))));\n        }\n      };\n    })();\n    powerset = function(xs) {\n      var ss;\n      if (length(xs) === 0) {\n        return [[]];\n      } else {\n        ss = powerset(drop(1)(xs));\n        return concat([ss, map(cons(head(xs)))(ss)]);\n      }\n    };\n    take = function(n) {\n      return function(xs) {\n        return LazyList(function() {\n          var c, iter;\n          iter = lazy(xs)[Symbol.iterator]();\n          c = -1;\n          return Iterator(function() {\n            if (++c < n) {\n              return iter();\n            } else {\n              return nil;\n            }\n          });\n        });\n      };\n    };\n    takeWhile = function(ok) {\n      return function(xs) {\n        return LazyList(function() {\n          var iter;\n          iter = lazy(xs)[Symbol.iterator]();\n          return Iterator(function() {\n            var x;\n            if ((x = iter()) !== nil && ok(x)) {\n              return x;\n            } else {\n              return nil;\n            }\n          });\n        });\n      };\n    };\n    drop = function(n) {\n      return function(xs) {\n        return LazyList(function() {\n          var finished, i, iter, j, ref;\n          iter = lazy(xs)[Symbol.iterator]();\n          finished = false;\n          for (i = j = 0, ref = n; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n            finished || (finished = iter() === nil);\n            if (finished) {\n              break;\n            }\n          }\n          if (finished) {\n            return function() {\n              return nil;\n            };\n          } else {\n            return iter;\n          }\n        });\n      };\n    };\n    dropWhile = function(ok) {\n      return function(xs) {\n        return LazyList(function() {\n          var iter, x;\n          iter = lazy(xs)[Symbol.iterator]();\n          while (ok(x = iter()) && x !== nil) {\n            null;\n          }\n          return Iterator(function() {\n            var prevx, ref;\n            ref = [x, iter()], prevx = ref[0], x = ref[1];\n            return prevx;\n          });\n        });\n      };\n    };\n    cons = function(x) {\n      return function(xs) {\n        return LazyList(function() {\n          var iter;\n          iter = null;\n          return Iterator(function() {\n            if (iter === null) {\n              iter = lazy(xs)[Symbol.iterator]();\n              return x;\n            } else {\n              return iter();\n            }\n          });\n        });\n      };\n    };\n    map = function(f) {\n      return function(xs) {\n        return LazyList(function() {\n          var iter;\n          iter = lazy(xs)[Symbol.iterator]();\n          return Iterator(function() {\n            var x;\n            if ((x = iter()) !== nil) {\n              return f(x);\n            } else {\n              return nil;\n            }\n          });\n        });\n      };\n    };\n    filter = function(ok) {\n      return function(xs) {\n        return LazyList(function() {\n          var iter;\n          iter = lazy(xs)[Symbol.iterator]();\n          return Iterator(function() {\n            var x;\n            while ((x = iter()) !== nil && !ok(x)) {\n              null;\n            }\n            return x;\n          });\n        });\n      };\n    };\n    scanl = function(op) {\n      return function(r) {\n        return function(xs) {\n          return LazyList(function() {\n            var iter;\n            iter = lazy(xs)[Symbol.iterator]();\n            return Iterator(function() {\n              var got, x;\n              got = r;\n              r = (x = iter()) !== nil ? op(r)(x) : nil;\n              return got;\n            });\n          });\n        };\n      };\n    };\n    streak = function(n) {\n      if (n < 1) {\n        return nil;\n      } else {\n        return function(xs) {\n          return drop(n - 1)(LazyList(function() {\n            var buf, iter;\n            iter = lazy(xs)[Symbol.iterator]();\n            buf = [];\n            return Iterator(function() {\n              var x;\n              if ((x = iter()) === nil) {\n                return nil;\n              }\n              buf.push(x);\n              if (buf.length > n) {\n                buf.shift(1);\n              }\n              return buf.slice(0);\n            });\n          }));\n        };\n      }\n    };\n    streak2 = function(n) {\n      return function(xs) {\n        return streak(n)(concat([xs, take(n - 1)(xs)]));\n      };\n    };\n    reverse = function(xs) {\n      var ref;\n      if ((ref = xs.constructor) === Array || ref === String) {\n        return LazyList(function() {\n          var i;\n          i = xs.length;\n          return Iterator(function() {\n            if ((--i) >= 0) {\n              return xs[i];\n            } else {\n              return nil;\n            }\n          });\n        });\n      } else {\n        return list(lazy(xs)).reverse();\n      }\n    };\n    sort = function(xs) {\n      var arr;\n      arr = list(lazy(xs));\n      return arr.sort(function(a, b) {\n        return (a > b) - (a < b);\n      });\n    };\n    sortOn = function(f) {\n      return function(xs) {\n        var arr;\n        arr = list(lazy(xs));\n        return arr.sort(function(a, b) {\n          var fa, fb;\n          return ((fa = f(a)) > (fb = f(b))) - (fa < fb);\n        });\n      };\n    };\n    groupOn = function(f) {\n      return function(xs) {\n        var k, memo, v;\n        memo = {};\n        foreach(xs, function(x) {\n          var y;\n          y = f(x);\n          if (memo[y] == null) {\n            memo[y] = [];\n          }\n          return memo[y].push(x);\n        });\n        return (function() {\n          var results;\n          results = [];\n          for (k in memo) {\n            v = memo[k];\n            results.push(v);\n          }\n          return results;\n        })();\n      };\n    };\n    partition = function(f) {\n      return function(xs) {\n        var memo;\n        memo = [[], []];\n        foreach(xs, function(x) {\n          var y;\n          y = !f(x) + 0;\n          return memo[y].push(x);\n        });\n        return memo;\n      };\n    };\n    concat = function(xss) {\n      xss = filter(function(x) {\n        var ref;\n        return ((ref = x.constructor) !== Array && ref !== String) || x.length > 0;\n      })(xss);\n      return LazyList(function() {\n        var iter, xs, xs_iter;\n        xs_iter = lazy(xss)[Symbol.iterator]();\n        xs = xs_iter();\n        iter = lazy(xs)[Symbol.iterator]();\n        return Iterator(function() {\n          var x;\n          if ((x = iter()) !== nil) {\n            return x;\n          } else if ((xs = xs_iter()) !== nil) {\n            iter = lazy(xs)[Symbol.iterator]();\n            return iter();\n          } else {\n            return nil;\n          }\n        });\n      });\n    };\n    ref = (function() {\n      var finished, zip, zipWith;\n      finished = function(arr) {\n        var j, len1, x;\n        for (j = 0, len1 = arr.length; j < len1; j++) {\n          x = arr[j];\n          if (x === nil) {\n            return true;\n          }\n        }\n        return false;\n      };\n      zip = function() {\n        var xss;\n        xss = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        return LazyList(function() {\n          var iters, xs;\n          iters = (function() {\n            var j, len1, results;\n            results = [];\n            for (j = 0, len1 = xss.length; j < len1; j++) {\n              xs = xss[j];\n              results.push(lazy(xs)[Symbol.iterator]());\n            }\n            return results;\n          })();\n          return Iterator(function() {\n            var iter, next;\n            next = (function() {\n              var j, len1, results;\n              results = [];\n              for (j = 0, len1 = iters.length; j < len1; j++) {\n                iter = iters[j];\n                results.push(iter());\n              }\n              return results;\n            })();\n            if (finished(next)) {\n              return nil;\n            } else {\n              return next;\n            }\n          });\n        });\n      };\n      zipWith = function(f) {\n        return function() {\n          var xss;\n          xss = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n          return LazyList(function() {\n            var iters, xs;\n            iters = (function() {\n              var j, len1, results;\n              results = [];\n              for (j = 0, len1 = xss.length; j < len1; j++) {\n                xs = xss[j];\n                results.push(lazy(xs)[Symbol.iterator]());\n              }\n              return results;\n            })();\n            return Iterator(function() {\n              var iter, next;\n              next = (function() {\n                var j, len1, results;\n                results = [];\n                for (j = 0, len1 = iters.length; j < len1; j++) {\n                  iter = iters[j];\n                  results.push(iter());\n                }\n                return results;\n              })();\n              if (finished(next)) {\n                return nil;\n              } else {\n                return f.apply(null, next);\n              }\n            });\n          });\n        };\n      };\n      return {\n        zip: zip,\n        zipWith: zipWith\n      };\n    })(), zip = ref.zip, zipWith = ref.zipWith;\n    cartProd = (function() {\n      var apply_vector, inc_vector;\n      inc_vector = function(limits) {\n        var len_minus_1;\n        len_minus_1 = limits.length - 1;\n        return function(vec) {\n          var i;\n          i = len_minus_1;\n          while (!(++vec[i] < limits[i] || i <= 0)) {\n            vec[i--] = 0;\n          }\n          return vec;\n        };\n      };\n      apply_vector = function(space) {\n        var len;\n        len = space.length;\n        return function(vec) {\n          var i, j, ref1, results;\n          results = [];\n          for (i = j = 0, ref1 = len; 0 <= ref1 ? j < ref1 : j > ref1; i = 0 <= ref1 ? ++j : --j) {\n            results.push(space[i][vec[i]]);\n          }\n          return results;\n        };\n      };\n      return function() {\n        var xss;\n        xss = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        return LazyList(function() {\n          var get_value, i, inc, j, len, len1, limits, v, xs;\n          xss = (function() {\n            var j, len1, results;\n            results = [];\n            for (j = 0, len1 = xss.length; j < len1; j++) {\n              xs = xss[j];\n              results.push(list(xs));\n            }\n            return results;\n          })();\n          limits = (function() {\n            var j, ref1, results;\n            results = [];\n            for (i = j = 0, ref1 = xss.length; 0 <= ref1 ? j < ref1 : j > ref1; i = 0 <= ref1 ? ++j : --j) {\n              results.push(xss[i].length);\n            }\n            return results;\n          })();\n          for (j = 0, len1 = limits.length; j < len1; j++) {\n            len = limits[j];\n            if (len === 0) {\n              return nil;\n            }\n          }\n          inc = inc_vector(limits);\n          get_value = apply_vector(xss);\n          v = (function() {\n            var o, ref1, results;\n            results = [];\n            for (i = o = 0, ref1 = xss.length; 0 <= ref1 ? o < ref1 : o > ref1; i = 0 <= ref1 ? ++o : --o) {\n              results.push(0);\n            }\n            return results;\n          })();\n          return Iterator(function() {\n            var r;\n            if (v[0] < limits[0]) {\n              r = get_value(v);\n              inc(v);\n              return r;\n            } else {\n              return nil;\n            }\n          });\n        });\n      };\n    })();\n    list = function(xs) {\n      var it, n, results, results1, x;\n      if (xs instanceof Array) {\n        return xs;\n      } else if (typeof xs === 'function') {\n        it = xs[Symbol.iterator]();\n        results = [];\n        while ((x = it()) !== nil) {\n          results.push(x);\n        }\n        return results;\n      } else if (xs[Symbol.iterator] != null) {\n        it = lazy(xs)[Symbol.iterator]();\n        results1 = [];\n        while ((x = it()) !== nil) {\n          results1.push(x);\n        }\n        return results1;\n      } else if (typeof xs === 'number') {\n        n = xs;\n        return function(xs) {\n          return list(take(n)(xs));\n        };\n      } else {\n        throw ListError('list(xs): xs is neither Array nor Iterable');\n      }\n    };\n    head = function(xs) {\n      var iter, r, ref1;\n      if ((ref1 = xs.constructor) === Array || ref1 === String) {\n        if (xs.length > 0) {\n          return xs[0];\n        } else {\n          throw ListError(\"head() used on empty list.\");\n        }\n      } else {\n        iter = lazy(xs)[Symbol.iterator]();\n        if ((r = iter()) !== nil) {\n          return r;\n        } else {\n          throw ListError(\"head() used on empty list.\");\n        }\n      }\n    };\n    tail = drop(1);\n    last = function(xs) {\n      var iter, r, ref1, x;\n      if ((ref1 = xs.constructor) === Array || ref1 === String) {\n        if (xs.length > 0) {\n          return xs[xs.length - 1];\n        } else {\n          throw ListError(\"last() used on empty list.\");\n        }\n      } else {\n        iter = lazy(xs)[Symbol.iterator]();\n        r = nil;\n        while ((x = iter()) !== nil) {\n          r = x;\n        }\n        if (r !== nil) {\n          return r;\n        } else {\n          throw ListError(\"last() used on empty list.\");\n        }\n      }\n    };\n    length = function(xs) {\n      var iter, r, ref1, x;\n      if ((ref1 = xs.constructor) === Array || ref1 === String) {\n        return xs.length;\n      } else {\n        iter = lazy(xs)[Symbol.iterator]();\n        r = 0;\n        while ((x = iter()) !== nil) {\n          ++r;\n        }\n        return r;\n      }\n    };\n    foldl = function(op) {\n      return function(init) {\n        return function(xs) {\n          var iter, r, x;\n          r = init;\n          iter = lazy(xs)[Symbol.iterator]();\n          while ((x = iter()) !== nil) {\n            r = op(r)(x);\n          }\n          return r;\n        };\n      };\n    };\n    best = function(better) {\n      return function(xs) {\n        var it, iter, r;\n        iter = lazy(xs)[Symbol.iterator]();\n        if ((r = iter()) === nil) {\n          return null;\n        }\n        while ((it = iter()) !== nil) {\n          r = better(it, r) ? it : r;\n        }\n        return r;\n      };\n    };\n    maximumOn = function(f) {\n      return best(function(a, b) {\n        return f(a) > f(b);\n      });\n    };\n    minimumOn = function(f) {\n      return best(function(a, b) {\n        return f(a) < f(b);\n      });\n    };\n    maximum = best(function(x, y) {\n      return x > y;\n    });\n    minimum = best(function(x, y) {\n      return x < y;\n    });\n    all = function(f) {\n      if (typeof f !== 'function') {\n        f = (function(x) {\n          return x === f;\n        });\n      }\n      return function(xs) {\n        var iter, x;\n        iter = lazy(xs)[Symbol.iterator]();\n        while ((x = iter()) !== nil) {\n          if (!f(x)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    };\n    any = function(f) {\n      var all_not;\n      all_not = all(function(x) {\n        return !f(x);\n      });\n      return function(xs) {\n        return !(all_not(xs));\n      };\n    };\n    fromList = function(pairs) {\n      var r;\n      r = {};\n      foreach(pairs, function(arg1) {\n        var k, v;\n        k = arg1[0], v = arg1[1];\n        if (v !== void 0) {\n          return r[k] = v;\n        }\n      });\n      return r;\n    };\n    brk = function() {\n      return brk;\n    };\n    brk.toString = function() {\n      return 'foreach.break';\n    };\n    foreach = function(xs, callback, fruit) {\n      var iter, x;\n      iter = lazy(xs)[Symbol.iterator]();\n      while ((x = iter()) !== nil) {\n        if (callback(x, fruit) === brk) {\n          break;\n        }\n      }\n      return fruit;\n    };\n    Object.defineProperties(foreach, {\n      \"break\": {\n        writable: false,\n        configurable: false,\n        enumerable: false,\n        value: brk\n      }\n    });\n    return {\n      nil: nil,\n      LazyList: LazyList,\n      Iterator: Iterator,\n      Symbol: Symbol,\n      naturals: naturals,\n      range: range,\n      primes: primes,\n      lazy: lazy,\n      enumerate: enumerate,\n      repeat: repeat,\n      iterate: iterate,\n      randoms: randoms,\n      permutations: permutations,\n      powerset: powerset,\n      cons: cons,\n      map: map,\n      filter: filter,\n      take: take,\n      takeWhile: takeWhile,\n      tail: tail,\n      drop: drop,\n      dropWhile: dropWhile,\n      scanl: scanl,\n      streak: streak,\n      streak2: streak2,\n      reverse: reverse,\n      sort: sort,\n      sortOn: sortOn,\n      groupOn: groupOn,\n      partition: partition,\n      concat: concat,\n      zip: zip,\n      zipWith: zipWith,\n      cartProd: cartProd,\n      list: list,\n      head: head,\n      last: last,\n      length: length,\n      foldl: foldl,\n      best: best,\n      maximum: maximum,\n      minimum: minimum,\n      maximumOn: maximumOn,\n      minimumOn: minimumOn,\n      all: all,\n      any: any,\n      fromList: fromList,\n      foreach: foreach\n    };\n  };\n\n  module.exports = this_module({\n    Symbol: typeof Symbol !== \"undefined\" && Symbol !== null ? Symbol : {\n      iterator: 'iter'\n    }\n  });\n\n}).call(this);\n\n\n\n},{}],4:[function(require,module,exports){\nvar this_module,\n  slice = [].slice;\n\nthis_module = function(arg) {\n  var abs, ceil, combine, curry2, curry3, equal, flip, floor, foldl, format, greaterEqual, greaterThan, identity, lessEqual, lessThan, minus, notEqual, pack, pluck, plus, precise, seek, sum, uncurry2, uncurry3, unpack;\n  foldl = arg.foldl;\n  identity = function(x) {\n    return x;\n  };\n  format = function(form) {\n    return function(env) {\n      return form.replace(/\\{(\\w+)\\}/g, function(s, k) {\n        var ref;\n        return (ref = env[k]) != null ? ref : s;\n      });\n    };\n  };\n  flip = function(f) {\n    return function(x) {\n      return function(y) {\n        return f(y)(x);\n      };\n    };\n  };\n  combine = function(f) {\n    return function(g) {\n      return function(x) {\n        return f(g(x));\n      };\n    };\n  };\n  curry2 = function(f) {\n    return function(a) {\n      return function(b) {\n        return f(a, b);\n      };\n    };\n  };\n  curry3 = function(f) {\n    return function(a) {\n      return function(b) {\n        return function(c) {\n          return f(a, b, c);\n        };\n      };\n    };\n  };\n  uncurry2 = function(f) {\n    return function(a, b) {\n      return f(a)(b);\n    };\n  };\n  uncurry3 = function(f) {\n    return function(a, b, c) {\n      return f(a)(b)(c);\n    };\n  };\n  pack = function(f) {\n    return function(arr) {\n      return f.apply(null, arr);\n    };\n  };\n  unpack = function(f) {\n    return function() {\n      var arr;\n      arr = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      return f(arr);\n    };\n  };\n  seek = function(arr) {\n    return function(i) {\n      return arr[i];\n    };\n  };\n  pluck = function(attr) {\n    return function(d) {\n      return d[attr];\n    };\n  };\n  equal = function(it) {\n    return function(x) {\n      return x === it;\n    };\n  };\n  notEqual = function(it) {\n    return function(x) {\n      return x !== it;\n    };\n  };\n  lessThan = function(it) {\n    return function(x) {\n      return x < it;\n    };\n  };\n  greaterThan = function(it) {\n    return function(x) {\n      return x > it;\n    };\n  };\n  lessEqual = function(it) {\n    return function(x) {\n      return x <= it;\n    };\n  };\n  greaterEqual = function(it) {\n    return function(x) {\n      return x >= it;\n    };\n  };\n  plus = function(x) {\n    return function(y) {\n      return x + y;\n    };\n  };\n  minus = function(x) {\n    return function(y) {\n      return x - y;\n    };\n  };\n  abs = Math.abs;\n  floor = Math.floor;\n  ceil = Math.ceil;\n  precise = function(n) {\n    return function(x) {\n      return parseFloat(x.toPrecision(n));\n    };\n  };\n  sum = foldl(plus)(0);\n  return {\n    identity: identity,\n    format: format,\n    flip: flip,\n    combine: combine,\n    curry2: curry2,\n    curry3: curry3,\n    uncurry2: uncurry2,\n    uncurry3: uncurry3,\n    pack: pack,\n    unpack: unpack,\n    seek: seek,\n    pluck: pluck,\n    equal: equal,\n    notEqual: notEqual,\n    lessThan: lessThan,\n    lessEqual: lessEqual,\n    greaterThan: greaterThan,\n    greaterEqual: greaterEqual,\n    plus: plus,\n    minus: minus,\n    abs: abs,\n    floor: floor,\n    ceil: ceil,\n    precise: precise,\n    sum: sum\n  };\n};\n\nmodule.exports = this_module({\n  foldl: require('lazy-list').foldl\n});\n\n\n},{\"lazy-list\":3}],5:[function(require,module,exports){\nvar basics, convertors, funny, lazy, url_helpers, utils;\n\nutils = require('./utils');\n\nbasics = require('./basics');\n\nlazy = require('lazy-list');\n\nfunny = require('./funny');\n\nconvertors = require('./convertors');\n\nurl_helpers = require('./url-helpers');\n\nmodule.exports = utils.extend({})(utils, basics, lazy, funny, convertors, url_helpers);\n\n\n},{\"./basics\":4,\"./convertors\":6,\"./funny\":7,\"./url-helpers\":8,\"./utils\":9,\"lazy-list\":3}],6:[function(require,module,exports){\nvar this_module;\n\nthis_module = function() {\n  var bool, chr, flatJson, float, hex, int, json, jsonWith, obj, ord, prettyJson, str;\n  int = function(s, base) {\n    var r;\n    if (typeof s === 'string') {\n      r = parseInt(s, base);\n      if (!((s.slice != null) && r === parseInt(s.slice(0, -1), base))) {\n        return r;\n      } else {\n        return null;\n      }\n    } else {\n      return parseInt(0 + s);\n    }\n  };\n  float = function(s) {\n    if (/^-?[0-9]*(\\.[0-9]+)?([eE]-?[0-9]+)?$/.test(s)) {\n      return parseFloat(s);\n    } else {\n      return null;\n    }\n  };\n  str = function(x, base) {\n    return x.toString(base);\n  };\n  bool = function(x) {\n    if (x === true || x === false) {\n      return x;\n    } else {\n      return null;\n    }\n  };\n  hex = function(x) {\n    return x.toString(16);\n  };\n  ord = function(c) {\n    return c.charCodeAt();\n  };\n  chr = function(x) {\n    return String.fromCharCode(x);\n  };\n  json = function(it) {\n    return JSON.stringify(it);\n  };\n  jsonWith = function(indent, convertor) {\n    return function(it) {\n      return JSON.stringify(it, convertor, indent);\n    };\n  };\n  prettyJson = function(it) {\n    return JSON.stringify(it, null, 4);\n  };\n  flatJson = (function() {\n    var flat;\n    flat = function(k, v) {\n      if (typeof v === 'string') {\n        try {\n          return JSON.parse(v);\n        } catch (error) {\n          return v;\n        }\n      } else {\n        return v;\n      }\n    };\n    return function(it) {\n      return JSON.stringify(it, flat, 4);\n    };\n  })();\n  obj = function(s) {\n    return JSON.parse(s);\n  };\n  return {\n    int: int,\n    float: float,\n    bool: bool,\n    str: str,\n    hex: hex,\n    ord: ord,\n    chr: chr,\n    json: json,\n    jsonWith: jsonWith,\n    prettyJson: prettyJson,\n    flatJson: flatJson,\n    obj: obj\n  };\n};\n\nmodule.exports = this_module();\n\n\n},{}],7:[function(require,module,exports){\nvar this_module,\n  slice = [].slice;\n\nthis_module = function() {\n  var Y, church, fix, memoFix, memoize;\n  church = function(n) {\n    var iter;\n    iter = function(f, n, r) {\n      if (n === 0) {\n        return r;\n      } else {\n        return iter(f, n - 1, f(r));\n      }\n    };\n    return function(f) {\n      return function(x) {\n        return iter(f, n + 0, x);\n      };\n    };\n  };\n  Y = function(f) {\n    return (function(x) {\n      return x(x);\n    })((function(x) {\n      return f((function(y) {\n        return (x(x))(y);\n      }));\n    }));\n  };\n  memoize = function(f, get_key) {\n    var cache;\n    if (get_key == null) {\n      get_key = (function() {\n        var args;\n        args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        return json(args);\n      });\n    }\n    cache = {};\n    return function() {\n      var args, cached, key, r;\n      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      key = get_key.apply(null, args);\n      cached = cache[key];\n      if (cached != null) {\n        return cached;\n      } else {\n        r = f.apply(null, args);\n        cache[key] = r;\n        return r;\n      }\n    };\n  };\n  fix = Y;\n  memoFix = function(ff) {\n    var f;\n    f = memoize(ff((function() {\n      var args;\n      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      return f.apply(null, args);\n    })));\n    return f;\n  };\n  return {\n    church: church,\n    Y: Y,\n    memoize: memoize,\n    fix: fix,\n    memoFix: memoFix\n  };\n};\n\nmodule.exports = this_module();\n\n\n},{}],8:[function(require,module,exports){\nvar this_module;\n\nthis_module = function() {\n  var uri_decoder, uri_encoder;\n  uri_encoder = function(component_packer) {\n    if (component_packer == null) {\n      component_packer = str;\n    }\n    return function(obj) {\n      var k, v;\n      return ((function() {\n        var results;\n        results = [];\n        for (k in obj) {\n          v = obj[k];\n          if (v !== void 0) {\n            results.push((encodeURIComponent(k)) + \"=\" + (encodeURIComponent(component_packer(v))));\n          }\n        }\n        return results;\n      })()).join('&');\n    };\n  };\n  uri_decoder = function(component_unpacker) {\n    if (component_unpacker == null) {\n      component_unpacker = (function(s) {\n        return s;\n      });\n    }\n    return function(str) {\n      var d, i, j, k, len, ref, ref1, ref2, s, v;\n      d = {};\n      ref1 = (ref = str.match(/[^?=&]+=[^&]*/g)) != null ? ref : [];\n      for (i = 0, len = ref1.length; i < len; i++) {\n        s = ref1[i];\n        ref2 = s.match(/([^=]+)=(.*)/), j = ref2.length - 2, k = ref2[j++], v = ref2[j++];\n        d[decodeURIComponent(k)] = component_unpacker(decodeURIComponent(v));\n      }\n      return d;\n    };\n  };\n  return {\n    uri_encoder: uri_encoder,\n    uri_decoder: uri_decoder\n  };\n};\n\nmodule.exports = this_module();\n\n\n},{}],9:[function(require,module,exports){\n(function (process){\nvar this_module,\n  slice = [].slice;\n\nthis_module = function() {\n  var assert, assertEq, assertEqOn, copy, deepcopy, dict, extend, literal, log, overload, purify, ref, simpl, time_now, update;\n  simpl = function(lit) {\n    lit = lit.replace(/^\\s*\\(\\s*function\\s*\\(\\s*\\)\\s*{\\s*return\\s*([^]*?);?\\s*}\\s*\\)\\s*\\(\\s*\\)\\s*$/, '$1');\n    lit = lit.replace(/^\\s*\\(\\s*\\(\\s*\\)\\s*=>\\s*{\\s*return\\s*([^]*?);?\\s*}\\s*\\)\\s*\\(\\s*\\)\\s*$/, '$1');\n    lit = lit.replace(/^\\s*\\(\\s*\\(\\s*\\)\\s*=>\\s*([^]*?)\\s*\\)\\s*\\(\\s*\\)\\s*$/, '$1');\n    return lit;\n  };\n  literal = function(thunk) {\n    var r, s0, s1, s2;\n    s0 = \"(\" + (thunk.toString()) + \")()\";\n    s1 = simpl(s0);\n    while (s1 !== s0) {\n      s0 = s1;\n      s1 = simpl(s1);\n    }\n    s2 = s0.replace(/[\\r\\n]{1,2}\\s*/g, '');\n    r = s2.length <= 60 ? s2 : s0;\n    return r;\n  };\n  time_now = function() {\n    return (new Date).getTime();\n  };\n  log = (function() {\n    var dye, factory, got, histories, log_label;\n    dye = (function() {\n      var cavailable, palette;\n      cavailable = (typeof window === \"undefined\" || window === null) && (typeof process !== \"undefined\" && process !== null) && !process.env.NODE_DISABLE_COLORS;\n      palette = {\n        bold: '\\x1B[0;1m',\n        red: '\\x1B[0;31m',\n        green: '\\x1B[0;32m',\n        yellow: '\\x1B[0;33m',\n        blue: '\\x1B[0;34m',\n        bold_grey: '\\x1B[1;30m'\n      };\n      if (!cavailable) {\n        return function(color) {\n          return function(s) {\n            return s;\n          };\n        };\n      } else {\n        return function(color) {\n          return function(s) {\n            return \"\" + palette[color] + s + '\\x1B[0m';\n          };\n        };\n      }\n    })();\n    log_label = (function() {\n      var flag_palette, op_flag;\n      flag_palette = {\n        '#': 'bold_grey',\n        'I': 'green',\n        'E': 'red',\n        'W': 'yellow'\n      };\n      op_flag = function(op) {\n        if (op === 'log') {\n          return '#';\n        } else {\n          return op[0].toUpperCase();\n        }\n      };\n      return function(op) {\n        var flag;\n        flag = op_flag(op);\n        return dye(flag_palette[flag])(flag);\n      };\n    })();\n    histories = [];\n    factory = function(op) {\n      var prefix;\n      prefix = \"\" + (dye('bold_grey')('#')) + (log_label(op));\n      return function() {\n        var args, ball, eval_result, expr, f, i, len, start_time, time_used;\n        args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        ball = [];\n        for (i = 0, len = args.length; i < len; i++) {\n          f = args[i];\n          if (typeof f === 'function') {\n            expr = literal(f);\n            start_time = time_now();\n            eval_result = f();\n            time_used = time_now() - start_time;\n            ball.push(prefix + \" \" + (dye('green')(expr)) + \" \" + (dye('bold_grey')('==>')), eval_result);\n            if (time_used > 0) {\n              ball.push(dye('yellow')(\"[\" + time_used + \"ms]\"));\n            }\n          } else {\n            ball.push(\"\" + prefix, f);\n          }\n        }\n        console[op].apply(console, ball);\n        histories.push(ball);\n        if (histories.length >= 10) {\n          histories.shift();\n        }\n        return null;\n      };\n    };\n    got = factory('log');\n    got.histories = histories;\n    got.info = factory('info');\n    got.warn = factory('warn');\n    got.error = got.err = factory('error');\n    return got;\n  })();\n  assert = function(f, msg) {\n    var e, r, ref;\n    if (!(f instanceof Function)) {\n      ref = [f, msg], msg = ref[0], f = ref[1];\n    }\n    try {\n      r = f();\n    } catch (error) {\n      e = error;\n      throw Error(\"Assertion Not Available: \" + (literal(f)) + \"\\n  Inner Error: \" + e);\n    }\n    if (!(r === true)) {\n      if ((msg != null) && msg instanceof Function) {\n        return msg(literal(f));\n      } else {\n        throw Error(\"Assertion Failed: \" + (msg != null ? msg : literal(f)));\n      }\n    }\n  };\n  assertEq = function(l, r, msg) {\n    var e, lv, ref, rv;\n    if (!(l instanceof Function)) {\n      ref = [l, r, msg], msg = ref[0], l = ref[1], r = ref[2];\n    }\n    try {\n      lv = l();\n      rv = r();\n    } catch (error) {\n      e = error;\n      throw Error(\"Equation Not Available: ( \" + (literal(l)) + \" ) == ( \" + (literal(r)) + \" )\\n  Inner Error: \" + e);\n    }\n    if (lv !== rv) {\n      if ((msg != null) && msg instanceof Function) {\n        return msg(literal(l), literal(r));\n      } else {\n        throw Error(\"Equation Does Not Hold:\\n  Left Expr  : \" + (literal(l)) + \"\\n  Right Expr : \" + (literal(r)) + \"\\n  Left Value : \" + lv + \"\\n  Right Value: \" + rv + \"\\n\");\n      }\n    }\n  };\n  assertEqOn = function(f) {\n    return function(l, r, msg) {\n      var e, flv, frv, lv, ref, rv;\n      if (!(l instanceof Function)) {\n        ref = [l, r, msg], msg = ref[0], l = ref[1], r = ref[2];\n      }\n      try {\n        lv = l();\n        rv = r();\n        flv = f(lv);\n        frv = f(rv);\n      } catch (error) {\n        e = error;\n        throw Error(\"Equation Not Available: ( \" + (literal(l)) + \" ) == ( \" + (literal(r)) + \" ) ON \" + f.name + \"\\n  Inner Error: \" + e);\n      }\n      if (flv !== frv) {\n        if ((msg != null) && msg instanceof Function) {\n          return msg(literal(l), literal(r), f.name);\n        } else {\n          throw Error(\"Equation Does Not Hold:\\n  Left Expr  : \" + (literal(l)) + \"\\n  Right Expr : \" + (literal(r)) + \"\\n  Compared On: \" + f.name + \"\\n  Left Value : \" + flv + \"\\n  Right Value: \" + frv + \"\\n\");\n        }\n      }\n    };\n  };\n  purify = function(f) {\n    return function() {\n      var args;\n      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      args = deepcopy(args);\n      return f.apply(null, args);\n    };\n  };\n  dict = function(pairs) {\n    var d, i, k, len, ref, v;\n    d = {};\n    for (i = 0, len = pairs.length; i < len; i++) {\n      ref = pairs[i], k = ref[0], v = ref[1];\n      d[k] = v;\n    }\n    return d;\n  };\n  ref = (function() {\n    var cp;\n    cp = function(root, dep) {\n      var k, r, v;\n      if (dep === 0 || (root == null) || typeof root !== 'object') {\n        return root;\n      }\n      if (root instanceof Array) {\n        r = (function() {\n          var i, len, results;\n          results = [];\n          for (i = 0, len = root.length; i < len; i++) {\n            v = root[i];\n            results.push(cp(v, dep - 1));\n          }\n          return results;\n        })();\n      } else {\n        r = {};\n        for (k in root) {\n          v = root[k];\n          r[k] = cp(v, dep - 1);\n        }\n      }\n      return r;\n    };\n    return {\n      copy: function(obj, depth) {\n        if (depth == null) {\n          depth = 1;\n        }\n        return cp(obj, depth);\n      },\n      deepcopy: function(obj, depth) {\n        if (depth == null) {\n          depth = 2e308;\n        }\n        return cp(obj, depth);\n      }\n    };\n  })(), copy = ref.copy, deepcopy = ref.deepcopy;\n  extend = function(base) {\n    return function() {\n      var d, defaults, i, k, len, v;\n      defaults = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      for (i = 0, len = defaults.length; i < len; i++) {\n        d = defaults[i];\n        if (d != null) {\n          for (k in d) {\n            v = d[k];\n            if (base[k] == null) {\n              base[k] = v;\n            }\n          }\n        }\n      }\n      return base;\n    };\n  };\n  update = function(base) {\n    return function() {\n      var d, i, k, len, updates, v;\n      updates = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      for (i = 0, len = updates.length; i < len; i++) {\n        d = updates[i];\n        if (d != null) {\n          for (k in d) {\n            v = d[k];\n            base[k] = v;\n          }\n        }\n      }\n      return base;\n    };\n  };\n  overload = function(_d) {\n    var d, fallback;\n    d = copy(_d);\n    fallback = d['_'];\n    if (fallback != null) {\n      return function() {\n        var args, ref1;\n        args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        return ((ref1 = d[args.length]) != null ? ref1 : fallback).apply(null, args);\n      };\n    } else {\n      return function() {\n        var args, f;\n        args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        f = d[args.length];\n        if (f == null) {\n          throw Error(\"This Function Can't Accept \" + args.length + \" Args\");\n        } else {\n          return f.apply(null, args);\n        }\n      };\n    }\n  };\n  return {\n    log: log,\n    assert: assert,\n    assertEq: assertEq,\n    assertEqOn: assertEqOn,\n    dict: dict,\n    copy: copy,\n    deepcopy: deepcopy,\n    purify: purify,\n    extend: extend,\n    update: update,\n    overload: overload\n  };\n};\n\nmodule.exports = this_module();\n\n\n\n}).call(this,require('_process'))\n\n},{\"_process\":2}]},{},[1])(1)\n});\n\n//# sourceMappingURL=global.js.map\n","var k, mate, v;\n\nmate = require('./coffee-mate');\n\nfor (k in mate) {\n  v = mate[k];\n  global[k] = v;\n}\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXFVzZXJzXFxMdW9cXEdpdGh1YlxcY29mZmVlLW1hdGVcXHNyY1xcZ2xvYmFsLmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTHVvXFxHaXRodWJcXGNvZmZlZS1tYXRlXFxzcmNcXGdsb2JhbC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsSUFBQTs7QUFBQSxJQUFBLEdBQU8sT0FBQSxDQUFRLGVBQVI7O0FBQ1AsS0FBQSxTQUFBOztFQUFBLE1BQU8sQ0FBQSxDQUFBLENBQVAsR0FBWTtBQUFaIn0=\n","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            currentQueue[queueIndex].run();\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (!draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","(function() {\n  var this_module,\n    slice = [].slice;\n\n  this_module = function(arg) {\n    var CustomErrorType, Iterator, LazyList, ListError, Symbol, all, any, best, brk, cartProd, concat, cons, drop, dropWhile, enumerate, filter, foldl, foreach, fromList, groupOn, head, iterate, last, lazy, length, list, map, maximum, maximumOn, minimum, minimumOn, naturals, nil, partition, permutations, powerset, primes, randoms, range, ref, repeat, reverse, scanl, sort, sortOn, streak, streak2, tail, take, takeWhile, zip, zipWith;\n    Symbol = arg.Symbol;\n    CustomErrorType = function(errorName) {\n      return function(msg) {\n        var CustomError;\n        CustomError = function(msg) {\n          var self;\n          self = new Error(msg);\n          self.name = errorName;\n          self.__proto__ = CustomError.prototype;\n          return self;\n        };\n        CustomError.prototype.__proto__ = Error.prototype;\n        return new CustomError(msg);\n      };\n    };\n    ListError = CustomErrorType('ListError');\n    LazyList = function(f) {\n      f[Symbol.iterator] = function() {\n        return f();\n      };\n      f.toString = function() {\n        return \"LazyList\";\n      };\n      f.toJSON = function() {\n        return list(f);\n      };\n      return f;\n    };\n    nil = LazyList(function() {\n      return nil;\n    });\n    nil.toString = function() {\n      return 'nil';\n    };\n    Iterator = function(it) {\n      it.next = function() {\n        var r;\n        r = it();\n        return {\n          value: r,\n          done: r === nil\n        };\n      };\n      it.toString = function() {\n        return \"Iterator\";\n      };\n      return it;\n    };\n    naturals = LazyList(function() {\n      var i;\n      i = -1;\n      return Iterator(function() {\n        return ++i;\n      });\n    });\n    range = function() {\n      var args;\n      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      if (args.length === 0) {\n        return naturals;\n      } else if (args.length === 1) {\n        return LazyList(function() {\n          var i, stop;\n          stop = args[0];\n          i = -1;\n          return Iterator(function() {\n            if (++i < stop) {\n              return i;\n            } else {\n              return nil;\n            }\n          });\n        });\n      } else if (args.length === 2) {\n        return LazyList(function() {\n          var i, start, stop;\n          start = args[0], stop = args[1];\n          if (start < stop) {\n            i = start - 1;\n            return Iterator(function() {\n              if (++i < stop) {\n                return i;\n              } else {\n                return nil;\n              }\n            });\n          } else {\n            i = start + 1;\n            return Iterator(function() {\n              if (--i > stop) {\n                return i;\n              } else {\n                return nil;\n              }\n            });\n          }\n        });\n      } else {\n        return LazyList(function() {\n          var i, start, step, stop;\n          start = args[0], stop = args[1], step = args[2];\n          if (stop !== start && (stop - start) * step < 0) {\n            throw ListError('ERR IN range(): YOU ARE CREATING AN UNLIMITTED RANGE');\n          }\n          i = start - step;\n          if (start < stop) {\n            return Iterator(function() {\n              if ((i += step) < stop) {\n                return i;\n              } else {\n                return nil;\n              }\n            });\n          } else {\n            return Iterator(function() {\n              if ((i += step) > stop) {\n                return i;\n              } else {\n                return nil;\n              }\n            });\n          }\n        });\n      }\n    };\n    primes = LazyList(function() {\n      return filter(function(x) {\n        return all(function(p) {\n          return x % p !== 0;\n        })(takeWhile(function(p) {\n          return p * p <= x;\n        })(range(2, 2e308)));\n      })(range(2, 2e308))();\n    });\n    lazy = function(xs) {\n      var ref;\n      if (typeof xs === 'function') {\n        if (xs[Symbol.iterator] != null) {\n          return xs;\n        } else {\n          return LazyList(xs);\n        }\n      } else if ((ref = xs.constructor) === Array || ref === String) {\n        return LazyList(function() {\n          var i;\n          i = -1;\n          return Iterator(function() {\n            if ((++i) < xs.length) {\n              return xs[i];\n            } else {\n              return nil;\n            }\n          });\n        });\n      } else if (xs[Symbol.iterator] != null) {\n        return LazyList(function() {\n          var it;\n          it = xs[Symbol.iterator]();\n          return Iterator(function() {\n            var r;\n            r = it.next();\n            if (r.done) {\n              return nil;\n            } else {\n              return r.value;\n            }\n          });\n        });\n      } else {\n        throw ListError('lazy(xs): xs is neither Array nor Iterable');\n      }\n    };\n    enumerate = function(it) {\n      if ((it[Symbol.iterator] != null) || it instanceof Array) {\n        return zip(naturals, it);\n      } else {\n        return LazyList(function() {\n          var i, keys;\n          keys = Object.keys(it);\n          i = -1;\n          return Iterator(function() {\n            var k;\n            if (++i < keys.length) {\n              return [(k = keys[i]), it[k]];\n            } else {\n              return nil;\n            }\n          });\n        });\n      }\n    };\n    repeat = function(x) {\n      return LazyList(function() {\n        return Iterator(function() {\n          return x;\n        });\n      });\n    };\n    iterate = function(next, init) {\n      return LazyList(function() {\n        var st;\n        st = init;\n        return Iterator(function() {\n          var r;\n          r = st;\n          st = next(st);\n          return r;\n        });\n      });\n    };\n    randoms = (function() {\n      var hash, normal, salt;\n      salt = Math.PI / 3.0;\n      hash = function(x) {\n        x = Math.sin(x + salt) * 1e4;\n        return x - Math.floor(x);\n      };\n      normal = function(seed) {\n        return iterate(hash, hash(seed));\n      };\n      return function(opts) {\n        var k, ref, ref1, rg, s, seed;\n        if (opts == null) {\n          return normal(0);\n        } else if (typeof opts === 'number') {\n          return normal(opts);\n        } else {\n          seed = (ref = opts.seed) != null ? ref : 0;\n          rg = opts.range;\n          if (rg != null) {\n            if (typeof rg === 'number') {\n              return map(function(x) {\n                return Math.floor(x * rg);\n              })(normal(seed));\n            } else {\n              ref1 = [rg[0], rg[1] - rg[0] + 1], s = ref1[0], k = ref1[1];\n              return map(function(x) {\n                return s + Math.floor(x * k);\n              })(normal(seed));\n            }\n          } else {\n            return normal(seed);\n          }\n        }\n      };\n    })();\n    permutations = (function() {\n      var next_permutation;\n      next_permutation = function(x) {\n        var l, m, r, ref, ref1;\n        x = x.slice(0);\n        l = x.length - 1;\n        while (l >= 1 && x[l] <= x[l - 1]) {\n          --l;\n        }\n        if (l !== 0) {\n          m = x.length - 1;\n          while (m > l - 1 && x[m] <= x[l - 1]) {\n            --m;\n          }\n          ref = [x[l - 1], x[m]], x[m] = ref[0], x[l - 1] = ref[1];\n        }\n        r = x.length - 1;\n        while (l < r) {\n          ref1 = [x[r], x[l]], x[l] = ref1[0], x[r] = ref1[1];\n          ++l;\n          --r;\n        }\n        return x;\n      };\n      return function(xs) {\n        var arr;\n        arr = list(xs);\n        if (arr.length === 0) {\n          return nil;\n        } else {\n          return cons(arr.slice(0))(takeWhile(function(ls) {\n            return json(ls) !== json(arr);\n          })(drop(1)(iterate(next_permutation, arr))));\n        }\n      };\n    })();\n    powerset = function(xs) {\n      var ss;\n      if (length(xs) === 0) {\n        return [[]];\n      } else {\n        ss = powerset(drop(1)(xs));\n        return concat([ss, map(cons(head(xs)))(ss)]);\n      }\n    };\n    take = function(n) {\n      return function(xs) {\n        return LazyList(function() {\n          var c, iter;\n          iter = lazy(xs)[Symbol.iterator]();\n          c = -1;\n          return Iterator(function() {\n            if (++c < n) {\n              return iter();\n            } else {\n              return nil;\n            }\n          });\n        });\n      };\n    };\n    takeWhile = function(ok) {\n      return function(xs) {\n        return LazyList(function() {\n          var iter;\n          iter = lazy(xs)[Symbol.iterator]();\n          return Iterator(function() {\n            var x;\n            if ((x = iter()) !== nil && ok(x)) {\n              return x;\n            } else {\n              return nil;\n            }\n          });\n        });\n      };\n    };\n    drop = function(n) {\n      return function(xs) {\n        return LazyList(function() {\n          var finished, i, iter, j, ref;\n          iter = lazy(xs)[Symbol.iterator]();\n          finished = false;\n          for (i = j = 0, ref = n; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n            finished || (finished = iter() === nil);\n            if (finished) {\n              break;\n            }\n          }\n          if (finished) {\n            return function() {\n              return nil;\n            };\n          } else {\n            return iter;\n          }\n        });\n      };\n    };\n    dropWhile = function(ok) {\n      return function(xs) {\n        return LazyList(function() {\n          var iter, x;\n          iter = lazy(xs)[Symbol.iterator]();\n          while (ok(x = iter()) && x !== nil) {\n            null;\n          }\n          return Iterator(function() {\n            var prevx, ref;\n            ref = [x, iter()], prevx = ref[0], x = ref[1];\n            return prevx;\n          });\n        });\n      };\n    };\n    cons = function(x) {\n      return function(xs) {\n        return LazyList(function() {\n          var iter;\n          iter = null;\n          return Iterator(function() {\n            if (iter === null) {\n              iter = lazy(xs)[Symbol.iterator]();\n              return x;\n            } else {\n              return iter();\n            }\n          });\n        });\n      };\n    };\n    map = function(f) {\n      return function(xs) {\n        return LazyList(function() {\n          var iter;\n          iter = lazy(xs)[Symbol.iterator]();\n          return Iterator(function() {\n            var x;\n            if ((x = iter()) !== nil) {\n              return f(x);\n            } else {\n              return nil;\n            }\n          });\n        });\n      };\n    };\n    filter = function(ok) {\n      return function(xs) {\n        return LazyList(function() {\n          var iter;\n          iter = lazy(xs)[Symbol.iterator]();\n          return Iterator(function() {\n            var x;\n            while ((x = iter()) !== nil && !ok(x)) {\n              null;\n            }\n            return x;\n          });\n        });\n      };\n    };\n    scanl = function(op) {\n      return function(r) {\n        return function(xs) {\n          return LazyList(function() {\n            var iter;\n            iter = lazy(xs)[Symbol.iterator]();\n            return Iterator(function() {\n              var got, x;\n              got = r;\n              r = (x = iter()) !== nil ? op(r)(x) : nil;\n              return got;\n            });\n          });\n        };\n      };\n    };\n    streak = function(n) {\n      if (n < 1) {\n        return nil;\n      } else {\n        return function(xs) {\n          return drop(n - 1)(LazyList(function() {\n            var buf, iter;\n            iter = lazy(xs)[Symbol.iterator]();\n            buf = [];\n            return Iterator(function() {\n              var x;\n              if ((x = iter()) === nil) {\n                return nil;\n              }\n              buf.push(x);\n              if (buf.length > n) {\n                buf.shift(1);\n              }\n              return buf.slice(0);\n            });\n          }));\n        };\n      }\n    };\n    streak2 = function(n) {\n      return function(xs) {\n        return streak(n)(concat([xs, take(n - 1)(xs)]));\n      };\n    };\n    reverse = function(xs) {\n      var ref;\n      if ((ref = xs.constructor) === Array || ref === String) {\n        return LazyList(function() {\n          var i;\n          i = xs.length;\n          return Iterator(function() {\n            if ((--i) >= 0) {\n              return xs[i];\n            } else {\n              return nil;\n            }\n          });\n        });\n      } else {\n        return list(lazy(xs)).reverse();\n      }\n    };\n    sort = function(xs) {\n      var arr;\n      arr = list(lazy(xs));\n      return arr.sort(function(a, b) {\n        return (a > b) - (a < b);\n      });\n    };\n    sortOn = function(f) {\n      return function(xs) {\n        var arr;\n        arr = list(lazy(xs));\n        return arr.sort(function(a, b) {\n          var fa, fb;\n          return ((fa = f(a)) > (fb = f(b))) - (fa < fb);\n        });\n      };\n    };\n    groupOn = function(f) {\n      return function(xs) {\n        var k, memo, v;\n        memo = {};\n        foreach(xs, function(x) {\n          var y;\n          y = f(x);\n          if (memo[y] == null) {\n            memo[y] = [];\n          }\n          return memo[y].push(x);\n        });\n        return (function() {\n          var results;\n          results = [];\n          for (k in memo) {\n            v = memo[k];\n            results.push(v);\n          }\n          return results;\n        })();\n      };\n    };\n    partition = function(f) {\n      return function(xs) {\n        var memo;\n        memo = [[], []];\n        foreach(xs, function(x) {\n          var y;\n          y = !f(x) + 0;\n          return memo[y].push(x);\n        });\n        return memo;\n      };\n    };\n    concat = function(xss) {\n      xss = filter(function(x) {\n        var ref;\n        return ((ref = x.constructor) !== Array && ref !== String) || x.length > 0;\n      })(xss);\n      return LazyList(function() {\n        var iter, xs, xs_iter;\n        xs_iter = lazy(xss)[Symbol.iterator]();\n        xs = xs_iter();\n        iter = lazy(xs)[Symbol.iterator]();\n        return Iterator(function() {\n          var x;\n          if ((x = iter()) !== nil) {\n            return x;\n          } else if ((xs = xs_iter()) !== nil) {\n            iter = lazy(xs)[Symbol.iterator]();\n            return iter();\n          } else {\n            return nil;\n          }\n        });\n      });\n    };\n    ref = (function() {\n      var finished, zip, zipWith;\n      finished = function(arr) {\n        var j, len1, x;\n        for (j = 0, len1 = arr.length; j < len1; j++) {\n          x = arr[j];\n          if (x === nil) {\n            return true;\n          }\n        }\n        return false;\n      };\n      zip = function() {\n        var xss;\n        xss = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        return LazyList(function() {\n          var iters, xs;\n          iters = (function() {\n            var j, len1, results;\n            results = [];\n            for (j = 0, len1 = xss.length; j < len1; j++) {\n              xs = xss[j];\n              results.push(lazy(xs)[Symbol.iterator]());\n            }\n            return results;\n          })();\n          return Iterator(function() {\n            var iter, next;\n            next = (function() {\n              var j, len1, results;\n              results = [];\n              for (j = 0, len1 = iters.length; j < len1; j++) {\n                iter = iters[j];\n                results.push(iter());\n              }\n              return results;\n            })();\n            if (finished(next)) {\n              return nil;\n            } else {\n              return next;\n            }\n          });\n        });\n      };\n      zipWith = function(f) {\n        return function() {\n          var xss;\n          xss = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n          return LazyList(function() {\n            var iters, xs;\n            iters = (function() {\n              var j, len1, results;\n              results = [];\n              for (j = 0, len1 = xss.length; j < len1; j++) {\n                xs = xss[j];\n                results.push(lazy(xs)[Symbol.iterator]());\n              }\n              return results;\n            })();\n            return Iterator(function() {\n              var iter, next;\n              next = (function() {\n                var j, len1, results;\n                results = [];\n                for (j = 0, len1 = iters.length; j < len1; j++) {\n                  iter = iters[j];\n                  results.push(iter());\n                }\n                return results;\n              })();\n              if (finished(next)) {\n                return nil;\n              } else {\n                return f.apply(null, next);\n              }\n            });\n          });\n        };\n      };\n      return {\n        zip: zip,\n        zipWith: zipWith\n      };\n    })(), zip = ref.zip, zipWith = ref.zipWith;\n    cartProd = (function() {\n      var apply_vector, inc_vector;\n      inc_vector = function(limits) {\n        var len_minus_1;\n        len_minus_1 = limits.length - 1;\n        return function(vec) {\n          var i;\n          i = len_minus_1;\n          while (!(++vec[i] < limits[i] || i <= 0)) {\n            vec[i--] = 0;\n          }\n          return vec;\n        };\n      };\n      apply_vector = function(space) {\n        var len;\n        len = space.length;\n        return function(vec) {\n          var i, j, ref1, results;\n          results = [];\n          for (i = j = 0, ref1 = len; 0 <= ref1 ? j < ref1 : j > ref1; i = 0 <= ref1 ? ++j : --j) {\n            results.push(space[i][vec[i]]);\n          }\n          return results;\n        };\n      };\n      return function() {\n        var xss;\n        xss = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        return LazyList(function() {\n          var get_value, i, inc, j, len, len1, limits, v, xs;\n          xss = (function() {\n            var j, len1, results;\n            results = [];\n            for (j = 0, len1 = xss.length; j < len1; j++) {\n              xs = xss[j];\n              results.push(list(xs));\n            }\n            return results;\n          })();\n          limits = (function() {\n            var j, ref1, results;\n            results = [];\n            for (i = j = 0, ref1 = xss.length; 0 <= ref1 ? j < ref1 : j > ref1; i = 0 <= ref1 ? ++j : --j) {\n              results.push(xss[i].length);\n            }\n            return results;\n          })();\n          for (j = 0, len1 = limits.length; j < len1; j++) {\n            len = limits[j];\n            if (len === 0) {\n              return nil;\n            }\n          }\n          inc = inc_vector(limits);\n          get_value = apply_vector(xss);\n          v = (function() {\n            var o, ref1, results;\n            results = [];\n            for (i = o = 0, ref1 = xss.length; 0 <= ref1 ? o < ref1 : o > ref1; i = 0 <= ref1 ? ++o : --o) {\n              results.push(0);\n            }\n            return results;\n          })();\n          return Iterator(function() {\n            var r;\n            if (v[0] < limits[0]) {\n              r = get_value(v);\n              inc(v);\n              return r;\n            } else {\n              return nil;\n            }\n          });\n        });\n      };\n    })();\n    list = function(xs) {\n      var it, n, results, results1, x;\n      if (xs instanceof Array) {\n        return xs;\n      } else if (typeof xs === 'function') {\n        it = xs[Symbol.iterator]();\n        results = [];\n        while ((x = it()) !== nil) {\n          results.push(x);\n        }\n        return results;\n      } else if (xs[Symbol.iterator] != null) {\n        it = lazy(xs)[Symbol.iterator]();\n        results1 = [];\n        while ((x = it()) !== nil) {\n          results1.push(x);\n        }\n        return results1;\n      } else if (typeof xs === 'number') {\n        n = xs;\n        return function(xs) {\n          return list(take(n)(xs));\n        };\n      } else {\n        throw ListError('list(xs): xs is neither Array nor Iterable');\n      }\n    };\n    head = function(xs) {\n      var iter, r, ref1;\n      if ((ref1 = xs.constructor) === Array || ref1 === String) {\n        if (xs.length > 0) {\n          return xs[0];\n        } else {\n          throw ListError(\"head() used on empty list.\");\n        }\n      } else {\n        iter = lazy(xs)[Symbol.iterator]();\n        if ((r = iter()) !== nil) {\n          return r;\n        } else {\n          throw ListError(\"head() used on empty list.\");\n        }\n      }\n    };\n    tail = drop(1);\n    last = function(xs) {\n      var iter, r, ref1, x;\n      if ((ref1 = xs.constructor) === Array || ref1 === String) {\n        if (xs.length > 0) {\n          return xs[xs.length - 1];\n        } else {\n          throw ListError(\"last() used on empty list.\");\n        }\n      } else {\n        iter = lazy(xs)[Symbol.iterator]();\n        r = nil;\n        while ((x = iter()) !== nil) {\n          r = x;\n        }\n        if (r !== nil) {\n          return r;\n        } else {\n          throw ListError(\"last() used on empty list.\");\n        }\n      }\n    };\n    length = function(xs) {\n      var iter, r, ref1, x;\n      if ((ref1 = xs.constructor) === Array || ref1 === String) {\n        return xs.length;\n      } else {\n        iter = lazy(xs)[Symbol.iterator]();\n        r = 0;\n        while ((x = iter()) !== nil) {\n          ++r;\n        }\n        return r;\n      }\n    };\n    foldl = function(op) {\n      return function(init) {\n        return function(xs) {\n          var iter, r, x;\n          r = init;\n          iter = lazy(xs)[Symbol.iterator]();\n          while ((x = iter()) !== nil) {\n            r = op(r)(x);\n          }\n          return r;\n        };\n      };\n    };\n    best = function(better) {\n      return function(xs) {\n        var it, iter, r;\n        iter = lazy(xs)[Symbol.iterator]();\n        if ((r = iter()) === nil) {\n          return null;\n        }\n        while ((it = iter()) !== nil) {\n          r = better(it, r) ? it : r;\n        }\n        return r;\n      };\n    };\n    maximumOn = function(f) {\n      return best(function(a, b) {\n        return f(a) > f(b);\n      });\n    };\n    minimumOn = function(f) {\n      return best(function(a, b) {\n        return f(a) < f(b);\n      });\n    };\n    maximum = best(function(x, y) {\n      return x > y;\n    });\n    minimum = best(function(x, y) {\n      return x < y;\n    });\n    all = function(f) {\n      if (typeof f !== 'function') {\n        f = (function(x) {\n          return x === f;\n        });\n      }\n      return function(xs) {\n        var iter, x;\n        iter = lazy(xs)[Symbol.iterator]();\n        while ((x = iter()) !== nil) {\n          if (!f(x)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    };\n    any = function(f) {\n      var all_not;\n      all_not = all(function(x) {\n        return !f(x);\n      });\n      return function(xs) {\n        return !(all_not(xs));\n      };\n    };\n    fromList = function(pairs) {\n      var r;\n      r = {};\n      foreach(pairs, function(arg1) {\n        var k, v;\n        k = arg1[0], v = arg1[1];\n        if (v !== void 0) {\n          return r[k] = v;\n        }\n      });\n      return r;\n    };\n    brk = function() {\n      return brk;\n    };\n    brk.toString = function() {\n      return 'foreach.break';\n    };\n    foreach = function(xs, callback, fruit) {\n      var iter, x;\n      iter = lazy(xs)[Symbol.iterator]();\n      while ((x = iter()) !== nil) {\n        if (callback(x, fruit) === brk) {\n          break;\n        }\n      }\n      return fruit;\n    };\n    Object.defineProperties(foreach, {\n      \"break\": {\n        writable: false,\n        configurable: false,\n        enumerable: false,\n        value: brk\n      }\n    });\n    return {\n      nil: nil,\n      LazyList: LazyList,\n      Iterator: Iterator,\n      Symbol: Symbol,\n      naturals: naturals,\n      range: range,\n      primes: primes,\n      lazy: lazy,\n      enumerate: enumerate,\n      repeat: repeat,\n      iterate: iterate,\n      randoms: randoms,\n      permutations: permutations,\n      powerset: powerset,\n      cons: cons,\n      map: map,\n      filter: filter,\n      take: take,\n      takeWhile: takeWhile,\n      tail: tail,\n      drop: drop,\n      dropWhile: dropWhile,\n      scanl: scanl,\n      streak: streak,\n      streak2: streak2,\n      reverse: reverse,\n      sort: sort,\n      sortOn: sortOn,\n      groupOn: groupOn,\n      partition: partition,\n      concat: concat,\n      zip: zip,\n      zipWith: zipWith,\n      cartProd: cartProd,\n      list: list,\n      head: head,\n      last: last,\n      length: length,\n      foldl: foldl,\n      best: best,\n      maximum: maximum,\n      minimum: minimum,\n      maximumOn: maximumOn,\n      minimumOn: minimumOn,\n      all: all,\n      any: any,\n      fromList: fromList,\n      foreach: foreach\n    };\n  };\n\n  module.exports = this_module({\n    Symbol: typeof Symbol !== \"undefined\" && Symbol !== null ? Symbol : {\n      iterator: 'iter'\n    }\n  });\n\n}).call(this);\n\n//# sourceMappingURL=lazy.js.map\n","var this_module,\n  slice = [].slice;\n\nthis_module = function(arg) {\n  var abs, ceil, combine, curry2, curry3, equal, flip, floor, foldl, format, greaterEqual, greaterThan, identity, lessEqual, lessThan, minus, notEqual, pack, pluck, plus, precise, seek, sum, uncurry2, uncurry3, unpack;\n  foldl = arg.foldl;\n  identity = function(x) {\n    return x;\n  };\n  format = function(form) {\n    return function(env) {\n      return form.replace(/\\{(\\w+)\\}/g, function(s, k) {\n        var ref;\n        return (ref = env[k]) != null ? ref : s;\n      });\n    };\n  };\n  flip = function(f) {\n    return function(x) {\n      return function(y) {\n        return f(y)(x);\n      };\n    };\n  };\n  combine = function(f) {\n    return function(g) {\n      return function(x) {\n        return f(g(x));\n      };\n    };\n  };\n  curry2 = function(f) {\n    return function(a) {\n      return function(b) {\n        return f(a, b);\n      };\n    };\n  };\n  curry3 = function(f) {\n    return function(a) {\n      return function(b) {\n        return function(c) {\n          return f(a, b, c);\n        };\n      };\n    };\n  };\n  uncurry2 = function(f) {\n    return function(a, b) {\n      return f(a)(b);\n    };\n  };\n  uncurry3 = function(f) {\n    return function(a, b, c) {\n      return f(a)(b)(c);\n    };\n  };\n  pack = function(f) {\n    return function(arr) {\n      return f.apply(null, arr);\n    };\n  };\n  unpack = function(f) {\n    return function() {\n      var arr;\n      arr = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      return f(arr);\n    };\n  };\n  seek = function(arr) {\n    return function(i) {\n      return arr[i];\n    };\n  };\n  pluck = function(attr) {\n    return function(d) {\n      return d[attr];\n    };\n  };\n  equal = function(it) {\n    return function(x) {\n      return x === it;\n    };\n  };\n  notEqual = function(it) {\n    return function(x) {\n      return x !== it;\n    };\n  };\n  lessThan = function(it) {\n    return function(x) {\n      return x < it;\n    };\n  };\n  greaterThan = function(it) {\n    return function(x) {\n      return x > it;\n    };\n  };\n  lessEqual = function(it) {\n    return function(x) {\n      return x <= it;\n    };\n  };\n  greaterEqual = function(it) {\n    return function(x) {\n      return x >= it;\n    };\n  };\n  plus = function(x) {\n    return function(y) {\n      return x + y;\n    };\n  };\n  minus = function(x) {\n    return function(y) {\n      return x - y;\n    };\n  };\n  abs = Math.abs;\n  floor = Math.floor;\n  ceil = Math.ceil;\n  precise = function(n) {\n    return function(x) {\n      return parseFloat(x.toPrecision(n));\n    };\n  };\n  sum = foldl(plus)(0);\n  return {\n    identity: identity,\n    format: format,\n    flip: flip,\n    combine: combine,\n    curry2: curry2,\n    curry3: curry3,\n    uncurry2: uncurry2,\n    uncurry3: uncurry3,\n    pack: pack,\n    unpack: unpack,\n    seek: seek,\n    pluck: pluck,\n    equal: equal,\n    notEqual: notEqual,\n    lessThan: lessThan,\n    lessEqual: lessEqual,\n    greaterThan: greaterThan,\n    greaterEqual: greaterEqual,\n    plus: plus,\n    minus: minus,\n    abs: abs,\n    floor: floor,\n    ceil: ceil,\n    precise: precise,\n    sum: sum\n  };\n};\n\nmodule.exports = this_module({\n  foldl: require('lazy-list').foldl\n});\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXFVzZXJzXFxMdW9cXEdpdGh1YlxcY29mZmVlLW1hdGVcXHNyY1xcYmFzaWNzLmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTHVvXFxHaXRodWJcXGNvZmZlZS1tYXRlXFxzcmNcXGJhc2ljcy5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBQSxXQUFBO0VBQUE7O0FBQUEsV0FBQSxHQUFjLFNBQUMsR0FBRDtBQUNiLE1BQUE7RUFEZSxRQUFEO0VBQ2QsUUFBQSxHQUFXLFNBQUMsQ0FBRDtXQUFPO0VBQVA7RUFFWCxNQUFBLEdBQVMsU0FBQyxJQUFEO1dBQVUsU0FBQyxHQUFEO2FBQ2xCLElBQUksQ0FBQyxPQUFMLENBQWEsWUFBYixFQUEyQixTQUFDLENBQUQsRUFBSSxDQUFKO0FBQVUsWUFBQTs4Q0FBUztNQUFuQixDQUEzQjtJQURrQjtFQUFWO0VBSVQsSUFBQSxHQUFPLFNBQUMsQ0FBRDtXQUNOLFNBQUMsQ0FBRDthQUFPLFNBQUMsQ0FBRDtlQUFPLENBQUEsQ0FBRSxDQUFGLENBQUEsQ0FBSyxDQUFMO01BQVA7SUFBUDtFQURNO0VBR1AsT0FBQSxHQUFVLFNBQUMsQ0FBRDtXQUFPLFNBQUMsQ0FBRDthQUNoQixTQUFDLENBQUQ7ZUFBTyxDQUFBLENBQUUsQ0FBQSxDQUFFLENBQUYsQ0FBRjtNQUFQO0lBRGdCO0VBQVA7RUFHVixNQUFBLEdBQVMsU0FBQyxDQUFEO1dBQ1IsU0FBQyxDQUFEO2FBQU8sU0FBQyxDQUFEO2VBQU8sQ0FBQSxDQUFFLENBQUYsRUFBSyxDQUFMO01BQVA7SUFBUDtFQURRO0VBR1QsTUFBQSxHQUFTLFNBQUMsQ0FBRDtXQUNSLFNBQUMsQ0FBRDthQUFPLFNBQUMsQ0FBRDtlQUFPLFNBQUMsQ0FBRDtpQkFBTyxDQUFBLENBQUUsQ0FBRixFQUFLLENBQUwsRUFBUSxDQUFSO1FBQVA7TUFBUDtJQUFQO0VBRFE7RUFHVCxRQUFBLEdBQVcsU0FBQyxDQUFEO1dBQ1YsU0FB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\n","var basics, convertors, funny, lazy, url_helpers, utils;\n\nutils = require('./utils');\n\nbasics = require('./basics');\n\nlazy = require('lazy-list');\n\nfunny = require('./funny');\n\nconvertors = require('./convertors');\n\nurl_helpers = require('./url-helpers');\n\nmodule.exports = utils.extend({})(utils, basics, lazy, funny, convertors, url_helpers);\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXFVzZXJzXFxMdW9cXEdpdGh1YlxcY29mZmVlLW1hdGVcXHNyY1xcY29mZmVlLW1hdGUuY29mZmVlIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxMdW9cXEdpdGh1YlxcY29mZmVlLW1hdGVcXHNyY1xcY29mZmVlLW1hdGUuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUE7O0FBQUEsS0FBQSxHQUFRLE9BQUEsQ0FBUSxTQUFSOztBQUNSLE1BQUEsR0FBUyxPQUFBLENBQVEsVUFBUjs7QUFDVCxJQUFBLEdBQU8sT0FBQSxDQUFRLFdBQVI7O0FBQ1AsS0FBQSxHQUFRLE9BQUEsQ0FBUSxTQUFSOztBQUNSLFVBQUEsR0FBYSxPQUFBLENBQVEsY0FBUjs7QUFDYixXQUFBLEdBQWMsT0FBQSxDQUFRLGVBQVI7O0FBRWQsTUFBTSxDQUFDLE9BQVAsR0FBaUIsS0FBSyxDQUFDLE1BQU4sQ0FBYSxFQUFiLENBQUEsQ0FBaUIsS0FBakIsRUFBd0IsTUFBeEIsRUFBZ0MsSUFBaEMsRUFBc0MsS0FBdEMsRUFBNkMsVUFBN0MsRUFBeUQsV0FBekQifQ==\n","var this_module;\n\nthis_module = function() {\n  var bool, chr, flatJson, float, hex, int, json, jsonWith, obj, ord, prettyJson, str;\n  int = function(s, base) {\n    var r;\n    if (typeof s === 'string') {\n      r = parseInt(s, base);\n      if (!((s.slice != null) && r === parseInt(s.slice(0, -1), base))) {\n        return r;\n      } else {\n        return null;\n      }\n    } else {\n      return parseInt(0 + s);\n    }\n  };\n  float = function(s) {\n    if (/^-?[0-9]*(\\.[0-9]+)?([eE]-?[0-9]+)?$/.test(s)) {\n      return parseFloat(s);\n    } else {\n      return null;\n    }\n  };\n  str = function(x, base) {\n    return x.toString(base);\n  };\n  bool = function(x) {\n    if (x === true || x === false) {\n      return x;\n    } else {\n      return null;\n    }\n  };\n  hex = function(x) {\n    return x.toString(16);\n  };\n  ord = function(c) {\n    return c.charCodeAt();\n  };\n  chr = function(x) {\n    return String.fromCharCode(x);\n  };\n  json = function(it) {\n    return JSON.stringify(it);\n  };\n  jsonWith = function(indent, convertor) {\n    return function(it) {\n      return JSON.stringify(it, convertor, indent);\n    };\n  };\n  prettyJson = function(it) {\n    return JSON.stringify(it, null, 4);\n  };\n  flatJson = (function() {\n    var flat;\n    flat = function(k, v) {\n      if (typeof v === 'string') {\n        try {\n          return JSON.parse(v);\n        } catch (error) {\n          return v;\n        }\n      } else {\n        return v;\n      }\n    };\n    return function(it) {\n      return JSON.stringify(it, flat, 4);\n    };\n  })();\n  obj = function(s) {\n    return JSON.parse(s);\n  };\n  return {\n    int: int,\n    float: float,\n    bool: bool,\n    str: str,\n    hex: hex,\n    ord: ord,\n    chr: chr,\n    json: json,\n    jsonWith: jsonWith,\n    prettyJson: prettyJson,\n    flatJson: flatJson,\n    obj: obj\n  };\n};\n\nmodule.exports = this_module();\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXFVzZXJzXFxMdW9cXEdpdGh1YlxcY29mZmVlLW1hdGVcXHNyY1xcY29udmVydG9ycy5jb2ZmZWUiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXEx1b1xcR2l0aHViXFxjb2ZmZWUtbWF0ZVxcc3JjXFxjb252ZXJ0b3JzLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFBOztBQUFBLFdBQUEsR0FBYyxTQUFBO0FBQ2IsTUFBQTtFQUFBLEdBQUEsR0FBTSxTQUFDLENBQUQsRUFBSSxJQUFKO0FBQWEsUUFBQTtJQUFBLElBQUcsT0FBTyxDQUFQLEtBQWEsUUFBaEI7TUFBK0IsQ0FBQSxHQUFJLFFBQUEsQ0FBUyxDQUFULEVBQVksSUFBWjtNQUFtQixJQUFBLENBQUEsQ0FBTyxpQkFBQSxJQUFhLENBQUEsS0FBSyxRQUFBLENBQVMsQ0FBQyxDQUFDLEtBQUYsQ0FBUSxDQUFSLEVBQVUsQ0FBQyxDQUFYLENBQVQsRUFBd0IsSUFBeEIsQ0FBekIsQ0FBQTtlQUE0RCxFQUE1RDtPQUFBLE1BQUE7ZUFBbUUsS0FBbkU7T0FBdEQ7S0FBQSxNQUFBO2FBQW9JLFFBQUEsQ0FBUyxDQUFBLEdBQUksQ0FBYixFQUFwSTs7RUFBYjtFQUNOLEtBQUEsR0FBUSxTQUFDLENBQUQ7SUFBTyxJQUFHLHNDQUFzQyxDQUFDLElBQXZDLENBQTRDLENBQTVDLENBQUg7YUFBdUQsVUFBQSxDQUFXLENBQVgsRUFBdkQ7S0FBQSxNQUFBO2FBQTBFLEtBQTFFOztFQUFQO0VBQ1IsR0FBQSxHQUFNLFNBQUMsQ0FBRCxFQUFJLElBQUo7V0FBYSxDQUFDLENBQUMsUUFBRixDQUFXLElBQVg7RUFBYjtFQUNOLElBQUEsR0FBTyxTQUFDLENBQUQ7SUFBTyxJQUFHLENBQUEsS0FBTSxJQUFOLElBQUEsQ0FBQSxLQUFZLEtBQWY7YUFBMkIsRUFBM0I7S0FBQSxNQUFBO2FBQWtDLEtBQWxDOztFQUFQO0VBQ1AsR0FBQSxHQUFNLFNBQUMsQ0FBRDtXQUFPLENBQUMsQ0FBQyxRQUFGLENBQVcsRUFBWDtFQUFQO0VBQ04sR0FBQSxHQUFNLFNBQUMsQ0FBRDtXQUFPLENBQUMsQ0FBQyxVQUFGLENBQUE7RUFBUDtFQUNOLEdBQUEsR0FBTSxTQUFDLENBQUQ7V0FBTyxNQUFNLENBQUMsWUFBUCxDQUFvQixDQUFwQjtFQUFQO0VBQ04sSUFBQSxHQUFPLFNBQUMsRUFBRDtXQUFRLElBQUksQ0FBQyxTQUFMLENBQWUsRUFBZjtFQUFSO0VBQ1AsUUFBQSxHQUFXLFNBQUMsTUFBRCxFQUFTLFNBQVQ7V0FBdUIsU0FBQyxFQUFEO2FBQVEsSUFBSSxDQUFDLFNBQUwsQ0FBZSxFQUFmLEVBQW1CLFNBQW5CLEVBQThCLE1BQTlCO0lBQVI7RUFBdkI7RUFDWCxVQUFBLEdBQWEsU0FBQyxFQUFEO1dBQVEsSUFBSSxDQUFDLFNBQUwsQ0FBZSxFQUFmLEVBQW1CLElBQW5CLEVBQXlCLENBQXpCO0VBQVI7RUFDYixRQUFBLEdBQWMsQ0FBQSxTQUFBO0FBQ2IsUUFBQTtJQUFBLElBQUEsR0FBTyxTQUFDLENBQUQsRUFBSSxDQUFKO01BQVUsSUFBRyxPQUFPLENBQVAsS0FBWSxRQUFmO0FBQThCO2lCQUFJLElBQUksQ0FBQyxLQUFMLENBQVcsQ0FBWCxFQUFKO1NBQUEsYUFBQTtpQkFBNkIsRUFBN0I7U0FBOUI7T0FBQSxNQUFBO2VBQW1FLEVBQW5FOztJQUFWO1dBQ1AsU0FBQyxFQUFEO2FBQVEsSUFBSSxDQUFDLFNBQUwsQ0FBZSxFQUFmLEVBQW1CLElBQW5CLEVBQXlCLENBQXpCO0lBQVI7RUFGYSxDQUFBLENBQUgsQ0FBQTtFQUdYLEdBQUEsR0FBTSxTQUFDLENBQUQ7V0FBTyxJQUFJLENBQUMsS0FBTCxDQUFXLENBQVg7RUFBUDtBQUVOLFNBQU87SUFDTixLQUFBLEdBRE07SUFDRCxPQUFBLEtBREM7SUFDTSxNQUFBLElBRE47SUFDWSxLQUFBLEdBRFo7SUFDaUIsS0FBQSxHQURqQjtJQUNzQixLQUFBLEdBRHRCO0lBQzJCLEtBQUEsR0FEM0I7SUFDZ0MsTUFBQSxJQURoQztJQUNzQyxVQUFBLFFBRHRDO0lBQ2dELFlBQUEsVUFEaEQ7SUFDNEQsVUFBQSxRQUQ1RDtJQUNzRSxLQUFBLEdBRHRFOztBQWhCTTs7QUFvQmQsTUFBTSxDQUFDLE9BQVAsR0FBaUIsV0FBQSxDQUFBIn0=\n","var this_module,\n  slice = [].slice;\n\nthis_module = function() {\n  var Y, church, fix, memoFix, memoize;\n  church = function(n) {\n    var iter;\n    iter = function(f, n, r) {\n      if (n === 0) {\n        return r;\n      } else {\n        return iter(f, n - 1, f(r));\n      }\n    };\n    return function(f) {\n      return function(x) {\n        return iter(f, n + 0, x);\n      };\n    };\n  };\n  Y = function(f) {\n    return (function(x) {\n      return x(x);\n    })((function(x) {\n      return f((function(y) {\n        return (x(x))(y);\n      }));\n    }));\n  };\n  memoize = function(f, get_key) {\n    var cache;\n    if (get_key == null) {\n      get_key = (function() {\n        var args;\n        args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        return json(args);\n      });\n    }\n    cache = {};\n    return function() {\n      var args, cached, key, r;\n      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      key = get_key.apply(null, args);\n      cached = cache[key];\n      if (cached != null) {\n        return cached;\n      } else {\n        r = f.apply(null, args);\n        cache[key] = r;\n        return r;\n      }\n    };\n  };\n  fix = Y;\n  memoFix = function(ff) {\n    var f;\n    f = memoize(ff((function() {\n      var args;\n      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      return f.apply(null, args);\n    })));\n    return f;\n  };\n  return {\n    church: church,\n    Y: Y,\n    memoize: memoize,\n    fix: fix,\n    memoFix: memoFix\n  };\n};\n\nmodule.exports = this_module();\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXFVzZXJzXFxMdW9cXEdpdGh1YlxcY29mZmVlLW1hdGVcXHNyY1xcZnVubnkuY29mZmVlIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxMdW9cXEdpdGh1YlxcY29mZmVlLW1hdGVcXHNyY1xcZnVubnkuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUEsV0FBQTtFQUFBOztBQUFBLFdBQUEsR0FBYyxTQUFBO0FBQ2IsTUFBQTtFQUFBLE1BQUEsR0FBUyxTQUFDLENBQUQ7QUFDUixRQUFBO0lBQUEsSUFBQSxHQUFPLFNBQUMsQ0FBRCxFQUFJLENBQUosRUFBTyxDQUFQO01BQ04sSUFBRyxDQUFBLEtBQUssQ0FBUjtlQUFlLEVBQWY7T0FBQSxNQUFBO2VBQXNCLElBQUEsQ0FBSyxDQUFMLEVBQVEsQ0FBQSxHQUFJLENBQVosRUFBZSxDQUFBLENBQUUsQ0FBRixDQUFmLEVBQXRCOztJQURNO1dBRVAsU0FBQyxDQUFEO2FBQ0MsU0FBQyxDQUFEO2VBQU8sSUFBQSxDQUFLLENBQUwsRUFBUSxDQUFBLEdBQUksQ0FBWixFQUFlLENBQWY7TUFBUDtJQUREO0VBSFE7RUFNVCxDQUFBLEdBQUksU0FBQyxDQUFEO1dBQ0gsQ0FBQyxTQUFDLENBQUQ7YUFBUSxDQUFBLENBQUUsQ0FBRjtJQUFSLENBQUQsQ0FBQSxDQUFlLENBQUMsU0FBQyxDQUFEO2FBQVEsQ0FBQSxDQUFFLENBQUMsU0FBQyxDQUFEO2VBQVEsQ0FBQyxDQUFBLENBQUUsQ0FBRixDQUFELENBQUEsQ0FBTSxDQUFOO01BQVIsQ0FBRCxDQUFGO0lBQVIsQ0FBRCxDQUFmO0VBREc7RUFHSixPQUFBLEdBQVUsU0FBQyxDQUFELEVBQUksT0FBSjtBQUNULFFBQUE7O01BRGEsVUFBVSxDQUFDLFNBQUE7QUFBYSxZQUFBO1FBQVo7ZUFBWSxJQUFBLENBQUssSUFBTDtNQUFiLENBQUQ7O0lBQ3ZCLEtBQUEsR0FBUTtXQUNSLFNBQUE7QUFDQyxVQUFBO01BREE7TUFDQSxHQUFBLEdBQU0sT0FBQSxhQUFRLElBQVI7TUFDTixNQUFBLEdBQVMsS0FBTSxDQUFBLEdBQUE7TUFDZixJQUFHLGNBQUg7ZUFDQyxPQUREO09BQUEsTUFBQTtRQUdDLENBQUEsR0FBSSxDQUFBLGFBQUUsSUFBRjtRQUNKLEtBQU0sQ0FBQSxHQUFBLENBQU4sR0FBYTtlQUNiLEVBTEQ7O0lBSEQ7RUFGUztFQVlWLEdBQUEsR0FBTTtFQUVOLE9BQUEsR0FBVSxTQUFDLEVBQUQ7QUFDVCxRQUFBO0lBQUEsQ0FBQSxHQUFJLE9BQUEsQ0FBUyxFQUFBLENBQUcsQ0FBQyxTQUFBO0FBQWEsVUFBQTtNQUFaO2FBQVksQ0FBQSxhQUFFLElBQUY7SUFBYixDQUFELENBQUgsQ0FBVDtBQUNKLFdBQU87RUFGRTtBQUlWLFNBQU87SUFDTixRQUFBLE1BRE07SUFDRSxHQUFBLENBREY7SUFDSyxTQUFBLE9BREw7SUFDYyxLQUFBLEdBRGQ7SUFDbUIsU0FBQSxPQURuQjs7QUE1Qk07O0FBZ0NkLE1BQU0sQ0FBQyxPQUFQLEdBQWlCLFdBQUEsQ0FBQSJ9\n","var this_module;\n\nthis_module = function() {\n  var uri_decoder, uri_encoder;\n  uri_encoder = function(component_packer) {\n    if (component_packer == null) {\n      component_packer = str;\n    }\n    return function(obj) {\n      var k, v;\n      return ((function() {\n        var results;\n        results = [];\n        for (k in obj) {\n          v = obj[k];\n          if (v !== void 0) {\n            results.push((encodeURIComponent(k)) + \"=\" + (encodeURIComponent(component_packer(v))));\n          }\n        }\n        return results;\n      })()).join('&');\n    };\n  };\n  uri_decoder = function(component_unpacker) {\n    if (component_unpacker == null) {\n      component_unpacker = (function(s) {\n        return s;\n      });\n    }\n    return function(str) {\n      var d, i, j, k, len, ref, ref1, ref2, s, v;\n      d = {};\n      ref1 = (ref = str.match(/[^?=&]+=[^&]*/g)) != null ? ref : [];\n      for (i = 0, len = ref1.length; i < len; i++) {\n        s = ref1[i];\n        ref2 = s.match(/([^=]+)=(.*)/), j = ref2.length - 2, k = ref2[j++], v = ref2[j++];\n        d[decodeURIComponent(k)] = component_unpacker(decodeURIComponent(v));\n      }\n      return d;\n    };\n  };\n  return {\n    uri_encoder: uri_encoder,\n    uri_decoder: uri_decoder\n  };\n};\n\nmodule.exports = this_module();\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXFVzZXJzXFxMdW9cXEdpdGh1YlxcY29mZmVlLW1hdGVcXHNyY1xcdXJsLWhlbHBlcnMuY29mZmVlIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxMdW9cXEdpdGh1YlxcY29mZmVlLW1hdGVcXHNyY1xcdXJsLWhlbHBlcnMuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUE7O0FBQUEsV0FBQSxHQUFjLFNBQUE7QUFDYixNQUFBO0VBQUEsV0FBQSxHQUFjLFNBQUMsZ0JBQUQ7O01BQUMsbUJBQW1COztXQUNqQyxTQUFDLEdBQUQ7QUFDQyxVQUFBO2FBQUE7O0FBQUM7YUFBQSxRQUFBOztjQUF5RixDQUFBLEtBQU87eUJBQTlGLENBQUMsa0JBQUEsQ0FBbUIsQ0FBbkIsQ0FBRCxDQUFBLEdBQXVCLEdBQXZCLEdBQXlCLENBQUMsa0JBQUEsQ0FBbUIsZ0JBQUEsQ0FBaUIsQ0FBakIsQ0FBbkIsQ0FBRDs7QUFBM0I7O1VBQUQsQ0FBMkcsQ0FBQyxJQUE1RyxDQUFpSCxHQUFqSDtJQUREO0VBRGE7RUFJZCxXQUFBLEdBQWMsU0FBQyxrQkFBRDs7TUFBQyxxQkFBcUIsQ0FBQyxTQUFDLENBQUQ7ZUFBTztNQUFQLENBQUQ7O1dBQ25DLFNBQUMsR0FBRDtBQUNDLFVBQUE7TUFBQSxDQUFBLEdBQUk7QUFDSjtBQUFBLFdBQUEsc0NBQUE7O1FBQ0MsT0FBYyxDQUFDLENBQUMsS0FBRixDQUFRLGNBQVIsQ0FBZCxxQkFBQSxFQUFNLGFBQU4sRUFBUztRQUNULENBQUUsQ0FBQSxrQkFBQSxDQUFtQixDQUFuQixDQUFBLENBQUYsR0FBNEIsa0JBQUEsQ0FBbUIsa0JBQUEsQ0FBbUIsQ0FBbkIsQ0FBbkI7QUFGN0I7QUFHQSxhQUFPO0lBTFI7RUFEYTtBQVFkLFNBQU87SUFDTixhQUFBLFdBRE07SUFDTyxhQUFBLFdBRFA7O0FBYk07O0FBaUJkLE1BQU0sQ0FBQyxPQUFQLEdBQWlCLFdBQUEsQ0FBQSJ9\n","var this_module,\n  slice = [].slice;\n\nthis_module = function() {\n  var assert, assertEq, assertEqOn, copy, deepcopy, dict, extend, literal, log, overload, purify, ref, simpl, time_now, update;\n  simpl = function(lit) {\n    lit = lit.replace(/^\\s*\\(\\s*function\\s*\\(\\s*\\)\\s*{\\s*return\\s*([^]*?);?\\s*}\\s*\\)\\s*\\(\\s*\\)\\s*$/, '$1');\n    lit = lit.replace(/^\\s*\\(\\s*\\(\\s*\\)\\s*=>\\s*{\\s*return\\s*([^]*?);?\\s*}\\s*\\)\\s*\\(\\s*\\)\\s*$/, '$1');\n    lit = lit.replace(/^\\s*\\(\\s*\\(\\s*\\)\\s*=>\\s*([^]*?)\\s*\\)\\s*\\(\\s*\\)\\s*$/, '$1');\n    return lit;\n  };\n  literal = function(thunk) {\n    var r, s0, s1, s2;\n    s0 = \"(\" + (thunk.toString()) + \")()\";\n    s1 = simpl(s0);\n    while (s1 !== s0) {\n      s0 = s1;\n      s1 = simpl(s1);\n    }\n    s2 = s0.replace(/[\\r\\n]{1,2}\\s*/g, '');\n    r = s2.length <= 60 ? s2 : s0;\n    return r;\n  };\n  time_now = function() {\n    return (new Date).getTime();\n  };\n  log = (function() {\n    var dye, factory, got, histories, log_label;\n    dye = (function() {\n      var cavailable, palette;\n      cavailable = (typeof window === \"undefined\" || window === null) && (typeof process !== \"undefined\" && process !== null) && !process.env.NODE_DISABLE_COLORS;\n      palette = {\n        bold: '\\x1B[0;1m',\n        red: '\\x1B[0;31m',\n        green: '\\x1B[0;32m',\n        yellow: '\\x1B[0;33m',\n        blue: '\\x1B[0;34m',\n        bold_grey: '\\x1B[1;30m'\n      };\n      if (!cavailable) {\n        return function(color) {\n          return function(s) {\n            return s;\n          };\n        };\n      } else {\n        return function(color) {\n          return function(s) {\n            return \"\" + palette[color] + s + '\\x1B[0m';\n          };\n        };\n      }\n    })();\n    log_label = (function() {\n      var flag_palette, op_flag;\n      flag_palette = {\n        '#': 'bold_grey',\n        'I': 'green',\n        'E': 'red',\n        'W': 'yellow'\n      };\n      op_flag = function(op) {\n        if (op === 'log') {\n          return '#';\n        } else {\n          return op[0].toUpperCase();\n        }\n      };\n      return function(op) {\n        var flag;\n        flag = op_flag(op);\n        return dye(flag_palette[flag])(flag);\n      };\n    })();\n    histories = [];\n    factory = function(op) {\n      var prefix;\n      prefix = \"\" + (dye('bold_grey')('#')) + (log_label(op));\n      return function() {\n        var args, ball, eval_result, expr, f, i, len, start_time, time_used;\n        args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        ball = [];\n        for (i = 0, len = args.length; i < len; i++) {\n          f = args[i];\n          if (typeof f === 'function') {\n            expr = literal(f);\n            start_time = time_now();\n            eval_result = f();\n            time_used = time_now() - start_time;\n            ball.push(prefix + \" \" + (dye('green')(expr)) + \" \" + (dye('bold_grey')('==>')), eval_result);\n            if (time_used > 0) {\n              ball.push(dye('yellow')(\"[\" + time_used + \"ms]\"));\n            }\n          } else {\n            ball.push(\"\" + prefix, f);\n          }\n        }\n        console[op].apply(console, ball);\n        histories.push(ball);\n        if (histories.length >= 10) {\n          histories.shift();\n        }\n        return null;\n      };\n    };\n    got = factory('log');\n    got.histories = histories;\n    got.info = factory('info');\n    got.warn = factory('warn');\n    got.error = got.err = factory('error');\n    return got;\n  })();\n  assert = function(f, msg) {\n    var e, r, ref;\n    if (!(f instanceof Function)) {\n      ref = [f, msg], msg = ref[0], f = ref[1];\n    }\n    try {\n      r = f();\n    } catch (error) {\n      e = error;\n      throw Error(\"Assertion Not Available: \" + (literal(f)) + \"\\n  Inner Error: \" + e);\n    }\n    if (!(r === true)) {\n      if ((msg != null) && msg instanceof Function) {\n        return msg(literal(f));\n      } else {\n        throw Error(\"Assertion Failed: \" + (msg != null ? msg : literal(f)));\n      }\n    }\n  };\n  assertEq = function(l, r, msg) {\n    var e, lv, ref, rv;\n    if (!(l instanceof Function)) {\n      ref = [l, r, msg], msg = ref[0], l = ref[1], r = ref[2];\n    }\n    try {\n      lv = l();\n      rv = r();\n    } catch (error) {\n      e = error;\n      throw Error(\"Equation Not Available: ( \" + (literal(l)) + \" ) == ( \" + (literal(r)) + \" )\\n  Inner Error: \" + e);\n    }\n    if (lv !== rv) {\n      if ((msg != null) && msg instanceof Function) {\n        return msg(literal(l), literal(r));\n      } else {\n        throw Error(\"Equation Does Not Hold:\\n  Left Expr  : \" + (literal(l)) + \"\\n  Right Expr : \" + (literal(r)) + \"\\n  Left Value : \" + lv + \"\\n  Right Value: \" + rv + \"\\n\");\n      }\n    }\n  };\n  assertEqOn = function(f) {\n    return function(l, r, msg) {\n      var e, flv, frv, lv, ref, rv;\n      if (!(l instanceof Function)) {\n        ref = [l, r, msg], msg = ref[0], l = ref[1], r = ref[2];\n      }\n      try {\n        lv = l();\n        rv = r();\n        flv = f(lv);\n        frv = f(rv);\n      } catch (error) {\n        e = error;\n        throw Error(\"Equation Not Available: ( \" + (literal(l)) + \" ) == ( \" + (literal(r)) + \" ) ON \" + f.name + \"\\n  Inner Error: \" + e);\n      }\n      if (flv !== frv) {\n        if ((msg != null) && msg instanceof Function) {\n          return msg(literal(l), literal(r), f.name);\n        } else {\n          throw Error(\"Equation Does Not Hold:\\n  Left Expr  : \" + (literal(l)) + \"\\n  Right Expr : \" + (literal(r)) + \"\\n  Compared On: \" + f.name + \"\\n  Left Value : \" + flv + \"\\n  Right Value: \" + frv + \"\\n\");\n        }\n      }\n    };\n  };\n  purify = function(f) {\n    return function() {\n      var args;\n      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      args = deepcopy(args);\n      return f.apply(null, args);\n    };\n  };\n  dict = function(pairs) {\n    var d, i, k, len, ref, v;\n    d = {};\n    for (i = 0, len = pairs.length; i < len; i++) {\n      ref = pairs[i], k = ref[0], v = ref[1];\n      d[k] = v;\n    }\n    return d;\n  };\n  ref = (function() {\n    var cp;\n    cp = function(root, dep) {\n      var k, r, v;\n      if (dep === 0 || (root == null) || typeof root !== 'object') {\n        return root;\n      }\n      if (root instanceof Array) {\n        r = (function() {\n          var i, len, results;\n          results = [];\n          for (i = 0, len = root.length; i < len; i++) {\n            v = root[i];\n            results.push(cp(v, dep - 1));\n          }\n          return results;\n        })();\n      } else {\n        r = {};\n        for (k in root) {\n          v = root[k];\n          r[k] = cp(v, dep - 1);\n        }\n      }\n      return r;\n    };\n    return {\n      copy: function(obj, depth) {\n        if (depth == null) {\n          depth = 1;\n        }\n        return cp(obj, depth);\n      },\n      deepcopy: function(obj, depth) {\n        if (depth == null) {\n          depth = 2e308;\n        }\n        return cp(obj, depth);\n      }\n    };\n  })(), copy = ref.copy, deepcopy = ref.deepcopy;\n  extend = function(base) {\n    return function() {\n      var d, defaults, i, k, len, v;\n      defaults = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      for (i = 0, len = defaults.length; i < len; i++) {\n        d = defaults[i];\n        if (d != null) {\n          for (k in d) {\n            v = d[k];\n            if (base[k] == null) {\n              base[k] = v;\n            }\n          }\n        }\n      }\n      return base;\n    };\n  };\n  update = function(base) {\n    return function() {\n      var d, i, k, len, updates, v;\n      updates = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      for (i = 0, len = updates.length; i < len; i++) {\n        d = updates[i];\n        if (d != null) {\n          for (k in d) {\n            v = d[k];\n            base[k] = v;\n          }\n        }\n      }\n      return base;\n    };\n  };\n  overload = function(_d) {\n    var d, fallback;\n    d = copy(_d);\n    fallback = d['_'];\n    if (fallback != null) {\n      return function() {\n        var args, ref1;\n        args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        return ((ref1 = d[args.length]) != null ? ref1 : fallback).apply(null, args);\n      };\n    } else {\n      return function() {\n        var args, f;\n        args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        f = d[args.length];\n        if (f == null) {\n          throw Error(\"This Function Can't Accept \" + args.length + \" Args\");\n        } else {\n          return f.apply(null, args);\n        }\n      };\n    }\n  };\n  return {\n    log: log,\n    assert: assert,\n    assertEq: assertEq,\n    assertEqOn: assertEqOn,\n    dict: dict,\n    copy: copy,\n    deepcopy: deepcopy,\n    purify: purify,\n    extend: extend,\n    update: update,\n    overload: overload\n  };\n};\n\nmodule.exports = this_module();\n\n//# sourceMappingURL=data:application/json;base64,\n"]}