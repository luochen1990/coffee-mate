{"version":3,"sources":["/source/node_modules/browserify/node_modules/browser-pack/_prelude.js","global.js","/source/src/global.coffee","/source/node_modules/browserify/node_modules/process/browser.js","/source/node_modules/lazy-list/build/nodejs/lazy.js","/source/src/basics.coffee","/source/src/coffee-mate.coffee","/source/src/convertors.coffee","/source/src/funny.coffee","/source/src/url-helpers.coffee","/source/src/utils.coffee"],"names":["f","exports","module","define","amd","g","window","global","self","this","__CoffeeMate","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"k","mate","v","./coffee-mate",2,"cleanUpNextTick","draining","currentQueue","queue","concat","queueIndex","drainQueue","timeout","setTimeout","len","run","clearTimeout","Item","fun","array","noop","process","nextTick","args","Array","arguments","push","prototype","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","name","cwd","chdir","dir","umask",3,"this_module","slice","arg","CustomErrorType","Iterator","LazyList","ListError","Symbol","all","any","best","brk","cartProd","cons","drop","dropWhile","enumerate","filter","foldl","foreach","fromList","groupOn","head","iterate","last","lazy","list","map","maximum","maximumOn","minimum","minimumOn","naturals","nil","partition","permutations","primes","randoms","range","ref","repeat","reverse","scanl","sort","sortOn","streak","streak2","take","takeWhile","zip","zipWith","errorName","msg","CustomError","__proto__","iterator","toString","toJSON","it","next","value","done","stop","start","step","x","p","Infinity","xs","constructor","String","keys","Object","init","st","hash","normal","salt","Math","PI","sin","floor","seed","opts","ref1","rg","next_permutation","m","arr","ls","json","c","iter","ok","finished","j","prevx","op","got","buf","shift","b","fa","fb","memo","y","results","xss","xs_iter","len1","iters","apply_vector","inc_vector","limits","len_minus_1","vec","space","get_value","inc","results1","better","all_not","pairs","arg1","callback","fruit","defineProperties","break","writable","configurable","enumerable",4,"abs","ceil","combine","curry2","curry3","equal","flip","greaterEqual","greaterThan","identity","lessEqual","lessThan","minus","notEqual","pack","pluck","plus","precise","seek","sum","uncurry2","uncurry3","unpack","attr","d","parseFloat","toPrecision","lazy-list",5,"basics","convertors","funny","url_helpers","utils","extend","./basics","./convertors","./funny","./url-helpers","./utils",6,"bool","chr","float","hex","int","jsonWith","obj","ord","prettyJson","str","base","parseInt","test","charCodeAt","fromCharCode","JSON","stringify","indent","convertor","parse",7,"Y","church","fix","memoFix","memoize","get_key","cache","cached","key","ff",8,"uri_decoder","uri_encoder","component_packer","encodeURIComponent","join","component_unpacker","ref2","match","decodeURIComponent",9,"assert","assertEq","assertEqOn","copy","deepcopy","dict","function_literal","log","overload","securely","time_now","update","expr","replace","Date","getTime","dye","factory","histories","log_label","cavailable","palette","NODE_DISABLE_COLORS","bold","red","green","yellow","blue","bold_grey","color","flag_palette","op_flag","#","I","E","W","toUpperCase","flag","prefix","ball","eval_result","start_time","time_used","console","info","warn","error","err","Function","_error","lv","rv","flv","frv","cp","root","dep","depth","defaults","updates","_d","fallback","_process"],"mappings":"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","file":"global.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.__CoffeeMate = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n(function (global){\nvar k, mate, v;\n\nmate = require('./coffee-mate');\n\nfor (k in mate) {\n  v = mate[k];\n  global[k] = v;\n}\n\n\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./coffee-mate\":5}],2:[function(require,module,exports){\n// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            currentQueue[queueIndex].run();\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (!draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],3:[function(require,module,exports){\n(function() {\n  var this_module,\n    slice = [].slice;\n\n  this_module = function(arg) {\n    var CustomErrorType, Iterator, LazyList, ListError, Symbol, all, any, best, brk, cartProd, concat, cons, drop, dropWhile, enumerate, filter, foldl, foreach, fromList, groupOn, head, iterate, last, lazy, length, list, map, maximum, maximumOn, minimum, minimumOn, naturals, nil, partition, permutations, primes, randoms, range, ref, repeat, reverse, scanl, sort, sortOn, streak, streak2, take, takeWhile, zip, zipWith;\n    Symbol = arg.Symbol;\n    CustomErrorType = function(errorName) {\n      return function(msg) {\n        var CustomError;\n        CustomError = function(msg) {\n          var self;\n          self = new Error(msg);\n          self.name = errorName;\n          self.__proto__ = CustomError.prototype;\n          return self;\n        };\n        CustomError.prototype.__proto__ = Error.prototype;\n        return new CustomError(msg);\n      };\n    };\n    ListError = CustomErrorType('ListError');\n    LazyList = function(f) {\n      f[Symbol.iterator] = function() {\n        return f();\n      };\n      f.toString = function() {\n        return \"LazyList\";\n      };\n      f.toJSON = function() {\n        return list(f);\n      };\n      return f;\n    };\n    nil = LazyList(function() {\n      return nil;\n    });\n    nil.toString = function() {\n      return 'nil';\n    };\n    Iterator = function(it) {\n      it.next = function() {\n        var r;\n        r = it();\n        return {\n          value: r,\n          done: r === nil\n        };\n      };\n      it.toString = function() {\n        return \"Iterator\";\n      };\n      return it;\n    };\n    naturals = LazyList(function() {\n      var i;\n      i = -1;\n      return Iterator(function() {\n        return ++i;\n      });\n    });\n    range = function() {\n      var args;\n      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      if (args.length === 0) {\n        return naturals;\n      } else if (args.length === 1) {\n        return LazyList(function() {\n          var i, stop;\n          stop = args[0];\n          i = -1;\n          return Iterator(function() {\n            if (++i < stop) {\n              return i;\n            } else {\n              return nil;\n            }\n          });\n        });\n      } else if (args.length === 2) {\n        return LazyList(function() {\n          var i, start, stop;\n          start = args[0], stop = args[1];\n          if (start < stop) {\n            i = start - 1;\n            return Iterator(function() {\n              if (++i < stop) {\n                return i;\n              } else {\n                return nil;\n              }\n            });\n          } else {\n            i = start + 1;\n            return Iterator(function() {\n              if (--i > stop) {\n                return i;\n              } else {\n                return nil;\n              }\n            });\n          }\n        });\n      } else {\n        return LazyList(function() {\n          var i, start, step, stop;\n          start = args[0], stop = args[1], step = args[2];\n          if (stop !== start && (stop - start) * step < 0) {\n            throw ListError('ERR IN range(): YOU ARE CREATING AN UNLIMITTED RANGE');\n          }\n          i = start - step;\n          if (start < stop) {\n            return Iterator(function() {\n              if ((i += step) < stop) {\n                return i;\n              } else {\n                return nil;\n              }\n            });\n          } else {\n            return Iterator(function() {\n              if ((i += step) > stop) {\n                return i;\n              } else {\n                return nil;\n              }\n            });\n          }\n        });\n      }\n    };\n    primes = LazyList(function() {\n      return filter(function(x) {\n        return all(function(p) {\n          return x % p !== 0;\n        })(takeWhile(function(p) {\n          return p * p <= x;\n        })(range(2, Infinity)));\n      })(range(2, Infinity))();\n    });\n    lazy = function(xs) {\n      var ref;\n      if (typeof xs === 'function') {\n        if (xs[Symbol.iterator] != null) {\n          return xs;\n        } else {\n          return LazyList(xs);\n        }\n      } else if ((ref = xs.constructor) === Array || ref === String) {\n        return LazyList(function() {\n          var i;\n          i = -1;\n          return Iterator(function() {\n            if ((++i) < xs.length) {\n              return xs[i];\n            } else {\n              return nil;\n            }\n          });\n        });\n      } else if (xs[Symbol.iterator] != null) {\n        return LazyList(function() {\n          var it;\n          it = xs[Symbol.iterator]();\n          return Iterator(function() {\n            var r;\n            r = it.next();\n            if (r.done) {\n              return nil;\n            } else {\n              return r.value;\n            }\n          });\n        });\n      } else {\n        throw ListError('lazy(xs): xs is neither Array nor Iterable');\n      }\n    };\n    enumerate = function(it) {\n      if ((it[Symbol.iterator] != null) || it instanceof Array) {\n        return zip(naturals, it);\n      } else {\n        return LazyList(function() {\n          var i, keys;\n          keys = Object.keys(it);\n          i = -1;\n          return Iterator(function() {\n            var k;\n            if (++i < keys.length) {\n              return [(k = keys[i]), it[k]];\n            } else {\n              return nil;\n            }\n          });\n        });\n      }\n    };\n    repeat = function(x) {\n      return LazyList(function() {\n        return Iterator(function() {\n          return x;\n        });\n      });\n    };\n    iterate = function(next, init) {\n      return LazyList(function() {\n        var st;\n        st = init;\n        return Iterator(function() {\n          var r;\n          r = st;\n          st = next(st);\n          return r;\n        });\n      });\n    };\n    randoms = (function() {\n      var hash, normal, salt;\n      salt = Math.PI / 3.0;\n      hash = function(x) {\n        x = Math.sin(x + salt) * 1e4;\n        return x - Math.floor(x);\n      };\n      normal = function(seed) {\n        return iterate(hash, hash(seed));\n      };\n      return function(opts) {\n        var k, ref, ref1, rg, s, seed;\n        if (opts == null) {\n          return normal(0);\n        } else if (typeof opts === 'number') {\n          return normal(opts);\n        } else {\n          seed = (ref = opts.seed) != null ? ref : 0;\n          rg = opts.range;\n          if (rg != null) {\n            if (typeof rg === 'number') {\n              return map(function(x) {\n                return Math.floor(x * rg);\n              })(normal(seed));\n            } else {\n              ref1 = [rg[0], rg[1] - rg[0] + 1], s = ref1[0], k = ref1[1];\n              return map(function(x) {\n                return s + Math.floor(x * k);\n              })(normal(seed));\n            }\n          } else {\n            return normal(seed);\n          }\n        }\n      };\n    })();\n    permutations = (function() {\n      var next_permutation;\n      next_permutation = function(x) {\n        var l, m, r, ref, ref1;\n        x = x.slice(0);\n        l = x.length - 1;\n        while (l >= 1 && x[l] <= x[l - 1]) {\n          --l;\n        }\n        if (l !== 0) {\n          m = x.length - 1;\n          while (m > l - 1 && x[m] <= x[l - 1]) {\n            --m;\n          }\n          ref = [x[l - 1], x[m]], x[m] = ref[0], x[l - 1] = ref[1];\n        }\n        r = x.length - 1;\n        while (l < r) {\n          ref1 = [x[r], x[l]], x[l] = ref1[0], x[r] = ref1[1];\n          ++l;\n          --r;\n        }\n        return x;\n      };\n      return function(xs) {\n        var arr;\n        arr = list(xs);\n        if (arr.length === 0) {\n          return nil;\n        } else {\n          return cons(arr.slice(0))(takeWhile(function(ls) {\n            return json(ls) !== json(arr);\n          })(drop(1)(iterate(next_permutation, arr))));\n        }\n      };\n    })();\n    take = function(n) {\n      return function(xs) {\n        return LazyList(function() {\n          var c, iter;\n          iter = lazy(xs)[Symbol.iterator]();\n          c = -1;\n          return Iterator(function() {\n            if (++c < n) {\n              return iter();\n            } else {\n              return nil;\n            }\n          });\n        });\n      };\n    };\n    takeWhile = function(ok) {\n      return function(xs) {\n        return LazyList(function() {\n          var iter;\n          iter = lazy(xs)[Symbol.iterator]();\n          return Iterator(function() {\n            var x;\n            if ((x = iter()) !== nil && ok(x)) {\n              return x;\n            } else {\n              return nil;\n            }\n          });\n        });\n      };\n    };\n    drop = function(n) {\n      return function(xs) {\n        return LazyList(function() {\n          var finished, i, iter, j, ref;\n          iter = lazy(xs)[Symbol.iterator]();\n          finished = false;\n          for (i = j = 0, ref = n; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n            finished || (finished = iter() === nil);\n            if (finished) {\n              break;\n            }\n          }\n          if (finished) {\n            return function() {\n              return nil;\n            };\n          } else {\n            return iter;\n          }\n        });\n      };\n    };\n    dropWhile = function(ok) {\n      return function(xs) {\n        return LazyList(function() {\n          var iter, x;\n          iter = lazy(xs)[Symbol.iterator]();\n          while (ok(x = iter()) && x !== nil) {\n            null;\n          }\n          return Iterator(function() {\n            var prevx, ref;\n            ref = [x, iter()], prevx = ref[0], x = ref[1];\n            return prevx;\n          });\n        });\n      };\n    };\n    cons = function(x) {\n      return function(xs) {\n        return LazyList(function() {\n          var iter;\n          iter = null;\n          return Iterator(function() {\n            if (iter === null) {\n              iter = lazy(xs)[Symbol.iterator]();\n              return x;\n            } else {\n              return iter();\n            }\n          });\n        });\n      };\n    };\n    map = function(f) {\n      return function(xs) {\n        return LazyList(function() {\n          var iter;\n          iter = lazy(xs)[Symbol.iterator]();\n          return Iterator(function() {\n            var x;\n            if ((x = iter()) !== nil) {\n              return f(x);\n            } else {\n              return nil;\n            }\n          });\n        });\n      };\n    };\n    filter = function(ok) {\n      return function(xs) {\n        return LazyList(function() {\n          var iter;\n          iter = lazy(xs)[Symbol.iterator]();\n          return Iterator(function() {\n            var x;\n            while ((x = iter()) !== nil && !ok(x)) {\n              null;\n            }\n            return x;\n          });\n        });\n      };\n    };\n    scanl = function(op) {\n      return function(r) {\n        return function(xs) {\n          return LazyList(function() {\n            var iter;\n            iter = lazy(xs)[Symbol.iterator]();\n            return Iterator(function() {\n              var got, x;\n              got = r;\n              r = (x = iter()) !== nil ? op(r)(x) : nil;\n              return got;\n            });\n          });\n        };\n      };\n    };\n    streak = function(n) {\n      if (n < 1) {\n        return nil;\n      } else {\n        return function(xs) {\n          return drop(n - 1)(LazyList(function() {\n            var buf, iter;\n            iter = lazy(xs)[Symbol.iterator]();\n            buf = [];\n            return Iterator(function() {\n              var x;\n              if ((x = iter()) === nil) {\n                return nil;\n              }\n              buf.push(x);\n              if (buf.length > n) {\n                buf.shift(1);\n              }\n              return buf.slice(0);\n            });\n          }));\n        };\n      }\n    };\n    streak2 = function(n) {\n      return function(xs) {\n        return streak(n)(concat([xs, take(n - 1)(xs)]));\n      };\n    };\n    reverse = function(xs) {\n      var ref;\n      if ((ref = xs.constructor) === Array || ref === String) {\n        return LazyList(function() {\n          var i;\n          i = xs.length;\n          return Iterator(function() {\n            if ((--i) >= 0) {\n              return xs[i];\n            } else {\n              return nil;\n            }\n          });\n        });\n      } else {\n        return list(lazy(xs)).reverse();\n      }\n    };\n    sort = function(xs) {\n      var arr;\n      arr = list(lazy(xs));\n      return arr.sort(function(a, b) {\n        return (a > b) - (a < b);\n      });\n    };\n    sortOn = function(f) {\n      return function(xs) {\n        var arr;\n        arr = list(lazy(xs));\n        return arr.sort(function(a, b) {\n          var fa, fb;\n          return ((fa = f(a)) > (fb = f(b))) - (fa < fb);\n        });\n      };\n    };\n    groupOn = function(f) {\n      return function(xs) {\n        var k, memo, v;\n        memo = {};\n        foreach(xs, function(x) {\n          var y;\n          y = f(x);\n          if (memo[y] == null) {\n            memo[y] = [];\n          }\n          return memo[y].push(x);\n        });\n        return (function() {\n          var results;\n          results = [];\n          for (k in memo) {\n            v = memo[k];\n            results.push(v);\n          }\n          return results;\n        })();\n      };\n    };\n    partition = function(f) {\n      return function(xs) {\n        var memo;\n        memo = [[], []];\n        foreach(xs, function(x) {\n          var y;\n          y = !f(x) + 0;\n          return memo[y].push(x);\n        });\n        return memo;\n      };\n    };\n    concat = function(xss) {\n      xss = filter(function(x) {\n        var ref;\n        return ((ref = x.constructor) !== Array && ref !== String) || x.length > 0;\n      })(xss);\n      return LazyList(function() {\n        var iter, xs, xs_iter;\n        xs_iter = lazy(xss)[Symbol.iterator]();\n        xs = xs_iter();\n        iter = lazy(xs)[Symbol.iterator]();\n        return Iterator(function() {\n          var x;\n          if ((x = iter()) !== nil) {\n            return x;\n          } else if ((xs = xs_iter()) !== nil) {\n            iter = lazy(xs)[Symbol.iterator]();\n            return iter();\n          } else {\n            return nil;\n          }\n        });\n      });\n    };\n    ref = (function() {\n      var finished, zip, zipWith;\n      finished = function(arr) {\n        var j, len1, x;\n        for (j = 0, len1 = arr.length; j < len1; j++) {\n          x = arr[j];\n          if (x === nil) {\n            return true;\n          }\n        }\n        return false;\n      };\n      zip = function() {\n        var xss;\n        xss = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        return LazyList(function() {\n          var iters, xs;\n          iters = (function() {\n            var j, len1, results;\n            results = [];\n            for (j = 0, len1 = xss.length; j < len1; j++) {\n              xs = xss[j];\n              results.push(lazy(xs)[Symbol.iterator]());\n            }\n            return results;\n          })();\n          return Iterator(function() {\n            var iter, next;\n            next = (function() {\n              var j, len1, results;\n              results = [];\n              for (j = 0, len1 = iters.length; j < len1; j++) {\n                iter = iters[j];\n                results.push(iter());\n              }\n              return results;\n            })();\n            if (finished(next)) {\n              return nil;\n            } else {\n              return next;\n            }\n          });\n        });\n      };\n      zipWith = function(f) {\n        return function() {\n          var xss;\n          xss = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n          return LazyList(function() {\n            var iters, xs;\n            iters = (function() {\n              var j, len1, results;\n              results = [];\n              for (j = 0, len1 = xss.length; j < len1; j++) {\n                xs = xss[j];\n                results.push(lazy(xs)[Symbol.iterator]());\n              }\n              return results;\n            })();\n            return Iterator(function() {\n              var iter, next;\n              next = (function() {\n                var j, len1, results;\n                results = [];\n                for (j = 0, len1 = iters.length; j < len1; j++) {\n                  iter = iters[j];\n                  results.push(iter());\n                }\n                return results;\n              })();\n              if (finished(next)) {\n                return nil;\n              } else {\n                return f.apply(null, next);\n              }\n            });\n          });\n        };\n      };\n      return {\n        zip: zip,\n        zipWith: zipWith\n      };\n    })(), zip = ref.zip, zipWith = ref.zipWith;\n    cartProd = (function() {\n      var apply_vector, inc_vector;\n      inc_vector = function(limits) {\n        var len_minus_1;\n        len_minus_1 = limits.length - 1;\n        return function(vec) {\n          var i;\n          i = len_minus_1;\n          while (!(++vec[i] < limits[i] || i <= 0)) {\n            vec[i--] = 0;\n          }\n          return vec;\n        };\n      };\n      apply_vector = function(space) {\n        var len;\n        len = space.length;\n        return function(vec) {\n          var i, j, ref1, results;\n          results = [];\n          for (i = j = 0, ref1 = len; 0 <= ref1 ? j < ref1 : j > ref1; i = 0 <= ref1 ? ++j : --j) {\n            results.push(space[i][vec[i]]);\n          }\n          return results;\n        };\n      };\n      return function() {\n        var xss;\n        xss = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        return LazyList(function() {\n          var get_value, i, inc, j, len, len1, limits, v, xs;\n          xss = (function() {\n            var j, len1, results;\n            results = [];\n            for (j = 0, len1 = xss.length; j < len1; j++) {\n              xs = xss[j];\n              results.push(list(xs));\n            }\n            return results;\n          })();\n          limits = (function() {\n            var j, ref1, results;\n            results = [];\n            for (i = j = 0, ref1 = xss.length; 0 <= ref1 ? j < ref1 : j > ref1; i = 0 <= ref1 ? ++j : --j) {\n              results.push(xss[i].length);\n            }\n            return results;\n          })();\n          for (j = 0, len1 = limits.length; j < len1; j++) {\n            len = limits[j];\n            if (len === 0) {\n              return nil;\n            }\n          }\n          inc = inc_vector(limits);\n          get_value = apply_vector(xss);\n          v = (function() {\n            var o, ref1, results;\n            results = [];\n            for (i = o = 0, ref1 = xss.length; 0 <= ref1 ? o < ref1 : o > ref1; i = 0 <= ref1 ? ++o : --o) {\n              results.push(0);\n            }\n            return results;\n          })();\n          return Iterator(function() {\n            var r;\n            if (v[0] < limits[0]) {\n              r = get_value(v);\n              inc(v);\n              return r;\n            } else {\n              return nil;\n            }\n          });\n        });\n      };\n    })();\n    list = function(xs) {\n      var it, n, results, results1, x;\n      if (xs instanceof Array) {\n        return xs;\n      } else if (typeof xs === 'function') {\n        it = xs[Symbol.iterator]();\n        results = [];\n        while ((x = it()) !== nil) {\n          results.push(x);\n        }\n        return results;\n      } else if (xs[Symbol.iterator] != null) {\n        it = lazy(xs)[Symbol.iterator]();\n        results1 = [];\n        while ((x = it()) !== nil) {\n          results1.push(x);\n        }\n        return results1;\n      } else if (typeof xs === 'number') {\n        n = xs;\n        return function(xs) {\n          return list(take(n)(xs));\n        };\n      } else {\n        throw ListError('list(xs): xs is neither Array nor Iterable');\n      }\n    };\n    head = function(xs) {\n      var iter, r, ref1;\n      if ((ref1 = xs.constructor) === Array || ref1 === String) {\n        if (xs.length > 0) {\n          return xs[0];\n        } else {\n          throw ListError(\"head() used on empty list.\");\n        }\n      } else {\n        iter = lazy(xs)[Symbol.iterator]();\n        if ((r = iter()) !== nil) {\n          return r;\n        } else {\n          throw ListError(\"head() used on empty list.\");\n        }\n      }\n    };\n    last = function(xs) {\n      var iter, r, ref1, x;\n      if ((ref1 = xs.constructor) === Array || ref1 === String) {\n        if (xs.length > 0) {\n          return xs[xs.length - 1];\n        } else {\n          throw ListError(\"last() used on empty list.\");\n        }\n      } else {\n        iter = lazy(xs)[Symbol.iterator]();\n        r = nil;\n        while ((x = iter()) !== nil) {\n          r = x;\n        }\n        if (r !== nil) {\n          return r;\n        } else {\n          throw ListError(\"last() used on empty list.\");\n        }\n      }\n    };\n    length = function(xs) {\n      var iter, r, ref1, x;\n      if ((ref1 = xs.constructor) === Array || ref1 === String) {\n        return xs.length;\n      } else {\n        iter = lazy(xs)[Symbol.iterator]();\n        r = 0;\n        while ((x = iter()) !== nil) {\n          ++r;\n        }\n        return r;\n      }\n    };\n    foldl = function(op) {\n      return function(init) {\n        return function(xs) {\n          var iter, r, x;\n          r = init;\n          iter = lazy(xs)[Symbol.iterator]();\n          while ((x = iter()) !== nil) {\n            r = op(r)(x);\n          }\n          return r;\n        };\n      };\n    };\n    best = function(better) {\n      return function(xs) {\n        var it, iter, r;\n        iter = lazy(xs)[Symbol.iterator]();\n        if ((r = iter()) === nil) {\n          return null;\n        }\n        while ((it = iter()) !== nil) {\n          r = better(it, r) ? it : r;\n        }\n        return r;\n      };\n    };\n    maximumOn = function(f) {\n      return best(function(a, b) {\n        return f(a) > f(b);\n      });\n    };\n    minimumOn = function(f) {\n      return best(function(a, b) {\n        return f(a) > f(b);\n      });\n    };\n    maximum = best(function(x, y) {\n      return x > y;\n    });\n    minimum = best(function(x, y) {\n      return x < y;\n    });\n    all = function(f) {\n      if (typeof f !== 'function') {\n        f = (function(x) {\n          return x === f;\n        });\n      }\n      return function(xs) {\n        var iter, x;\n        iter = lazy(xs)[Symbol.iterator]();\n        while ((x = iter()) !== nil) {\n          if (!f(x)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    };\n    any = function(f) {\n      var all_not;\n      all_not = all(function(x) {\n        return !f(x);\n      });\n      return function(xs) {\n        return !(all_not(xs));\n      };\n    };\n    fromList = function(pairs) {\n      var r;\n      r = {};\n      foreach(pairs, function(arg1) {\n        var k, v;\n        k = arg1[0], v = arg1[1];\n        if (v !== void 0) {\n          return r[k] = v;\n        }\n      });\n      return r;\n    };\n    brk = function() {\n      return brk;\n    };\n    brk.toString = function() {\n      return 'foreach.break';\n    };\n    foreach = function(xs, callback, fruit) {\n      var iter, x;\n      iter = lazy(xs)[Symbol.iterator]();\n      while ((x = iter()) !== nil) {\n        if (callback(x, fruit) === brk) {\n          break;\n        }\n      }\n      return fruit;\n    };\n    Object.defineProperties(foreach, {\n      \"break\": {\n        writable: false,\n        configurable: false,\n        enumerable: false,\n        value: brk\n      }\n    });\n    return {\n      nil: nil,\n      LazyList: LazyList,\n      Iterator: Iterator,\n      Symbol: Symbol,\n      naturals: naturals,\n      range: range,\n      primes: primes,\n      lazy: lazy,\n      enumerate: enumerate,\n      repeat: repeat,\n      iterate: iterate,\n      randoms: randoms,\n      permutations: permutations,\n      cons: cons,\n      map: map,\n      filter: filter,\n      take: take,\n      takeWhile: takeWhile,\n      drop: drop,\n      dropWhile: dropWhile,\n      scanl: scanl,\n      streak: streak,\n      streak2: streak2,\n      reverse: reverse,\n      sort: sort,\n      sortOn: sortOn,\n      groupOn: groupOn,\n      partition: partition,\n      concat: concat,\n      zip: zip,\n      zipWith: zipWith,\n      cartProd: cartProd,\n      list: list,\n      head: head,\n      last: last,\n      length: length,\n      foldl: foldl,\n      best: best,\n      maximum: maximum,\n      minimum: minimum,\n      maximumOn: maximumOn,\n      minimumOn: minimumOn,\n      all: all,\n      any: any,\n      fromList: fromList,\n      foreach: foreach\n    };\n  };\n\n  module.exports = this_module({\n    Symbol: typeof Symbol !== \"undefined\" && Symbol !== null ? Symbol : {\n      iterator: 'iter'\n    }\n  });\n\n}).call(this);\n\n\n},{}],4:[function(require,module,exports){\nvar this_module,\n  slice = [].slice;\n\nthis_module = function(arg) {\n  var abs, ceil, combine, curry2, curry3, equal, flip, floor, foldl, greaterEqual, greaterThan, identity, lessEqual, lessThan, minus, notEqual, pack, pluck, plus, precise, seek, sum, uncurry2, uncurry3, unpack;\n  foldl = arg.foldl;\n  identity = function(x) {\n    return x;\n  };\n  flip = function(f) {\n    return function(x) {\n      return function(y) {\n        return f(y)(x);\n      };\n    };\n  };\n  combine = function(f) {\n    return function(g) {\n      return function(x) {\n        return f(g(x));\n      };\n    };\n  };\n  curry2 = function(f) {\n    return function(a) {\n      return function(b) {\n        return f(a, b);\n      };\n    };\n  };\n  curry3 = function(f) {\n    return function(a) {\n      return function(b) {\n        return function(c) {\n          return f(a, b, c);\n        };\n      };\n    };\n  };\n  uncurry2 = function(f) {\n    return function(a, b) {\n      return f(a)(b);\n    };\n  };\n  uncurry3 = function(f) {\n    return function(a, b, c) {\n      return f(a)(b)(c);\n    };\n  };\n  pack = function(f) {\n    return function(arr) {\n      return f.apply(null, arr);\n    };\n  };\n  unpack = function(f) {\n    return function() {\n      var arr;\n      arr = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      return f(arr);\n    };\n  };\n  seek = function(arr) {\n    return function(i) {\n      return arr[i];\n    };\n  };\n  pluck = function(attr) {\n    return function(d) {\n      return d[attr];\n    };\n  };\n  equal = function(it) {\n    return function(x) {\n      return x === it;\n    };\n  };\n  notEqual = function(it) {\n    return function(x) {\n      return x !== it;\n    };\n  };\n  lessThan = function(it) {\n    return function(x) {\n      return x < it;\n    };\n  };\n  greaterThan = function(it) {\n    return function(x) {\n      return x > it;\n    };\n  };\n  lessEqual = function(it) {\n    return function(x) {\n      return x <= it;\n    };\n  };\n  greaterEqual = function(it) {\n    return function(x) {\n      return x >= it;\n    };\n  };\n  plus = function(x) {\n    return function(y) {\n      return x + y;\n    };\n  };\n  minus = function(x) {\n    return function(y) {\n      return x - y;\n    };\n  };\n  abs = Math.abs;\n  floor = Math.floor;\n  ceil = Math.ceil;\n  precise = function(n) {\n    return function(x) {\n      return parseFloat(x.toPrecision(n));\n    };\n  };\n  sum = foldl(plus)(0);\n  return {\n    identity: identity,\n    flip: flip,\n    combine: combine,\n    curry2: curry2,\n    curry3: curry3,\n    uncurry2: uncurry2,\n    uncurry3: uncurry3,\n    pack: pack,\n    unpack: unpack,\n    seek: seek,\n    pluck: pluck,\n    equal: equal,\n    notEqual: notEqual,\n    lessThan: lessThan,\n    lessEqual: lessEqual,\n    greaterThan: greaterThan,\n    greaterEqual: greaterEqual,\n    plus: plus,\n    minus: minus,\n    abs: abs,\n    floor: floor,\n    ceil: ceil,\n    precise: precise,\n    sum: sum\n  };\n};\n\nmodule.exports = this_module({\n  foldl: require('lazy-list').foldl\n});\n\n\n},{\"lazy-list\":3}],5:[function(require,module,exports){\nvar basics, convertors, funny, lazy, url_helpers, utils;\n\nutils = require('./utils');\n\nbasics = require('./basics');\n\nlazy = require('lazy-list');\n\nfunny = require('./funny');\n\nconvertors = require('./convertors');\n\nurl_helpers = require('./url-helpers');\n\nmodule.exports = utils.extend({})(utils, basics, lazy, funny, convertors, url_helpers);\n\n\n},{\"./basics\":4,\"./convertors\":6,\"./funny\":7,\"./url-helpers\":8,\"./utils\":9,\"lazy-list\":3}],6:[function(require,module,exports){\nvar this_module;\n\nthis_module = function() {\n  var bool, chr, float, hex, int, json, jsonWith, obj, ord, prettyJson, str;\n  int = function(s, base) {\n    var r;\n    if (typeof s === 'string') {\n      r = parseInt(s, base);\n      if (!((s.slice != null) && r === parseInt(s.slice(0, -1), base))) {\n        return r;\n      } else {\n        return null;\n      }\n    } else {\n      return parseInt(0 + s);\n    }\n  };\n  float = function(s) {\n    if (/^-?[0-9]*(\\.[0-9]+)?([eE]-?[0-9]+)?$/.test(s)) {\n      return parseFloat(s);\n    } else {\n      return null;\n    }\n  };\n  str = function(x, base) {\n    return x.toString(base);\n  };\n  bool = function(x) {\n    if (x === true || x === false) {\n      return x;\n    } else {\n      return null;\n    }\n  };\n  hex = function(x) {\n    return x.toString(16);\n  };\n  ord = function(c) {\n    return c.charCodeAt();\n  };\n  chr = function(x) {\n    return String.fromCharCode(x);\n  };\n  json = function(it) {\n    return JSON.stringify(it);\n  };\n  jsonWith = function(indent, convertor) {\n    return function(it) {\n      return JSON.stringify(it, convertor, indent);\n    };\n  };\n  prettyJson = function(it) {\n    return JSON.stringify(it, null, 4);\n  };\n  obj = function(s) {\n    return JSON.parse(s);\n  };\n  return {\n    int: int,\n    float: float,\n    bool: bool,\n    str: str,\n    hex: hex,\n    ord: ord,\n    chr: chr,\n    json: json,\n    jsonWith: jsonWith,\n    prettyJson: prettyJson,\n    obj: obj\n  };\n};\n\nmodule.exports = this_module();\n\n\n},{}],7:[function(require,module,exports){\nvar this_module,\n  slice = [].slice;\n\nthis_module = function() {\n  var Y, church, fix, memoFix, memoize;\n  church = function(n) {\n    var iter;\n    iter = function(f, n, r) {\n      if (n === 0) {\n        return r;\n      } else {\n        return iter(f, n - 1, f(r));\n      }\n    };\n    return function(f) {\n      return function(x) {\n        return iter(f, n + 0, x);\n      };\n    };\n  };\n  Y = function(f) {\n    return (function(x) {\n      return x(x);\n    })((function(x) {\n      return f((function(y) {\n        return (x(x))(y);\n      }));\n    }));\n  };\n  memoize = function(f, get_key) {\n    var cache;\n    if (get_key == null) {\n      get_key = (function() {\n        var args;\n        args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        return json(args);\n      });\n    }\n    cache = {};\n    return function() {\n      var args, cached, key, r;\n      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      key = get_key.apply(null, args);\n      cached = cache[key];\n      if (cached != null) {\n        return cached;\n      } else {\n        r = f.apply(null, args);\n        cache[key] = r;\n        return r;\n      }\n    };\n  };\n  fix = Y;\n  memoFix = function(ff) {\n    var f;\n    f = memoize(ff((function() {\n      var args;\n      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      return f.apply(null, args);\n    })));\n    return f;\n  };\n  return {\n    church: church,\n    Y: Y,\n    memoize: memoize,\n    fix: fix,\n    memoFix: memoFix\n  };\n};\n\nmodule.exports = this_module();\n\n\n},{}],8:[function(require,module,exports){\nvar this_module;\n\nthis_module = function() {\n  var uri_decoder, uri_encoder;\n  uri_encoder = function(component_packer) {\n    if (component_packer == null) {\n      component_packer = str;\n    }\n    return function(obj) {\n      var k, v;\n      return ((function() {\n        var results;\n        results = [];\n        for (k in obj) {\n          v = obj[k];\n          if (v !== void 0) {\n            results.push((encodeURIComponent(k)) + \"=\" + (encodeURIComponent(component_packer(v))));\n          }\n        }\n        return results;\n      })()).join('&');\n    };\n  };\n  uri_decoder = function(component_unpacker) {\n    if (component_unpacker == null) {\n      component_unpacker = (function(s) {\n        return s;\n      });\n    }\n    return function(str) {\n      var d, i, j, k, len, ref, ref1, ref2, s, v;\n      d = {};\n      ref1 = (ref = str.match(/[^?=&]+=[^&]*/g)) != null ? ref : [];\n      for (i = 0, len = ref1.length; i < len; i++) {\n        s = ref1[i];\n        ref2 = s.match(/([^=]+)=(.*)/), j = ref2.length - 2, k = ref2[j++], v = ref2[j++];\n        d[decodeURIComponent(k)] = component_unpacker(decodeURIComponent(v));\n      }\n      return d;\n    };\n  };\n  return {\n    uri_encoder: uri_encoder,\n    uri_decoder: uri_decoder\n  };\n};\n\nmodule.exports = this_module();\n\n\n},{}],9:[function(require,module,exports){\n(function (process){\nvar this_module,\n  slice = [].slice;\n\nthis_module = function() {\n  var assert, assertEq, assertEqOn, copy, deepcopy, dict, extend, function_literal, log, overload, ref, securely, time_now, update;\n  function_literal = function(f) {\n    var expr;\n    expr = f.toString().replace(/^\\s*function\\s?\\(\\s?\\)\\s?{\\s*return\\s*([^]*?);?\\s*}$/, '$1');\n    if (expr.length <= 100) {\n      expr = expr.replace(/[\\r\\n]{1,2}\\s*/g, '');\n    }\n    return expr;\n  };\n  time_now = function() {\n    return (new Date).getTime();\n  };\n  log = (function() {\n    var dye, factory, got, histories, log_label;\n    dye = (function() {\n      var cavailable, palette;\n      cavailable = (typeof window === \"undefined\" || window === null) && (typeof process !== \"undefined\" && process !== null) && !process.env.NODE_DISABLE_COLORS;\n      palette = {\n        bold: '\\x1B[0;1m',\n        red: '\\x1B[0;31m',\n        green: '\\x1B[0;32m',\n        yellow: '\\x1B[0;33m',\n        blue: '\\x1B[0;34m',\n        bold_grey: '\\x1B[1;30m'\n      };\n      if (!cavailable) {\n        return function(color) {\n          return function(s) {\n            return s;\n          };\n        };\n      } else {\n        return function(color) {\n          return function(s) {\n            return \"\" + palette[color] + s + '\\x1B[0m';\n          };\n        };\n      }\n    })();\n    log_label = (function() {\n      var flag_palette, op_flag;\n      flag_palette = {\n        '#': 'bold_grey',\n        'I': 'green',\n        'E': 'red',\n        'W': 'yellow'\n      };\n      op_flag = function(op) {\n        if (op === 'log') {\n          return '#';\n        } else {\n          return op[0].toUpperCase();\n        }\n      };\n      return function(op) {\n        var flag;\n        flag = op_flag(op);\n        return dye(flag_palette[flag])(flag);\n      };\n    })();\n    histories = [];\n    factory = function(op) {\n      var prefix;\n      prefix = \"\" + (dye('bold_grey')('#')) + (log_label(op));\n      return function() {\n        var args, ball, eval_result, expr, f, i, len, start_time, time_used;\n        args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        ball = [];\n        for (i = 0, len = args.length; i < len; i++) {\n          f = args[i];\n          if (typeof f === 'function') {\n            expr = function_literal(f);\n            start_time = time_now();\n            eval_result = f();\n            time_used = time_now() - start_time;\n            ball.push(prefix + \" \" + (dye('green')(expr)) + \" \" + (dye('bold_grey')('==>')), eval_result);\n            if (time_used > 0) {\n              ball.push(dye('yellow')(\"[\" + time_used + \"ms]\"));\n            }\n          } else {\n            ball.push(\"\" + prefix, f);\n          }\n        }\n        console[op].apply(console, ball);\n        histories.push(ball);\n        if (histories.length >= 10) {\n          histories.shift();\n        }\n        return null;\n      };\n    };\n    got = factory('log');\n    got.histories = histories;\n    got.info = factory('info');\n    got.warn = factory('warn');\n    got.error = got.err = factory('error');\n    return got;\n  })();\n  assert = function(f, msg) {\n    var e, r, ref;\n    if (!(f instanceof Function)) {\n      ref = [msg, f], f = ref[0], msg = ref[1];\n    }\n    try {\n      r = f();\n    } catch (_error) {\n      e = _error;\n      throw Error(\"Assertion \" + (msg != null ? msg : function_literal(f)) + \" Unknown:\\n\" + e);\n    }\n    if (!r) {\n      throw Error(\"Assertion \" + (msg != null ? msg : function_literal(f)) + \" Failed!\");\n    }\n  };\n  assertEq = function(l, r) {\n    var e, lv, rv;\n    try {\n      lv = l();\n      rv = r();\n    } catch (_error) {\n      e = _error;\n      throw Error(\"Equation Between \" + (function_literal(l)) + \" And \" + (function_literal(r)) + \" Unknown:\\n\" + e);\n    }\n    if (lv !== rv) {\n      throw Error(\"Equation Failed:\\n\\t\" + (function_literal(l)) + \" IS \" + lv + \" BUT\\n\\t\" + (function_literal(r)) + \" IS \" + rv + \".\");\n    }\n  };\n  assertEqOn = function(f) {\n    return function(l, r) {\n      var e, flv, frv, lv, rv;\n      try {\n        lv = l();\n        rv = r();\n        flv = f(lv);\n        frv = f(rv);\n      } catch (_error) {\n        e = _error;\n        throw Error(\"MAPPED Equation Between \" + (function_literal(l)) + \" And \" + (function_literal(r)) + \" Unknown:\\n\" + e);\n      }\n      if (flv !== frv) {\n        throw Error(\"Equation Failed:\\n\\t\" + (function_literal(l)) + \" IS \" + lv + \" AND MAPPED TO \" + flv + \" BUT\\n\\t\" + (function_literal(r)) + \" IS \" + rv + \" AND MAPPED TO \" + frv + \".\");\n      }\n    };\n  };\n  securely = function(f) {\n    return function() {\n      var args;\n      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      args = deepcopy(args);\n      return f.apply(null, args);\n    };\n  };\n  dict = function(pairs) {\n    var d, i, k, len, ref, v;\n    d = {};\n    for (i = 0, len = pairs.length; i < len; i++) {\n      ref = pairs[i], k = ref[0], v = ref[1];\n      d[k] = v;\n    }\n    return d;\n  };\n  ref = (function() {\n    var cp;\n    cp = function(root, dep) {\n      var k, r, v;\n      if (dep === 0 || (root == null) || typeof root !== 'object') {\n        return root;\n      }\n      if (root instanceof Array) {\n        r = (function() {\n          var i, len, results;\n          results = [];\n          for (i = 0, len = root.length; i < len; i++) {\n            v = root[i];\n            results.push(cp(v, dep - 1));\n          }\n          return results;\n        })();\n      } else {\n        r = {};\n        for (k in root) {\n          v = root[k];\n          r[k] = cp(v, dep - 1);\n        }\n      }\n      return r;\n    };\n    return {\n      copy: function(obj, depth) {\n        if (depth == null) {\n          depth = 1;\n        }\n        return cp(obj, depth);\n      },\n      deepcopy: function(obj, depth) {\n        if (depth == null) {\n          depth = Infinity;\n        }\n        return cp(obj, depth);\n      }\n    };\n  })(), copy = ref.copy, deepcopy = ref.deepcopy;\n  extend = function(base) {\n    return function() {\n      var d, defaults, i, k, len, v;\n      defaults = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      for (i = 0, len = defaults.length; i < len; i++) {\n        d = defaults[i];\n        if (d != null) {\n          for (k in d) {\n            v = d[k];\n            if (base[k] == null) {\n              base[k] = v;\n            }\n          }\n        }\n      }\n      return base;\n    };\n  };\n  update = function(base) {\n    return function() {\n      var d, i, k, len, updates, v;\n      updates = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      for (i = 0, len = updates.length; i < len; i++) {\n        d = updates[i];\n        if (d != null) {\n          for (k in d) {\n            v = d[k];\n            base[k] = v;\n          }\n        }\n      }\n      return base;\n    };\n  };\n  overload = function(_d) {\n    var d, fallback;\n    d = copy(_d);\n    fallback = d['_'];\n    if (fallback != null) {\n      return function() {\n        var args, ref1;\n        args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        return ((ref1 = d[args.length]) != null ? ref1 : fallback).apply(null, args);\n      };\n    } else {\n      return function() {\n        var args, f;\n        args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        f = d[args.length];\n        if (f == null) {\n          throw Error(\"This Function Can't Accept \" + args.length + \" Args\");\n        } else {\n          return f.apply(null, args);\n        }\n      };\n    }\n  };\n  return {\n    log: log,\n    assert: assert,\n    assertEq: assertEq,\n    assertEqOn: assertEqOn,\n    dict: dict,\n    copy: copy,\n    deepcopy: deepcopy,\n    securely: securely,\n    extend: extend,\n    update: update,\n    overload: overload\n  };\n};\n\nmodule.exports = this_module();\n\n\n\n}).call(this,require('_process'))\n\n},{\"_process\":2}]},{},[1])(1)\n});\n\n\n//# sourceMappingURL=global.js.map","#require './reinforce'\nmate = require('./coffee-mate')\nglobal[k] = v for k, v of mate\n","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            currentQueue[queueIndex].run();\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (!draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","(function() {\n  var this_module,\n    slice = [].slice;\n\n  this_module = function(arg) {\n    var CustomErrorType, Iterator, LazyList, ListError, Symbol, all, any, best, brk, cartProd, concat, cons, drop, dropWhile, enumerate, filter, foldl, foreach, fromList, groupOn, head, iterate, last, lazy, length, list, map, maximum, maximumOn, minimum, minimumOn, naturals, nil, partition, permutations, primes, randoms, range, ref, repeat, reverse, scanl, sort, sortOn, streak, streak2, take, takeWhile, zip, zipWith;\n    Symbol = arg.Symbol;\n    CustomErrorType = function(errorName) {\n      return function(msg) {\n        var CustomError;\n        CustomError = function(msg) {\n          var self;\n          self = new Error(msg);\n          self.name = errorName;\n          self.__proto__ = CustomError.prototype;\n          return self;\n        };\n        CustomError.prototype.__proto__ = Error.prototype;\n        return new CustomError(msg);\n      };\n    };\n    ListError = CustomErrorType('ListError');\n    LazyList = function(f) {\n      f[Symbol.iterator] = function() {\n        return f();\n      };\n      f.toString = function() {\n        return \"LazyList\";\n      };\n      f.toJSON = function() {\n        return list(f);\n      };\n      return f;\n    };\n    nil = LazyList(function() {\n      return nil;\n    });\n    nil.toString = function() {\n      return 'nil';\n    };\n    Iterator = function(it) {\n      it.next = function() {\n        var r;\n        r = it();\n        return {\n          value: r,\n          done: r === nil\n        };\n      };\n      it.toString = function() {\n        return \"Iterator\";\n      };\n      return it;\n    };\n    naturals = LazyList(function() {\n      var i;\n      i = -1;\n      return Iterator(function() {\n        return ++i;\n      });\n    });\n    range = function() {\n      var args;\n      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      if (args.length === 0) {\n        return naturals;\n      } else if (args.length === 1) {\n        return LazyList(function() {\n          var i, stop;\n          stop = args[0];\n          i = -1;\n          return Iterator(function() {\n            if (++i < stop) {\n              return i;\n            } else {\n              return nil;\n            }\n          });\n        });\n      } else if (args.length === 2) {\n        return LazyList(function() {\n          var i, start, stop;\n          start = args[0], stop = args[1];\n          if (start < stop) {\n            i = start - 1;\n            return Iterator(function() {\n              if (++i < stop) {\n                return i;\n              } else {\n                return nil;\n              }\n            });\n          } else {\n            i = start + 1;\n            return Iterator(function() {\n              if (--i > stop) {\n                return i;\n              } else {\n                return nil;\n              }\n            });\n          }\n        });\n      } else {\n        return LazyList(function() {\n          var i, start, step, stop;\n          start = args[0], stop = args[1], step = args[2];\n          if (stop !== start && (stop - start) * step < 0) {\n            throw ListError('ERR IN range(): YOU ARE CREATING AN UNLIMITTED RANGE');\n          }\n          i = start - step;\n          if (start < stop) {\n            return Iterator(function() {\n              if ((i += step) < stop) {\n                return i;\n              } else {\n                return nil;\n              }\n            });\n          } else {\n            return Iterator(function() {\n              if ((i += step) > stop) {\n                return i;\n              } else {\n                return nil;\n              }\n            });\n          }\n        });\n      }\n    };\n    primes = LazyList(function() {\n      return filter(function(x) {\n        return all(function(p) {\n          return x % p !== 0;\n        })(takeWhile(function(p) {\n          return p * p <= x;\n        })(range(2, Infinity)));\n      })(range(2, Infinity))();\n    });\n    lazy = function(xs) {\n      var ref;\n      if (typeof xs === 'function') {\n        if (xs[Symbol.iterator] != null) {\n          return xs;\n        } else {\n          return LazyList(xs);\n        }\n      } else if ((ref = xs.constructor) === Array || ref === String) {\n        return LazyList(function() {\n          var i;\n          i = -1;\n          return Iterator(function() {\n            if ((++i) < xs.length) {\n              return xs[i];\n            } else {\n              return nil;\n            }\n          });\n        });\n      } else if (xs[Symbol.iterator] != null) {\n        return LazyList(function() {\n          var it;\n          it = xs[Symbol.iterator]();\n          return Iterator(function() {\n            var r;\n            r = it.next();\n            if (r.done) {\n              return nil;\n            } else {\n              return r.value;\n            }\n          });\n        });\n      } else {\n        throw ListError('lazy(xs): xs is neither Array nor Iterable');\n      }\n    };\n    enumerate = function(it) {\n      if ((it[Symbol.iterator] != null) || it instanceof Array) {\n        return zip(naturals, it);\n      } else {\n        return LazyList(function() {\n          var i, keys;\n          keys = Object.keys(it);\n          i = -1;\n          return Iterator(function() {\n            var k;\n            if (++i < keys.length) {\n              return [(k = keys[i]), it[k]];\n            } else {\n              return nil;\n            }\n          });\n        });\n      }\n    };\n    repeat = function(x) {\n      return LazyList(function() {\n        return Iterator(function() {\n          return x;\n        });\n      });\n    };\n    iterate = function(next, init) {\n      return LazyList(function() {\n        var st;\n        st = init;\n        return Iterator(function() {\n          var r;\n          r = st;\n          st = next(st);\n          return r;\n        });\n      });\n    };\n    randoms = (function() {\n      var hash, normal, salt;\n      salt = Math.PI / 3.0;\n      hash = function(x) {\n        x = Math.sin(x + salt) * 1e4;\n        return x - Math.floor(x);\n      };\n      normal = function(seed) {\n        return iterate(hash, hash(seed));\n      };\n      return function(opts) {\n        var k, ref, ref1, rg, s, seed;\n        if (opts == null) {\n          return normal(0);\n        } else if (typeof opts === 'number') {\n          return normal(opts);\n        } else {\n          seed = (ref = opts.seed) != null ? ref : 0;\n          rg = opts.range;\n          if (rg != null) {\n            if (typeof rg === 'number') {\n              return map(function(x) {\n                return Math.floor(x * rg);\n              })(normal(seed));\n            } else {\n              ref1 = [rg[0], rg[1] - rg[0] + 1], s = ref1[0], k = ref1[1];\n              return map(function(x) {\n                return s + Math.floor(x * k);\n              })(normal(seed));\n            }\n          } else {\n            return normal(seed);\n          }\n        }\n      };\n    })();\n    permutations = (function() {\n      var next_permutation;\n      next_permutation = function(x) {\n        var l, m, r, ref, ref1;\n        x = x.slice(0);\n        l = x.length - 1;\n        while (l >= 1 && x[l] <= x[l - 1]) {\n          --l;\n        }\n        if (l !== 0) {\n          m = x.length - 1;\n          while (m > l - 1 && x[m] <= x[l - 1]) {\n            --m;\n          }\n          ref = [x[l - 1], x[m]], x[m] = ref[0], x[l - 1] = ref[1];\n        }\n        r = x.length - 1;\n        while (l < r) {\n          ref1 = [x[r], x[l]], x[l] = ref1[0], x[r] = ref1[1];\n          ++l;\n          --r;\n        }\n        return x;\n      };\n      return function(xs) {\n        var arr;\n        arr = list(xs);\n        if (arr.length === 0) {\n          return nil;\n        } else {\n          return cons(arr.slice(0))(takeWhile(function(ls) {\n            return json(ls) !== json(arr);\n          })(drop(1)(iterate(next_permutation, arr))));\n        }\n      };\n    })();\n    take = function(n) {\n      return function(xs) {\n        return LazyList(function() {\n          var c, iter;\n          iter = lazy(xs)[Symbol.iterator]();\n          c = -1;\n          return Iterator(function() {\n            if (++c < n) {\n              return iter();\n            } else {\n              return nil;\n            }\n          });\n        });\n      };\n    };\n    takeWhile = function(ok) {\n      return function(xs) {\n        return LazyList(function() {\n          var iter;\n          iter = lazy(xs)[Symbol.iterator]();\n          return Iterator(function() {\n            var x;\n            if ((x = iter()) !== nil && ok(x)) {\n              return x;\n            } else {\n              return nil;\n            }\n          });\n        });\n      };\n    };\n    drop = function(n) {\n      return function(xs) {\n        return LazyList(function() {\n          var finished, i, iter, j, ref;\n          iter = lazy(xs)[Symbol.iterator]();\n          finished = false;\n          for (i = j = 0, ref = n; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n            finished || (finished = iter() === nil);\n            if (finished) {\n              break;\n            }\n          }\n          if (finished) {\n            return function() {\n              return nil;\n            };\n          } else {\n            return iter;\n          }\n        });\n      };\n    };\n    dropWhile = function(ok) {\n      return function(xs) {\n        return LazyList(function() {\n          var iter, x;\n          iter = lazy(xs)[Symbol.iterator]();\n          while (ok(x = iter()) && x !== nil) {\n            null;\n          }\n          return Iterator(function() {\n            var prevx, ref;\n            ref = [x, iter()], prevx = ref[0], x = ref[1];\n            return prevx;\n          });\n        });\n      };\n    };\n    cons = function(x) {\n      return function(xs) {\n        return LazyList(function() {\n          var iter;\n          iter = null;\n          return Iterator(function() {\n            if (iter === null) {\n              iter = lazy(xs)[Symbol.iterator]();\n              return x;\n            } else {\n              return iter();\n            }\n          });\n        });\n      };\n    };\n    map = function(f) {\n      return function(xs) {\n        return LazyList(function() {\n          var iter;\n          iter = lazy(xs)[Symbol.iterator]();\n          return Iterator(function() {\n            var x;\n            if ((x = iter()) !== nil) {\n              return f(x);\n            } else {\n              return nil;\n            }\n          });\n        });\n      };\n    };\n    filter = function(ok) {\n      return function(xs) {\n        return LazyList(function() {\n          var iter;\n          iter = lazy(xs)[Symbol.iterator]();\n          return Iterator(function() {\n            var x;\n            while ((x = iter()) !== nil && !ok(x)) {\n              null;\n            }\n            return x;\n          });\n        });\n      };\n    };\n    scanl = function(op) {\n      return function(r) {\n        return function(xs) {\n          return LazyList(function() {\n            var iter;\n            iter = lazy(xs)[Symbol.iterator]();\n            return Iterator(function() {\n              var got, x;\n              got = r;\n              r = (x = iter()) !== nil ? op(r)(x) : nil;\n              return got;\n            });\n          });\n        };\n      };\n    };\n    streak = function(n) {\n      if (n < 1) {\n        return nil;\n      } else {\n        return function(xs) {\n          return drop(n - 1)(LazyList(function() {\n            var buf, iter;\n            iter = lazy(xs)[Symbol.iterator]();\n            buf = [];\n            return Iterator(function() {\n              var x;\n              if ((x = iter()) === nil) {\n                return nil;\n              }\n              buf.push(x);\n              if (buf.length > n) {\n                buf.shift(1);\n              }\n              return buf.slice(0);\n            });\n          }));\n        };\n      }\n    };\n    streak2 = function(n) {\n      return function(xs) {\n        return streak(n)(concat([xs, take(n - 1)(xs)]));\n      };\n    };\n    reverse = function(xs) {\n      var ref;\n      if ((ref = xs.constructor) === Array || ref === String) {\n        return LazyList(function() {\n          var i;\n          i = xs.length;\n          return Iterator(function() {\n            if ((--i) >= 0) {\n              return xs[i];\n            } else {\n              return nil;\n            }\n          });\n        });\n      } else {\n        return list(lazy(xs)).reverse();\n      }\n    };\n    sort = function(xs) {\n      var arr;\n      arr = list(lazy(xs));\n      return arr.sort(function(a, b) {\n        return (a > b) - (a < b);\n      });\n    };\n    sortOn = function(f) {\n      return function(xs) {\n        var arr;\n        arr = list(lazy(xs));\n        return arr.sort(function(a, b) {\n          var fa, fb;\n          return ((fa = f(a)) > (fb = f(b))) - (fa < fb);\n        });\n      };\n    };\n    groupOn = function(f) {\n      return function(xs) {\n        var k, memo, v;\n        memo = {};\n        foreach(xs, function(x) {\n          var y;\n          y = f(x);\n          if (memo[y] == null) {\n            memo[y] = [];\n          }\n          return memo[y].push(x);\n        });\n        return (function() {\n          var results;\n          results = [];\n          for (k in memo) {\n            v = memo[k];\n            results.push(v);\n          }\n          return results;\n        })();\n      };\n    };\n    partition = function(f) {\n      return function(xs) {\n        var memo;\n        memo = [[], []];\n        foreach(xs, function(x) {\n          var y;\n          y = !f(x) + 0;\n          return memo[y].push(x);\n        });\n        return memo;\n      };\n    };\n    concat = function(xss) {\n      xss = filter(function(x) {\n        var ref;\n        return ((ref = x.constructor) !== Array && ref !== String) || x.length > 0;\n      })(xss);\n      return LazyList(function() {\n        var iter, xs, xs_iter;\n        xs_iter = lazy(xss)[Symbol.iterator]();\n        xs = xs_iter();\n        iter = lazy(xs)[Symbol.iterator]();\n        return Iterator(function() {\n          var x;\n          if ((x = iter()) !== nil) {\n            return x;\n          } else if ((xs = xs_iter()) !== nil) {\n            iter = lazy(xs)[Symbol.iterator]();\n            return iter();\n          } else {\n            return nil;\n          }\n        });\n      });\n    };\n    ref = (function() {\n      var finished, zip, zipWith;\n      finished = function(arr) {\n        var j, len1, x;\n        for (j = 0, len1 = arr.length; j < len1; j++) {\n          x = arr[j];\n          if (x === nil) {\n            return true;\n          }\n        }\n        return false;\n      };\n      zip = function() {\n        var xss;\n        xss = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        return LazyList(function() {\n          var iters, xs;\n          iters = (function() {\n            var j, len1, results;\n            results = [];\n            for (j = 0, len1 = xss.length; j < len1; j++) {\n              xs = xss[j];\n              results.push(lazy(xs)[Symbol.iterator]());\n            }\n            return results;\n          })();\n          return Iterator(function() {\n            var iter, next;\n            next = (function() {\n              var j, len1, results;\n              results = [];\n              for (j = 0, len1 = iters.length; j < len1; j++) {\n                iter = iters[j];\n                results.push(iter());\n              }\n              return results;\n            })();\n            if (finished(next)) {\n              return nil;\n            } else {\n              return next;\n            }\n          });\n        });\n      };\n      zipWith = function(f) {\n        return function() {\n          var xss;\n          xss = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n          return LazyList(function() {\n            var iters, xs;\n            iters = (function() {\n              var j, len1, results;\n              results = [];\n              for (j = 0, len1 = xss.length; j < len1; j++) {\n                xs = xss[j];\n                results.push(lazy(xs)[Symbol.iterator]());\n              }\n              return results;\n            })();\n            return Iterator(function() {\n              var iter, next;\n              next = (function() {\n                var j, len1, results;\n                results = [];\n                for (j = 0, len1 = iters.length; j < len1; j++) {\n                  iter = iters[j];\n                  results.push(iter());\n                }\n                return results;\n              })();\n              if (finished(next)) {\n                return nil;\n              } else {\n                return f.apply(null, next);\n              }\n            });\n          });\n        };\n      };\n      return {\n        zip: zip,\n        zipWith: zipWith\n      };\n    })(), zip = ref.zip, zipWith = ref.zipWith;\n    cartProd = (function() {\n      var apply_vector, inc_vector;\n      inc_vector = function(limits) {\n        var len_minus_1;\n        len_minus_1 = limits.length - 1;\n        return function(vec) {\n          var i;\n          i = len_minus_1;\n          while (!(++vec[i] < limits[i] || i <= 0)) {\n            vec[i--] = 0;\n          }\n          return vec;\n        };\n      };\n      apply_vector = function(space) {\n        var len;\n        len = space.length;\n        return function(vec) {\n          var i, j, ref1, results;\n          results = [];\n          for (i = j = 0, ref1 = len; 0 <= ref1 ? j < ref1 : j > ref1; i = 0 <= ref1 ? ++j : --j) {\n            results.push(space[i][vec[i]]);\n          }\n          return results;\n        };\n      };\n      return function() {\n        var xss;\n        xss = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        return LazyList(function() {\n          var get_value, i, inc, j, len, len1, limits, v, xs;\n          xss = (function() {\n            var j, len1, results;\n            results = [];\n            for (j = 0, len1 = xss.length; j < len1; j++) {\n              xs = xss[j];\n              results.push(list(xs));\n            }\n            return results;\n          })();\n          limits = (function() {\n            var j, ref1, results;\n            results = [];\n            for (i = j = 0, ref1 = xss.length; 0 <= ref1 ? j < ref1 : j > ref1; i = 0 <= ref1 ? ++j : --j) {\n              results.push(xss[i].length);\n            }\n            return results;\n          })();\n          for (j = 0, len1 = limits.length; j < len1; j++) {\n            len = limits[j];\n            if (len === 0) {\n              return nil;\n            }\n          }\n          inc = inc_vector(limits);\n          get_value = apply_vector(xss);\n          v = (function() {\n            var o, ref1, results;\n            results = [];\n            for (i = o = 0, ref1 = xss.length; 0 <= ref1 ? o < ref1 : o > ref1; i = 0 <= ref1 ? ++o : --o) {\n              results.push(0);\n            }\n            return results;\n          })();\n          return Iterator(function() {\n            var r;\n            if (v[0] < limits[0]) {\n              r = get_value(v);\n              inc(v);\n              return r;\n            } else {\n              return nil;\n            }\n          });\n        });\n      };\n    })();\n    list = function(xs) {\n      var it, n, results, results1, x;\n      if (xs instanceof Array) {\n        return xs;\n      } else if (typeof xs === 'function') {\n        it = xs[Symbol.iterator]();\n        results = [];\n        while ((x = it()) !== nil) {\n          results.push(x);\n        }\n        return results;\n      } else if (xs[Symbol.iterator] != null) {\n        it = lazy(xs)[Symbol.iterator]();\n        results1 = [];\n        while ((x = it()) !== nil) {\n          results1.push(x);\n        }\n        return results1;\n      } else if (typeof xs === 'number') {\n        n = xs;\n        return function(xs) {\n          return list(take(n)(xs));\n        };\n      } else {\n        throw ListError('list(xs): xs is neither Array nor Iterable');\n      }\n    };\n    head = function(xs) {\n      var iter, r, ref1;\n      if ((ref1 = xs.constructor) === Array || ref1 === String) {\n        if (xs.length > 0) {\n          return xs[0];\n        } else {\n          throw ListError(\"head() used on empty list.\");\n        }\n      } else {\n        iter = lazy(xs)[Symbol.iterator]();\n        if ((r = iter()) !== nil) {\n          return r;\n        } else {\n          throw ListError(\"head() used on empty list.\");\n        }\n      }\n    };\n    last = function(xs) {\n      var iter, r, ref1, x;\n      if ((ref1 = xs.constructor) === Array || ref1 === String) {\n        if (xs.length > 0) {\n          return xs[xs.length - 1];\n        } else {\n          throw ListError(\"last() used on empty list.\");\n        }\n      } else {\n        iter = lazy(xs)[Symbol.iterator]();\n        r = nil;\n        while ((x = iter()) !== nil) {\n          r = x;\n        }\n        if (r !== nil) {\n          return r;\n        } else {\n          throw ListError(\"last() used on empty list.\");\n        }\n      }\n    };\n    length = function(xs) {\n      var iter, r, ref1, x;\n      if ((ref1 = xs.constructor) === Array || ref1 === String) {\n        return xs.length;\n      } else {\n        iter = lazy(xs)[Symbol.iterator]();\n        r = 0;\n        while ((x = iter()) !== nil) {\n          ++r;\n        }\n        return r;\n      }\n    };\n    foldl = function(op) {\n      return function(init) {\n        return function(xs) {\n          var iter, r, x;\n          r = init;\n          iter = lazy(xs)[Symbol.iterator]();\n          while ((x = iter()) !== nil) {\n            r = op(r)(x);\n          }\n          return r;\n        };\n      };\n    };\n    best = function(better) {\n      return function(xs) {\n        var it, iter, r;\n        iter = lazy(xs)[Symbol.iterator]();\n        if ((r = iter()) === nil) {\n          return null;\n        }\n        while ((it = iter()) !== nil) {\n          r = better(it, r) ? it : r;\n        }\n        return r;\n      };\n    };\n    maximumOn = function(f) {\n      return best(function(a, b) {\n        return f(a) > f(b);\n      });\n    };\n    minimumOn = function(f) {\n      return best(function(a, b) {\n        return f(a) > f(b);\n      });\n    };\n    maximum = best(function(x, y) {\n      return x > y;\n    });\n    minimum = best(function(x, y) {\n      return x < y;\n    });\n    all = function(f) {\n      if (typeof f !== 'function') {\n        f = (function(x) {\n          return x === f;\n        });\n      }\n      return function(xs) {\n        var iter, x;\n        iter = lazy(xs)[Symbol.iterator]();\n        while ((x = iter()) !== nil) {\n          if (!f(x)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    };\n    any = function(f) {\n      var all_not;\n      all_not = all(function(x) {\n        return !f(x);\n      });\n      return function(xs) {\n        return !(all_not(xs));\n      };\n    };\n    fromList = function(pairs) {\n      var r;\n      r = {};\n      foreach(pairs, function(arg1) {\n        var k, v;\n        k = arg1[0], v = arg1[1];\n        if (v !== void 0) {\n          return r[k] = v;\n        }\n      });\n      return r;\n    };\n    brk = function() {\n      return brk;\n    };\n    brk.toString = function() {\n      return 'foreach.break';\n    };\n    foreach = function(xs, callback, fruit) {\n      var iter, x;\n      iter = lazy(xs)[Symbol.iterator]();\n      while ((x = iter()) !== nil) {\n        if (callback(x, fruit) === brk) {\n          break;\n        }\n      }\n      return fruit;\n    };\n    Object.defineProperties(foreach, {\n      \"break\": {\n        writable: false,\n        configurable: false,\n        enumerable: false,\n        value: brk\n      }\n    });\n    return {\n      nil: nil,\n      LazyList: LazyList,\n      Iterator: Iterator,\n      Symbol: Symbol,\n      naturals: naturals,\n      range: range,\n      primes: primes,\n      lazy: lazy,\n      enumerate: enumerate,\n      repeat: repeat,\n      iterate: iterate,\n      randoms: randoms,\n      permutations: permutations,\n      cons: cons,\n      map: map,\n      filter: filter,\n      take: take,\n      takeWhile: takeWhile,\n      drop: drop,\n      dropWhile: dropWhile,\n      scanl: scanl,\n      streak: streak,\n      streak2: streak2,\n      reverse: reverse,\n      sort: sort,\n      sortOn: sortOn,\n      groupOn: groupOn,\n      partition: partition,\n      concat: concat,\n      zip: zip,\n      zipWith: zipWith,\n      cartProd: cartProd,\n      list: list,\n      head: head,\n      last: last,\n      length: length,\n      foldl: foldl,\n      best: best,\n      maximum: maximum,\n      minimum: minimum,\n      maximumOn: maximumOn,\n      minimumOn: minimumOn,\n      all: all,\n      any: any,\n      fromList: fromList,\n      foreach: foreach\n    };\n  };\n\n  module.exports = this_module({\n    Symbol: typeof Symbol !== \"undefined\" && Symbol !== null ? Symbol : {\n      iterator: 'iter'\n    }\n  });\n\n}).call(this);\n\n//# sourceMappingURL=lazy.js.map","this_module = ({foldl}) ->\n\tidentity = (x) -> x\n\n\t# transformers\n\tflip = (f) ->\n\t\t(x) -> (y) -> f(y)(x)\n\n\tcombine = (f) -> (g) ->\n\t\t(x) -> f g(x)\n\n\tcurry2 = (f) ->\n\t\t(a) -> (b) -> f(a, b)\n\n\tcurry3 = (f) ->\n\t\t(a) -> (b) -> (c) -> f(a, b, c)\n\n\tuncurry2 = (f) ->\n\t\t(a, b) -> f(a)(b)\n\n\tuncurry3 = (f) ->\n\t\t(a, b, c) -> f(a)(b)(c)\n\n\tpack = (f) ->\n\t\t(arr) -> f(arr...)\n\n\tunpack = (f) ->\n\t\t(arr...) -> f(arr)\n\n\t# seek & pluck in Array or Object\n\tseek = (arr) ->\n\t\t(i) -> arr[i]\n\n\tpluck = (attr) ->\n\t\t(d) -> d[attr]\n\n\t# compare\n\tequal = (it) ->\n\t\t(x) -> x == it\n\n\tnotEqual = (it) ->\n\t\t(x) -> x != it\n\n\tlessThan = (it) ->\n\t\t(x) -> x < it\n\n\tgreaterThan = (it) ->\n\t\t(x) -> x > it\n\n\tlessEqual = (it) ->\n\t\t(x) -> x <= it\n\n\tgreaterEqual = (it) ->\n\t\t(x) -> x >= it\n\n\t# math\n\tplus = (x) -> (y) -> x + y\n\tminus = (x) -> (y) -> x - y\n\n\tabs = Math.abs\n\tfloor = Math.floor\n\tceil = Math.ceil\n\n\tprecise = (n) ->\n\t\t(x) -> parseFloat x.toPrecision(n)\n\n\tsum = foldl(plus)(0)\n\n\treturn {\n\t\tidentity, flip, combine,\n\t\tcurry2, curry3, uncurry2, uncurry3, pack, unpack,\n\t\tseek, pluck,\n\t\tequal, notEqual, lessThan, lessEqual, greaterThan, greaterEqual,\n\t\tplus, minus, abs, floor, ceil, precise,\n\t\tsum\n\t}\n\nmodule.exports = this_module\n\tfoldl: require('lazy-list').foldl\n\n","utils = require './utils'\nbasics = require './basics'\nlazy = require 'lazy-list'\nfunny = require './funny'\nconvertors = require './convertors'\nurl_helpers = require './url-helpers'\n\nmodule.exports = utils.extend({}) utils, basics, lazy, funny, convertors, url_helpers\n\n","this_module = () ->\n\tint = (s, base) -> if typeof(s) == 'string' then (r = parseInt(s, base); unless s.slice? and r == parseInt(s.slice(0,-1), base) then r else null) else parseInt(0 + s)\n\tfloat = (s) -> if /^-?[0-9]*(\\.[0-9]+)?([eE]-?[0-9]+)?$/.test(s) then parseFloat(s) else null\n\tstr = (x, base) -> x.toString(base)\n\tbool = (x) -> if x in [true, false] then x else null\n\thex = (x) -> x.toString(16)\n\tord = (c) -> c.charCodeAt()\n\tchr = (x) -> String.fromCharCode(x)\n\tjson = (it) -> JSON.stringify(it)\n\tjsonWith = (indent, convertor) -> (it) -> JSON.stringify(it, convertor, indent)\n\tprettyJson = (it) -> JSON.stringify(it, null, 4)\n\tobj = (s) -> JSON.parse(s)\n\n\treturn {\n\t\tint, float, bool, str, hex, ord, chr, json, jsonWith, prettyJson, obj,\n\t}\n\nmodule.exports = this_module()\n\n","this_module = () ->\n\tchurch = (n) -> #the nth church number\n\t\titer = (f, n, r) ->\n\t\t\tif n == 0 then r else iter(f, n - 1, f(r))\n\t\t(f) ->\n\t\t\t(x) -> iter(f, n + 0, x)\n\n\tY = (f) -> #the Y combinator\n\t\t((x) -> (x x)) ((x) -> (f ((y) -> ((x x) y))))\n\n\tmemoize = (f, get_key = ((args...) -> json(args))) ->\n\t\tcache = {}\n\t\t(args...) ->\n\t\t\tkey = get_key(args...)\n\t\t\tcached = cache[key]\n\t\t\tif cached?\n\t\t\t\tcached\n\t\t\telse\n\t\t\t\tr = f(args...)\n\t\t\t\tcache[key] = r\n\t\t\t\tr\n\n\tfix = Y\n\n\tmemoFix = (ff) ->\n\t\tf = memoize (ff ((args...) -> f(args...)))\n\t\treturn f\n\n\treturn {\n\t\tchurch, Y, memoize, fix, memoFix,\n\t}\n\nmodule.exports = this_module()\n\n","this_module = () ->\n\turi_encoder = (component_packer = str) ->\n\t\t(obj) ->\n\t\t\t(\"#{encodeURIComponent(k)}=#{encodeURIComponent component_packer v}\" for k, v of obj when v isnt undefined).join('&')\n\n\turi_decoder = (component_unpacker = ((s) -> s)) ->\n\t\t(str) ->\n\t\t\td = {}\n\t\t\tfor s in (str.match /[^?=&]+=[^&]*/g) ? []\n\t\t\t\t[..., k, v] = s.match /([^=]+)=(.*)/\n\t\t\t\td[decodeURIComponent(k)] = (component_unpacker decodeURIComponent v)\n\t\t\treturn d\n\n\treturn {\n\t\turi_encoder, uri_decoder,\n\t}\n\nmodule.exports = this_module()\n\n","this_module = () ->\n\tfunction_literal = (f) ->\n\t\texpr = f.toString().replace(/^\\s*function\\s?\\(\\s?\\)\\s?{\\s*return\\s*([^]*?);?\\s*}$/, '$1')\n\t\texpr = expr.replace(/[\\r\\n]{1,2}\\s*/g, '') if expr.length <= 100\n\t\treturn expr\n\n\ttime_now = ->\n\t\t(new Date).getTime()\n\n\tlog = do -> #log an expression with it's literal and time used\n\t\tdye = do ->\n\t\t\t# ANSI Terminal Colors.\n\t\t\tcavailable = (not window?) and process? and not process.env.NODE_DISABLE_COLORS\n\t\t\tpalette =\n\t\t\t\tbold: '\\x1B[0;1m'\n\t\t\t\tred: '\\x1B[0;31m'\n\t\t\t\tgreen: '\\x1B[0;32m'\n\t\t\t\tyellow: '\\x1B[0;33m'\n\t\t\t\tblue: '\\x1B[0;34m'\n\t\t\t\tbold_grey: '\\x1B[1;30m'\n\t\t\tif not cavailable\n\t\t\t\t(color) -> (s) -> s\n\t\t\telse\n\t\t\t\t(color) ->\n\t\t\t\t\t(s) -> \"#{palette[color]}#{s}#{'\\x1B[0m'}\"\n\n\t\tlog_label = do ->\n\t\t\tflag_palette =\n\t\t\t\t'#': 'bold_grey'\n\t\t\t\t'I': 'green'\n\t\t\t\t'E': 'red'\n\t\t\t\t'W': 'yellow'\n\t\t\top_flag = (op) ->\n\t\t\t\tif op == 'log' then '#' else op[0].toUpperCase()\n\t\t\t(op) ->\n\t\t\t\tflag = op_flag(op)\n\t\t\t\tdye(flag_palette[flag]) flag\n\n\t\thistories = []\n\t\tfactory = (op) ->\n\t\t\tprefix = \"#{dye('bold_grey') '#'}#{log_label op}\"\n\t\t\t(args...) ->\n\t\t\t\tball = []\n\t\t\t\tfor f in args\n\t\t\t\t\tif typeof f == 'function'\n\t\t\t\t\t\texpr = function_literal(f)\n\t\t\t\t\t\tstart_time = time_now()\n\t\t\t\t\t\teval_result = f()\n\t\t\t\t\t\ttime_used = time_now() - start_time\n\t\t\t\t\t\tball.push(\"#{prefix} #{dye('green') expr} #{dye('bold_grey') '==>'}\", eval_result)\n\t\t\t\t\t\tball.push(dye('yellow') \"[#{time_used}ms]\") if time_used > 0\n\t\t\t\t\telse\n\t\t\t\t\t\tball.push(\"#{prefix}\", f)\n\t\t\t\tconsole[op] ball...\n\t\t\t\thistories.push(ball)\n\t\t\t\thistories.shift() if histories.length >= 10\n\t\t\t\treturn null\n\t\tgot = factory('log')\n\t\tgot.histories = histories\n\t\tgot.info = factory('info')\n\t\tgot.warn = factory('warn')\n\t\tgot.error = got.err = factory('error')\n\t\treturn got\n\n\tassert = (f, msg) ->\n\t\t[f, msg] = [msg, f] if f not instanceof Function\n\t\ttry\n\t\t\tr = f()\n\t\tcatch e\n\t\t\tthrow Error \"Assertion #{msg ? function_literal(f)} Unknown:\\n#{e}\"\n\t\tif not r\n\t\t\tthrow Error \"Assertion #{msg ? function_literal(f)} Failed!\"\n\n\tassertEq = (l, r) ->\n\t\ttry\n\t\t\tlv = l()\n\t\t\trv = r()\n\t\tcatch e\n\t\t\tthrow Error \"Equation Between #{function_literal(l)} And #{function_literal(r)} Unknown:\\n#{e}\"\n\t\tif lv isnt rv\n\t\t\tthrow Error \"Equation Failed:\\n\\t#{function_literal(l)} IS #{lv} BUT\\n\\t#{function_literal(r)} IS #{rv}.\"\n\n\tassertEqOn = (f) -> (l, r) ->\n\t\ttry\n\t\t\tlv = l()\n\t\t\trv = r()\n\t\t\tflv = f(lv)\n\t\t\tfrv = f(rv)\n\t\tcatch e\n\t\t\tthrow Error \"MAPPED Equation Between #{function_literal(l)} And #{function_literal(r)} Unknown:\\n#{e}\"\n\t\tif flv isnt frv\n\t\t\tthrow Error \"Equation Failed:\\n\\t#{function_literal(l)} IS #{lv} AND MAPPED TO #{flv} BUT\\n\\t#{function_literal(r)} IS #{rv} AND MAPPED TO #{frv}.\"\n\n\tsecurely = (f) -> # ensure a function not to modify it's arguments\n\t\t(args...) ->\n\t\t\targs = deepcopy args\n\t\t\tf(args...)\n\n\tdict = (pairs) -> #for dict comprehensions\n\t\td = {}\n\t\td[k] = v for [k, v] in pairs\n\t\treturn d\n\n\t{copy, deepcopy} = do ->\n\t\tcp = (root, dep) ->\n\t\t\treturn root if dep == 0 or not root? or typeof(root) != 'object'\n\t\t\tif root instanceof Array\n\t\t\t\tr = (cp(v, dep-1) for v in root)\n\t\t\telse\n\t\t\t\tr = {}\n\t\t\t\tr[k] = cp(v, dep-1) for k, v of root\n\t\t\treturn r\n\t\tcopy: (obj, depth=1) -> cp(obj, depth)\n\t\tdeepcopy: (obj, depth=Infinity) -> cp(obj, depth)\n\n\textend = (base) -> (defaults...) -> #NOTE: modified inplace, use copy() to protect it.\n\t\tfor d in defaults when d?\n\t\t\tbase[k] ?= v for k, v of d #NOTE: null values will be replaced if a default value exists.\n\t\treturn base\n\n\tupdate = (base) -> (updates...) -> #NOTE: modified inplace, use copy() to protect it.\n\t\tfor d in updates when d?\n\t\t\tbase[k] = v for k, v of d\n\t\treturn base\n\n\toverload = (_d) ->\n\t\td = copy _d\n\t\tfallback = d['_']\n\t\tif fallback?\n\t\t\t(args...) ->\n\t\t\t\t(d[args.length] ? fallback) args...\n\t\telse\n\t\t\t(args...) ->\n\t\t\t\tf = d[args.length]\n\t\t\t\tif not f?\n\t\t\t\t\tthrow Error \"This Function Can't Accept #{args.length} Args\"\n\t\t\t\telse\n\t\t\t\t\treturn f args...\n\n\treturn {\n\t\tlog, assert, assertEq, assertEqOn, dict, copy, deepcopy, securely, extend, update, overload,\n\t}\n\nmodule.exports = this_module()\n\n"],"sourceRoot":"/source/"}