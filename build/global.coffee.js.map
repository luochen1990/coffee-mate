{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","node_modules/browserify/node_modules/process/browser.js","global.coffee.js","basics.coffee","coffee-mate.coffee","convertors.coffee","funny.coffee","global.coffee","lazy.coffee","reinforce.coffee","url-helpers.coffee","utils.coffee"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","drainQueue","draining","currentQueue","len","queue","noop","process","nextTick","fun","push","setTimeout","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","cwd","chdir","umask",2,"this_module","slice","arg","abs","accept_multi_or_array","best","ceil","equal","flip","floor","greaterEqual","greaterThan","lessEqual","lessThan","max","max_index","min","min_index","notEqual","pluck","seek","sum","x","y","arr","attr","d","it","Math","arguments","first","Array","k","b","results","j","ref","apply","this","./lazy",3,"basics","convertors","funny","lazy","url_helpers","utils","extend","./basics","./convertors","./funny","./url-helpers","./utils",4,"bool","chr","float","hex","int","json","obj","ord","str","base","parseInt","test","parseFloat","toString","c","charCodeAt","String","fromCharCode","indent","JSON","stringify","parse",5,"Y","church","memoize","iter","get_key","cache","args","cached","key",6,"global","mate","v","self","window","./coffee-mate","./reinforce",7,"all","any","brk","cartProd","concat","cons","drop","dropWhile","enumerate","filter","foldl","foreach","generate","iterator","last","lazylist","list","map","naturals","nil","permutation_gen","primes","random_gen","range","ranged_random_gen","repeat","reverse","scanl","streak","take","takeWhile","zip","zipWith","xs","next","value","done","stop","start","step","p","Infinity","keys","Object","init","status","hash","sin","opts","seed","random","next_permutation","m","ref1","ls","ok","finished","prevx","got","buf","shift","copy","xss","current_index","len1","iters","apply_vector","inc_vector","limits","len_minus_1","vec","space","get_value","inc","better","all_not","callback","fruit","defineProperties","break","writable","configurable","enumerable",8,"prototype","format","replace","pat","cut","start_pat","end_pat","search","substr","get","set","second","third","unique","splice","size","defaults","update","updates",9,"uri_decoder","uri_encoder","component_packer","encodeURIComponent","join","component_unpacker","ref2","match","decodeURIComponent",10,"assert","assertEq","assertEqOn","deepcopy","dict","function_literal","log","securely","time_now","expr","Date","getTime","dye","factory","histories","log_label","cavailable","palette","NODE_DISABLE_COLORS","bold","red","green","yellow","blue","bold_grey","color","flag_palette","op_flag","#","I","E","W","op","toUpperCase","flag","prefix","ball","eval_result","start_time","time_used","console","info","warn","error","err","msg","Function","_error","lv","rv","flv","frv","pairs","cp","root","dep","depth","_process"],"mappings":"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","file":"global.coffee.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    draining = true;\n    var currentQueue;\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        var i = -1;\n        while (++i < len) {\n            currentQueue[i]();\n        }\n        len = queue.length;\n    }\n    draining = false;\n}\nprocess.nextTick = function (fun) {\n    queue.push(fun);\n    if (!draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n",null,"this_module = ({best}) ->\n\tflip = (f) ->\n\t\t(x) -> (y) -> f(y)(x)\n\n\tseek = (arr) ->\n\t\t(i) -> arr[i]\n\n\tpluck = (attr) ->\n\t\t(d) -> d[attr]\n\n\tequal = (it) ->\n\t\t(x) -> x == it\n\n\tnotEqual = (it) ->\n\t\t(x) -> x != it\n\n\tlessThan = (it) ->\n\t\t(x) -> x < it\n\n\tgreaterThan = (it) ->\n\t\t(x) -> x > it\n\n\tlessEqual = (it) ->\n\t\t(x) -> x <= it\n\n\tgreaterEqual = (it) ->\n\t\t(x) -> x >= it\n\n\tabs = Math.abs\n\tfloor = Math.floor\n\tceil = Math.ceil\n\n\taccept_multi_or_array = (f) ->\n\t\t(arr...) ->\n\t\t\tf(if arr.length == 1 and arr.first instanceof Array then arr.first else arr)\n\n\tsum = accept_multi_or_array (arr) ->\n\t\tarr = arr.first if arr.length == 1 and arr.first instanceof Array\n\t\tr = 0\n\t\tr += x for x in arr\n\t\tr\n\n\tmax = accept_multi_or_array (arr) ->\n\t\tbest((a, b) -> a > b) arr\n\n\tmin = accept_multi_or_array (arr) ->\n\t\tbest((a, b) -> a < b) arr\n\n\tmax_index = accept_multi_or_array (arr) ->\n\t\tbest((i, j) -> arr[i] > arr[j]) [0...arr.length]\n\n\tmin_index = accept_multi_or_array (arr) ->\n\t\tbest((i, j) -> arr[i] < arr[j]) [0...arr.length]\n\n\treturn {\n\t\tflip, seek, pluck,\n\t\tequal, notEqual, lessThan, lessEqual, greaterThan, greaterEqual,\n\t\tabs, floor, ceil, sum, max, min, max_index, min_index,\n\t}\n\nmodule.exports = this_module\n\tbest: require('./lazy').best\n\n","utils = require './utils'\nbasics = require './basics'\nlazy = require './lazy'\nfunny = require './funny'\nconvertors = require './convertors'\nurl_helpers = require './url-helpers'\n\nmodule.exports = utils.extend({}) utils, basics, lazy, funny, convertors, url_helpers\n\n","this_module = () ->\n\tint = (s, base) -> if typeof(s) == 'string' then (r = parseInt(s, base); unless s.slice? and r == parseInt(s.slice(0,-1), base) then r else null) else parseInt(0 + s)\n\tfloat = (s) -> if /^-?[0-9]*(\\.[0-9]+)?([eE]-?[0-9]+)?$/.test(s) then parseFloat(s) else null\n\tstr = (x, base) -> x.toString(base)\n\tbool = (x) -> if x in [true, false] then x else null\n\thex = (x) -> x.toString(16)\n\tord = (c) -> c.charCodeAt()\n\tchr = (x) -> String.fromCharCode(x)\n\tjson = (it, indent) -> JSON.stringify(it, null, indent)\n\tobj = (s) -> JSON.parse(s)\n\n\treturn {\n\t\tint, float, bool, str, hex, ord, chr, json, obj,\n\t}\n\nmodule.exports = this_module()\n\n","this_module = () ->\n\tchurch = (n) -> #the nth church number\n\t\titer = (f, n, r) ->\n\t\t\tif n == 0 then r else iter(f, n - 1, f(r))\n\t\t(f) ->\n\t\t\t(x) -> iter(f, n + 0, x)\n\n\tY = (f) -> #the Y combinator\n\t\t((x) -> (x x)) ((x) -> (f ((y) -> ((x x) y))))\n\n\tmemoize = (f, get_key = ((args...) -> json(args))) ->\n\t\tcache = {}\n\t\t(args...) ->\n\t\t\tkey = get_key(args...)\n\t\t\tcached = cache[key]\n\t\t\tif cached?\n\t\t\t\tcached\n\t\t\telse\n\t\t\t\tr = f(args...)\n\t\t\t\tcache[key] = r\n\t\t\t\tr\n\n\treturn {\n\t\tchurch, Y, memoize,\n\t}\n\nmodule.exports = this_module()\n\n","require './reinforce'\nmate = require('./coffee-mate')\nglobal[k] = v for k, v of mate\n","this_module = () ->\n\n\t# LazyList definition: nil, lazylist, iterator,\n\n\tlazylist = (xs) -> # construct a lazylist from a function.\n\t\txs.iter = -> xs()\n\t\txs.toString = -> \"LazyList\"\n\t\treturn xs\n\n\tnil = lazylist -> nil # xs is empty <==> xs is nil or xs() is nil or xs()() is nil... <==> last xs is nil\n\tnil.toString = -> 'nil'\n\n\titerator = (it) -> # construct an iterator(which is a function with status) from a function.\n\t\tit.next = ->\n\t\t\tr = it()\n\t\t\t{value: r, done: r == nil}\n\t\tit.toString = -> \"Iterator\"\n\t\treturn it\n\n\t# lazylist constants: naturals, range, primes,\n\n\tnaturals =\n\t\tlazylist ->\n\t\t\ti = -1\n\t\t\titerator ->\n\t\t\t\t++i\n\n\trange = (args...) ->\n\t\tif args.length == 0\n\t\t\tnaturals\n\t\telse if args.length == 1\n\t\t\tlazylist ->\n\t\t\t\t[stop] = args\n\t\t\t\ti = -1\n\t\t\t\titerator ->\n\t\t\t\t\tif ++i < stop then i else nil\n\t\telse if args.length == 2\n\t\t\tlazylist ->\n\t\t\t\t[start, stop] = args\n\t\t\t\tif start < stop\n\t\t\t\t\ti = start - 1\n\t\t\t\t\titerator ->\n\t\t\t\t\t\tif ++i < stop then i else nil\n\t\t\t\telse\n\t\t\t\t\ti = start + 1\n\t\t\t\t\titerator ->\n\t\t\t\t\t\tif --i > stop then i else nil\n\t\telse\n\t\t\tlazylist ->\n\t\t\t\t[start, stop, step] = args\n\t\t\t\tthrow 'ERR IN range(): YOU ARE CREATING AN UNLIMITTED RANGE' if stop != start and (stop - start) * step < 0\n\t\t\t\ti = start - step\n\t\t\t\tif start < stop\n\t\t\t\t\titerator ->\n\t\t\t\t\t\tif (i += step) < stop then i else nil\n\t\t\t\telse\n\t\t\t\t\titerator ->\n\t\t\t\t\t\tif (i += step) > stop then i else nil\n\n\tprimes = lazylist -> do\n\t\tfilter((x) -> all((p) -> x % p != 0) takeWhile((p) -> p * p <= x) range(2, Infinity)) range(2, Infinity)\n\n\t# lazylist producers: lazy, enumerate, generate, random_gen, ranged_random_gen, permutation_gen,\n\n\tlazy = (arr) -> #make a lazylist from array or function\n\t\tif typeof arr is 'function'\n\t\t\tlazylist arr\n\t\telse #maybe Array or String\n\t\t\tlazylist ->\n\t\t\t\ti = -1\n\t\t\t\titerator ->\n\t\t\t\t\ti += 1\n\t\t\t\t\tif i < arr.length\n\t\t\t\t\t\tarr[i]\n\t\t\t\t\telse\n\t\t\t\t\t\tnil\n\n\tenumerate = (it) -> # iterator with index(with key for object)\n\t\tif it.iter? or it instanceof Array\n\t\t\tzip(naturals, it)\n\t\telse\n\t\t\tlazylist ->\n\t\t\t\tkeys = Object.keys(it)\n\t\t\t\ti = -1\n\t\t\t\titerator ->\n\t\t\t\t\tif ++i < keys.length then [(k = keys[i]), it[k]] else nil\n\n\trepeat = (it) -> # repeat it\n\t\tlazylist ->\n\t\t\titerator ->\n\t\t\t\tit\n\n\tgenerate = (init, next) -> #function next should not change it's argument\n\t\tlazylist ->\n\t\t\tstatus = init\n\t\t\titerator ->\n\t\t\t\tlast = status\n\t\t\t\tstatus = next status\n\t\t\t\treturn last\n\n\trandom_gen = do ->\n\t\thash = (x) ->\n\t\t\tx = Math.sin(x) * 1e4\n\t\t\tx - Math.floor(x)\n\t\t(opts) ->\n\t\t\tseed = opts?.seed ? Math.random()\n\t\t\tgenerate seed, hash\n\n\tranged_random_gen = (range, opts) ->\n\t\tseed = opts?.seed ? Math.random()\n\t\tmap((x) -> Math.floor(x * range)) random_gen(seed: seed)\n\n\tpermutation_gen = do ->\n\t\tnext_permutation = (x) ->\n\t\t\tx = x[...]\n\t\t\tl = x.length - 1\n\t\t\t--l while l >= 1 and x[l] <= x[l - 1]\n\n\t\t\tif (l != 0)\n\t\t\t\tm = x.length - 1\n\t\t\t\t--m while m > l - 1 and x[m] <= x[l - 1]\n\t\t\t\t[x[m], x[l - 1]] = [x[l - 1], x[m]]\n\n\t\t\tr = x.length - 1\n\t\t\twhile(l < r)\n\t\t\t\t[x[l], x[r]] = [x[r], x[l]]\n\t\t\t\t++l\n\t\t\t\t--r\n\t\t\treturn x\n\n\t\t(arr) ->\n\t\t\tif arr.length == 0 then nil else\n\t\t\t\tconcat [arr[...]], takeWhile((ls) -> json(ls) != json(arr)) drop(1) generate arr, next_permutation\n\n\t# lazylist decorators: take, takeWhile, drop, dropWhile, cons, map, filter, scanl, streak, reverse,\n\n\ttake = (n) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if xs.iter? then xs else lazy(xs)).iter()\n\t\t\t\tc = -1\n\t\t\t\titerator ->\n\t\t\t\t\tif ++c < n then iter() else nil\n\n\ttakeWhile = (ok) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if xs.iter? then xs else lazy(xs)).iter()\n\t\t\t\titerator ->\n\t\t\t\t\tif (x = iter()) isnt nil and ok(x) then x else nil\n\n\tdrop = (n) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if xs.iter? then xs else lazy(xs)).iter()\n\t\t\t\tfinished = false\n\t\t\t\t(finished or= (iter() is nil); break if finished) for i in [0...n]\n\t\t\t\tif finished then (-> nil) else iter\n\n\tdropWhile = (ok) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if xs.iter? then xs else lazy(xs)).iter()\n\t\t\t\tnull while ok(x = iter()) and x isnt nil\n\t\t\t\titerator ->\n\t\t\t\t\t[prevx, x] = [x, iter()]\n\t\t\t\t\treturn prevx\n\n\tcons = (x) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = null\n\t\t\t\titerator ->\n\t\t\t\t\tif iter is null\n\t\t\t\t\t\titer = (if xs.iter? then xs else lazy(xs)).iter()\n\t\t\t\t\t\treturn x\n\t\t\t\t\telse\n\t\t\t\t\t\treturn iter()\n\n\tmap = (f) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if xs.iter? then xs else lazy(xs)).iter()\n\t\t\t\titerator ->\n\t\t\t\t\tif (x = iter()) isnt nil then f(x) else nil\n\n\tfilter = (ok) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if xs.iter? then xs else lazy(xs)).iter()\n\t\t\t\titerator ->\n\t\t\t\t\tnull while not ok(x = iter()) and x isnt nil\n\t\t\t\t\treturn x\n\n\tscanl = (f, r) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if xs.iter? then xs else lazy(xs)).iter()\n\t\t\t\titerator ->\n\t\t\t\t\tgot = r\n\t\t\t\t\tr = if (x = iter()) isnt nil then f(r, x) else nil\n\t\t\t\t\treturn got\n\n\tstreak = (n) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if xs.iter? then xs else lazy(xs)).iter()\n\t\t\t\tbuf = []\n\t\t\t\titerator ->\n\t\t\t\t\treturn nil if (x = iter()) is nil\n\t\t\t\t\tbuf.push(x)\n\t\t\t\t\tbuf.shift(1) if buf.length > n\n\t\t\t\t\treturn buf[...]\n\n\treverse = (xs) ->\n\t\tarr = if xs.iter? then list xs else copy xs\n\t\treturn lazy arr.reverse()\n\n\t# lazylist combiners: concat, zip, zipWith, cartProd,\n\n\tconcat = (xss...) ->\n\t\tlazylist ->\n\t\t\titer = (if xss[0].iter? then xss[0] else lazy(xss[0])).iter()\n\t\t\tcurrent_index = 0\n\t\t\titerator ->\n\t\t\t\tif (x = iter()) isnt nil\n\t\t\t\t\treturn x\n\t\t\t\telse if (++current_index < xss.length)\n\t\t\t\t\titer = (if xss[current_index].iter? then xss[current_index] else lazy(xss[current_index])).iter()\n\t\t\t\t\treturn iter()\n\t\t\t\telse\n\t\t\t\t\treturn nil\n\n\t{zip, zipWith} = do ->\n\t\tfinished = (arr) ->\n\t\t\tfor x in arr\n\t\t\t\treturn true if x is nil\n\t\t\treturn false\n\n\t\tzip = (xss...) ->\n\t\t\tlazylist ->\n\t\t\t\titers = ((if xs.iter? then xs else lazy(xs)).iter() for xs in xss)\n\t\t\t\titerator ->\n\t\t\t\t\tnext = (iter() for iter in iters)\n\t\t\t\t\tif finished(next)\n\t\t\t\t\t\treturn nil\n\t\t\t\t\telse\n\t\t\t\t\t\treturn next\n\n\t\tzipWith = (f) -> (xss...) ->\n\t\t\tlazylist ->\n\t\t\t\titers = ((if xs.iter? then xs else lazy(xs)).iter() for xs in xss)\n\t\t\t\titerator ->\n\t\t\t\t\tnext = (iter() for iter in iters)\n\t\t\t\t\tif finished(next)\n\t\t\t\t\t\treturn nil\n\t\t\t\t\telse\n\t\t\t\t\t\treturn f(next...)\n\n\t\treturn {zip, zipWith}\n\n\tcartProd = do -> # cartesian product\n\t\tinc_vector = (limits) ->\n\t\t\tlen_minus_1 = limits.length - 1\n\t\t\t(vec) ->\n\t\t\t\ti = len_minus_1\n\t\t\t\tvec[i--] = 0 until ++vec[i] < limits[i] or i <= 0\n\t\t\t\treturn vec\n\n\t\tapply_vector = (space) ->\n\t\t\tlen = space.length\n\t\t\t(vec) ->\n\t\t\t\t(space[i][vec[i]] for i in [0...len])\n\n\t\t(xss...) ->\n\t\t\tlazylist ->\n\t\t\t\txss = (list(xs) for xs in xss)\n\t\t\t\tlimits = (xss[i].length for i in [0...xss.length])\n\t\t\t\t(return nil if len is 0) for len in limits\n\t\t\t\tinc = inc_vector(limits)\n\t\t\t\tget_value = apply_vector(xss)\n\t\t\t\tv = (0 for i in [0...xss.length])\n\t\t\t\titerator ->\n\t\t\t\t\tif v[0] < limits[0] then (r = get_value v; inc v; r) else nil\n\n\t# lazylist consumers: list, last, length, foldl, best, all, any, foreach,\n\n\tlist = (xs) -> #force list elements of the lazylist to get an array\n\t\tif xs.iter?\n\t\t\tit = xs.iter()\n\t\t\t(x while (x = it()) isnt nil)\n\t\telse if xs instanceof Array\n\t\t\txs\n\t\telse\n\t\t\tthrow Error 'list(xs): xs is neither LazyList nor Array'\n\n\tlast = (xs) -> #returns nil if xs is empty\n\t\tif not xs.iter? then xs[xs.length - 1] ? nil else\n\t\t\titer = (if xs.iter? then xs else lazy(xs)).iter()\n\t\t\tr = nil\n\t\t\tr = x while (x = iter()) isnt nil\n\t\t\treturn r\n\n\tlength = (xs) ->\n\t\tif not xs.iter? then xs.length else\n\t\t\titer = (if xs.iter? then xs else lazy(xs)).iter()\n\t\t\tr = 0\n\t\t\t++r while (x = iter()) isnt nil\n\t\t\treturn r\n\n\tfoldl = (f, r) ->\n\t\t(xs) ->\n\t\t\titer = (if xs.iter? then xs else lazy(xs)).iter()\n\t\t\tr = f(r, x) while (x = iter()) isnt nil\n\t\t\treturn r\n\n\tbest = (better) ->\n\t\t(xs) ->\n\t\t\titer = (if xs.iter? then xs else lazy(xs)).iter()\n\t\t\treturn null if (r = iter()) is nil\n\t\t\twhile (it = iter()) isnt nil\n\t\t\t\tr = if better(it, r) then it else r\n\t\t\treturn r\n\n\tall = (f) ->\n\t\tf = ((x) -> x is f) if typeof(f) isnt 'function'\n\t\t(xs) ->\n\t\t\titer = (if xs.iter? then xs else lazy(xs)).iter()\n\t\t\twhile (x = iter()) isnt nil\n\t\t\t\treturn false if not f(x)\n\t\t\treturn true\n\n\tany = (f) ->\n\t\tall_not = all (x) -> not f(x)\n\t\t(xs) -> not (all_not xs)\n\n\tbrk = -> brk\n\tbrk.toString = -> 'foreach.break'\n\n\tforeach = (xs, callback, fruit) ->\n\t\titer = (if xs.iter? then xs else lazy(xs)).iter()\n\t\twhile (x = iter()) isnt nil\n\t\t\tbreak if callback(x, fruit) is brk\n\t\tfruit\n\n\tObject.defineProperties foreach,\n\t\tbreak:\n\t\t\twritable: false\n\t\t\tconfigurable: false\n\t\t\tenumerable: false\n\t\t\tvalue: brk\n\n\treturn {\n\t\t# lazylist definition\n\t\tnil, lazylist, iterator,\n\n\t\t# lazylist constants\n\t\tnaturals, range, primes,\n\n\t\t# lazylist producers\n\t\tlazy, enumerate, repeat, generate, random_gen, ranged_random_gen, permutation_gen,\n\n\t\t# lazylist decorators\n\t\tcons, map, filter, take, takeWhile, drop, dropWhile, scanl, streak, reverse,\n\n\t\t# lazylist combiners\n\t\tconcat, zip, zipWith, cartProd,\n\n\t\t# lazylist consumers\n\t\tlist, last, length, foldl, best, all, any, foreach,\n\t}\n\nmodule.exports = this_module()\n\n","this_module = ({String, Array, Object}) ->\n\t# reinforce String\n\n\tObject.defineProperties String.prototype,\n\t\tformat:\n\t\t\tenumerable: false\n\t\t\tvalue: (args) ->\n\t\t\t\t@.replace /\\{(\\w+)\\}/g, (m, i) -> if args[i]? then args[i] else m\n\t\trepeat:\n\t\t\tenumerable: false\n\t\t\tvalue: (n) ->\n\t\t\t\t[r, pat] = ['', @]\n\t\t\t\twhile n > 0\n\t\t\t\t\tr += pat if n & 1\n\t\t\t\t\tn >>= 1\n\t\t\t\t\tpat += pat\n\t\t\t\treturn r\n\t\tcut:\n\t\t\tenumerable: false\n\t\t\tvalue: (start_pat, end_pat) ->\n\t\t\t\ti = @.search(start_pat) + 1\n\t\t\t\treturn null if i == 0\n\t\t\t\tj = @.substr(i).search(end_pat)\n\t\t\t\treturn null if j == -1\n\t\t\t\t@.substr(i, j)\n\n\t# reinforce Array\n\n\tObject.defineProperties Array.prototype,\n\t\tfirst:\n\t\t\tget: -> @[0]\n\t\t\tset: (v) -> @[0] = v\n\t\tsecond:\n\t\t\tget: -> @[1]\n\t\t\tset: (v) -> @[1] = v\n\t\tthird:\n\t\t\tget: -> @[2]\n\t\t\tset: (v) -> @[2] = v\n\t\tlast:\n\t\t\tget: -> @[@length - 1]\n\t\t\tset: (v) -> @[@length - 1] = v\n\t\trepeat:\n\t\t\tenumerable: false\n\t\t\tvalue: (n) ->\n\t\t\t\t[r, pat] = [[], @]\n\t\t\t\twhile n > 0\n\t\t\t\t\tr = r.concat(pat) if n & 1\n\t\t\t\t\tn >>= 1\n\t\t\t\t\tpat = pat.concat(pat)\n\t\t\t\treturn r\n\t\tunique:\n\t\t\tenumerable: false\n\t\t\tvalue: do ->\n\t\t\t\tinit = new Object\n\t\t\t\t(equal)->\n\t\t\t\t\ti = 0\n\t\t\t\t\tt = init\n\t\t\t\t\tif not equal?\n\t\t\t\t\t\tfor x, j in @ when x != t\n\t\t\t\t\t\t\t@[i] = t = x\n\t\t\t\t\t\t\ti += 1\n\t\t\t\t\telse\n\t\t\t\t\t\tfor x, j in @ when t is init or not equal(x, t)\n\t\t\t\t\t\t\t@[i] = t = x\n\t\t\t\t\t\t\ti += 1\n\t\t\t\t\t@splice(i, Infinity)\n\t\t\t\t\treturn @\n\n\t# reinforce Object\n\n\tObject.defineProperties Object,\n\t\tsize:\n\t\t\tenumerable: false\n\t\t\tvalue: (d) -> Object.keys(d).length\n\t\textend:\n\t\t\tenumerable: false\n\t\t\tvalue: (base, defaults...) -> #NOTE: modified inplace, use copy() to protect it.\n\t\t\t\tfor d in defaults when d?\n\t\t\t\t\tbase[k] ?= v for k, v of d #NOTE: null values will be replaced if a default value exists.\n\t\t\t\treturn base\n\t\tupdate:\n\t\t\tenumerable: false\n\t\t\tvalue: (base, updates...) -> #NOTE: modified inplace, use copy() to protect it.\n\t\t\t\tfor d in updates when d?\n\t\t\t\t\tbase[k] = v for k, v of d\n\t\t\t\treturn base\n\n\treturn {\n\t\tString, Array, Object\n\t}\n\nmodule.exports = this_module {String, Array, Object}\n","this_module = () ->\n\turi_encoder = (component_packer = str) ->\n\t\t(obj) ->\n\t\t\t(\"#{encodeURIComponent(k)}=#{encodeURIComponent component_packer v}\" for k, v of obj).join('&')\n\n\turi_decoder = (component_unpacker = ((s) -> s)) ->\n\t\t(str) ->\n\t\t\td = {}\n\t\t\tfor s in (str.match /[^?=&]+=[^&]*/g) ? []\n\t\t\t\t[..., k, v] = s.match /([^=]+)=(.*)/\n\t\t\t\td[decodeURIComponent(k)] = (component_unpacker decodeURIComponent v)\n\t\t\treturn d\n\n\treturn {\n\t\turi_encoder, uri_decoder,\n\t}\n\nmodule.exports = this_module()\n\n","this_module = () ->\n\tfunction_literal = (f) ->\n\t\texpr = f.toString().replace(/^\\s*function\\s?\\(\\s?\\)\\s?{\\s*return\\s*([^]*?);?\\s*}$/, '$1')\n\t\texpr = expr.replace(/[\\r\\n]{1,2}\\s*/g, '') if expr.length <= 100\n\t\treturn expr\n\n\ttime_now = ->\n\t\t(new Date).getTime()\n\n\tlog = do -> #log an expression with it's literal and time used\n\t\tdye = do ->\n\t\t\t# ANSI Terminal Colors.\n\t\t\tcavailable = process? and not process.env.NODE_DISABLE_COLORS\n\t\t\tpalette =\n\t\t\t\tbold: '\\x1B[0;1m'\n\t\t\t\tred: '\\x1B[0;31m'\n\t\t\t\tgreen: '\\x1B[0;32m'\n\t\t\t\tyellow: '\\x1B[0;33m'\n\t\t\t\tblue: '\\x1B[0;34m'\n\t\t\t\tbold_grey: '\\x1B[1;30m'\n\t\t\tif not cavailable\n\t\t\t\t(color) -> (s) -> s\n\t\t\telse\n\t\t\t\t(color) ->\n\t\t\t\t\t(s) -> \"#{palette[color]}#{s}#{'\\x1B[0m'}\"\n\n\t\tlog_label = do ->\n\t\t\tflag_palette =\n\t\t\t\t'#': 'bold_grey'\n\t\t\t\t'I': 'green'\n\t\t\t\t'E': 'red'\n\t\t\t\t'W': 'yellow'\n\t\t\top_flag = (op) ->\n\t\t\t\tif op == 'log' then '#' else op[0].toUpperCase()\n\t\t\t(op) ->\n\t\t\t\tflag = op_flag(op)\n\t\t\t\tdye(flag_palette[flag]) flag\n\n\t\thistories = []\n\t\tfactory = (op) ->\n\t\t\tprefix = \"#{dye('bold_grey') '#'}#{log_label op}\"\n\t\t\t(args...) ->\n\t\t\t\tball = []\n\t\t\t\tfor f in args\n\t\t\t\t\tif typeof f == 'function'\n\t\t\t\t\t\texpr = function_literal(f)\n\t\t\t\t\t\tstart_time = time_now()\n\t\t\t\t\t\teval_result = f()\n\t\t\t\t\t\ttime_used = time_now() - start_time\n\t\t\t\t\t\tball.push(\"#{prefix} #{dye('green') expr} #{dye('bold_grey') '==>'}\", f())\n\t\t\t\t\t\tball.push(dye('yellow') \"[#{time_used}ms]\") if time_used > 0\n\t\t\t\t\telse\n\t\t\t\t\t\tball.push(\"#{prefix}\", f)\n\t\t\t\tconsole[op] ball...\n\t\t\t\thistories.push(ball)\n\t\t\t\thistories.shift() if histories.length >= 10\n\t\t\t\treturn null\n\t\tgot = factory('log')\n\t\tgot.histories = histories\n\t\tgot.info = factory('info')\n\t\tgot.warn = factory('warn')\n\t\tgot.error = got.err = factory('error')\n\t\treturn got\n\n\tassert = (f, msg) ->\n\t\t[f, msg] = [msg, f] if f not instanceof Function\n\t\ttry\n\t\t\tthrow Error \"Assertion #{msg ? function_literal(f)} Failed!\" if not f()\n\t\tcatch e\n\t\t\tthrow Error \"Assertion #{msg ? function_literal(f)} Unknown:\\n#{e}\"\n\n\tassertEq = (l, r) ->\n\t\ttry\n\t\t\tlv = l()\n\t\t\trv = r()\n\t\tcatch e\n\t\t\tthrow Error \"Equation Between #{function_literal(l)} And #{function_literal(r)} Unknown:\\n#{e}\"\n\t\tif lv isnt rv\n\t\t\tthrow Error \"Equation Failed:\\n\\t#{function_literal(l)} IS #{lv} BUT\\n\\t#{function_literal(r)} IS #{rv}.\"\n\n\tassertEqOn = (f) -> (l, r) ->\n\t\ttry\n\t\t\tlv = l()\n\t\t\trv = r()\n\t\t\tflv = f(lv)\n\t\t\tfrv = f(rv)\n\t\tcatch e\n\t\t\tthrow Error \"MAPPED Equation Between #{function_literal(l)} And #{function_literal(r)} Unknown:\\n#{e}\"\n\t\tif flv isnt frv\n\t\t\tthrow Error \"Equation Failed:\\n\\t#{function_literal(l)} IS #{lv} AND MAPPED TO #{flv} BUT\\n\\t#{function_literal(r)} IS #{rv} AND MAPPED TO #{frv}.\"\n\n\tsecurely = (f) -> # ensure a function not to modify it's arguments\n\t\t(args...) ->\n\t\t\targs = deepcopy args\n\t\t\tf(args...)\n\n\tdict = (pairs) -> #for dict comprehensions\n\t\td = {}\n\t\td[k] = v for [k, v] in pairs\n\t\treturn d\n\n\t{copy, deepcopy} = do ->\n\t\tcp = (root, dep) ->\n\t\t\treturn root if dep == 0 or not root? or typeof(root) != 'object'\n\t\t\tif root instanceof Array\n\t\t\t\tr = (cp(v, dep-1) for v in root)\n\t\t\telse\n\t\t\t\tr = {}\n\t\t\t\tr[k] = cp(v, dep-1) for k, v of root\n\t\t\treturn r\n\t\tcopy: (obj, depth=1) -> cp(obj, depth)\n\t\tdeepcopy: (obj, depth=Infinity) -> cp(obj, depth)\n\n\textend = (base) -> (defaults...) -> #NOTE: modified inplace, use copy() to protect it.\n\t\tfor d in defaults when d?\n\t\t\tbase[k] ?= v for k, v of d #NOTE: null values will be replaced if a default value exists.\n\t\treturn base\n\n\tupdate = (base) -> (updates...) -> #NOTE: modified inplace, use copy() to protect it.\n\t\tfor d in updates when d?\n\t\t\tbase[k] = v for k, v of d\n\t\treturn base\n\n\treturn {\n\t\tlog, assert, assertEq, assertEqOn, dict, copy, deepcopy, securely, extend, update,\n\t}\n\nmodule.exports = this_module()\n\n"],"sourceRoot":"/source/"}