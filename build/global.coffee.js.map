{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","node_modules/browserify/node_modules/process/browser.js","global.coffee.js","basics.coffee","coffee-mate.coffee","convertors.coffee","funny.coffee","global.coffee","lazy.coffee","reinforce.coffee","url-helpers.coffee","utils.coffee"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","drainQueue","draining","currentQueue","len","queue","noop","process","nextTick","fun","push","setTimeout","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","cwd","chdir","umask",2,"this_module","slice","arg","abs","accept_multi_or_array","best","ceil","combine","curry2","curry3","equal","flip","floor","greaterEqual","greaterThan","lessEqual","lessThan","max","max_index","min","min_index","minus","notEqual","pack","pluck","plus","seek","sum","uncurry2","uncurry3","unpack","x","y","g","b","c","arr","apply","arguments","attr","d","it","Math","first","Array","k","results","j","ref","this","./lazy",3,"basics","convertors","funny","lazy","url_helpers","utils","extend","./basics","./convertors","./funny","./url-helpers","./utils",4,"bool","chr","float","hex","int","json","obj","ord","str","base","parseInt","test","parseFloat","toString","charCodeAt","String","fromCharCode","indent","JSON","stringify","parse",5,"Y","church","memoize","iter","get_key","cache","args","cached","key",6,"global","mate","v","self","window","./coffee-mate","./reinforce",7,"Symbol","all","any","brk","cartProd","concat","cons","drop","dropWhile","enumerate","filter","foldl","foreach","generate","iterator","last","lazylist","list","map","naturals","nil","permutation_gen","primes","random_gen","range","ranged_random_gen","repeat","reverse","scanl","streak","take","takeWhile","zip","zipWith","next","value","done","stop","start","step","p","Infinity","keys","Object","init","status","hash","sin","opts","seed","random","next_permutation","m","ref1","ls","xs","ok","finished","prevx","got","buf","shift","copy","xss","current_index","len1","iters","apply_vector","inc_vector","limits","len_minus_1","vec","space","get_value","inc","results1","better","all_not","callback","fruit","defineProperties","break","writable","configurable","enumerable",8,"prototype","format","replace","pat","cut","start_pat","end_pat","search","substr","get","set","second","third","unique","splice","size","defaults","update","updates",9,"uri_decoder","uri_encoder","component_packer","encodeURIComponent","join","component_unpacker","ref2","match","decodeURIComponent",10,"assert","assertEq","assertEqOn","deepcopy","dict","function_literal","log","securely","time_now","expr","Date","getTime","dye","factory","histories","log_label","cavailable","palette","NODE_DISABLE_COLORS","bold","red","green","yellow","blue","bold_grey","color","flag_palette","op_flag","#","I","E","W","op","toUpperCase","flag","prefix","ball","eval_result","start_time","time_used","console","info","warn","error","err","msg","Function","_error","lv","rv","flv","frv","pairs","cp","root","dep","depth","_process"],"mappings":"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","file":"global.coffee.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    draining = true;\n    var currentQueue;\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        var i = -1;\n        while (++i < len) {\n            currentQueue[i]();\n        }\n        len = queue.length;\n    }\n    draining = false;\n}\nprocess.nextTick = function (fun) {\n    queue.push(fun);\n    if (!draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n",null,"this_module = ({best}) ->\n\t# transformers\n\tflip = (f) ->\n\t\t(x) -> (y) -> f(y)(x)\n\n\tcombine = (f) -> (g) ->\n\t\t(x) -> f g(x)\n\n\tcurry2 = (f) ->\n\t\t(a) -> (b) -> f(a, b)\n\n\tcurry3 = (f) ->\n\t\t(a) -> (b) -> (c) -> f(a, b, c)\n\n\tuncurry2 = (f) ->\n\t\t(a, b) -> f(a)(b)\n\n\tuncurry3 = (f) ->\n\t\t(a, b, c) -> f(a)(b)(c)\n\n\tpack = (f) ->\n\t\t(arr) -> f(arr...)\n\n\tunpack = (f) ->\n\t\t(arr...) -> f(arr)\n\n\t# seek & pluck in Array or Object\n\tseek = (arr) ->\n\t\t(i) -> arr[i]\n\n\tpluck = (attr) ->\n\t\t(d) -> d[attr]\n\n\t# compare\n\tequal = (it) ->\n\t\t(x) -> x == it\n\n\tnotEqual = (it) ->\n\t\t(x) -> x != it\n\n\tlessThan = (it) ->\n\t\t(x) -> x < it\n\n\tgreaterThan = (it) ->\n\t\t(x) -> x > it\n\n\tlessEqual = (it) ->\n\t\t(x) -> x <= it\n\n\tgreaterEqual = (it) ->\n\t\t(x) -> x >= it\n\n\t# math\n\tplus = (it) ->\n\t\t(x) -> x + it\n\n\tminus = (it) ->\n\t\t(x) -> x - it\n\n\tabs = Math.abs\n\tfloor = Math.floor\n\tceil = Math.ceil\n\n\taccept_multi_or_array = (f) ->\n\t\t(arr...) ->\n\t\t\tf(if arr.length == 1 and arr.first instanceof Array then arr.first else arr)\n\n\tsum = accept_multi_or_array (arr) ->\n\t\tarr = arr.first if arr.length == 1 and arr.first instanceof Array\n\t\tr = 0\n\t\tr += x for x in arr\n\t\tr\n\n\tmax = accept_multi_or_array (arr) ->\n\t\tbest((a, b) -> a > b) arr\n\n\tmin = accept_multi_or_array (arr) ->\n\t\tbest((a, b) -> a < b) arr\n\n\tmax_index = accept_multi_or_array (arr) ->\n\t\tbest((i, j) -> arr[i] > arr[j]) [0...arr.length]\n\n\tmin_index = accept_multi_or_array (arr) ->\n\t\tbest((i, j) -> arr[i] < arr[j]) [0...arr.length]\n\n\treturn {\n\t\tflip, combine,\n\t\tcurry2, curry3, uncurry2, uncurry3, pack, unpack,\n\t\tseek, pluck,\n\t\tequal, notEqual, lessThan, lessEqual, greaterThan, greaterEqual,\n\t\tplus, minus, abs, floor, ceil,\n\t\tsum, max, min, max_index, min_index,\n\t}\n\nmodule.exports = this_module\n\tbest: require('./lazy').best\n\n","utils = require './utils'\nbasics = require './basics'\nlazy = require './lazy'\nfunny = require './funny'\nconvertors = require './convertors'\nurl_helpers = require './url-helpers'\n\nmodule.exports = utils.extend({}) utils, basics, lazy, funny, convertors, url_helpers\n\n","this_module = () ->\n\tint = (s, base) -> if typeof(s) == 'string' then (r = parseInt(s, base); unless s.slice? and r == parseInt(s.slice(0,-1), base) then r else null) else parseInt(0 + s)\n\tfloat = (s) -> if /^-?[0-9]*(\\.[0-9]+)?([eE]-?[0-9]+)?$/.test(s) then parseFloat(s) else null\n\tstr = (x, base) -> x.toString(base)\n\tbool = (x) -> if x in [true, false] then x else null\n\thex = (x) -> x.toString(16)\n\tord = (c) -> c.charCodeAt()\n\tchr = (x) -> String.fromCharCode(x)\n\tjson = (it, indent) -> JSON.stringify(it, null, indent)\n\tobj = (s) -> JSON.parse(s)\n\n\treturn {\n\t\tint, float, bool, str, hex, ord, chr, json, obj,\n\t}\n\nmodule.exports = this_module()\n\n","this_module = () ->\n\tchurch = (n) -> #the nth church number\n\t\titer = (f, n, r) ->\n\t\t\tif n == 0 then r else iter(f, n - 1, f(r))\n\t\t(f) ->\n\t\t\t(x) -> iter(f, n + 0, x)\n\n\tY = (f) -> #the Y combinator\n\t\t((x) -> (x x)) ((x) -> (f ((y) -> ((x x) y))))\n\n\tmemoize = (f, get_key = ((args...) -> json(args))) ->\n\t\tcache = {}\n\t\t(args...) ->\n\t\t\tkey = get_key(args...)\n\t\t\tcached = cache[key]\n\t\t\tif cached?\n\t\t\t\tcached\n\t\t\telse\n\t\t\t\tr = f(args...)\n\t\t\t\tcache[key] = r\n\t\t\t\tr\n\n\treturn {\n\t\tchurch, Y, memoize,\n\t}\n\nmodule.exports = this_module()\n\n","require './reinforce'\nmate = require('./coffee-mate')\nglobal[k] = v for k, v of mate\n","this_module = ({Symbol}) ->\n\n\t# LazyList definition: nil, lazylist, iterator,\n\n\tlazylist = (f) -> # construct a lazylist from a function.\n\t\tf[Symbol.iterator] = -> f()\n\t\tf.toString = -> \"LazyList\"\n\t\treturn f\n\n\tnil = lazylist -> nil # xs is empty <==> xs is nil or xs() is nil or xs()() is nil... <==> last xs is nil\n\tnil.toString = -> 'nil'\n\n\titerator = (it) -> # construct an iterator(which is a function with status) from a function.\n\t\tit.next = ->\n\t\t\tr = it()\n\t\t\t{value: r, done: r == nil}\n\t\tit.toString = -> \"Iterator\"\n\t\treturn it\n\n\t# lazylist constants: naturals, range, primes,\n\n\tnaturals =\n\t\tlazylist ->\n\t\t\ti = -1\n\t\t\titerator ->\n\t\t\t\t++i\n\n\trange = (args...) ->\n\t\tif args.length == 0\n\t\t\tnaturals\n\t\telse if args.length == 1\n\t\t\tlazylist ->\n\t\t\t\t[stop] = args\n\t\t\t\ti = -1\n\t\t\t\titerator ->\n\t\t\t\t\tif ++i < stop then i else nil\n\t\telse if args.length == 2\n\t\t\tlazylist ->\n\t\t\t\t[start, stop] = args\n\t\t\t\tif start < stop\n\t\t\t\t\ti = start - 1\n\t\t\t\t\titerator ->\n\t\t\t\t\t\tif ++i < stop then i else nil\n\t\t\t\telse\n\t\t\t\t\ti = start + 1\n\t\t\t\t\titerator ->\n\t\t\t\t\t\tif --i > stop then i else nil\n\t\telse\n\t\t\tlazylist ->\n\t\t\t\t[start, stop, step] = args\n\t\t\t\tthrow 'ERR IN range(): YOU ARE CREATING AN UNLIMITTED RANGE' if stop != start and (stop - start) * step < 0\n\t\t\t\ti = start - step\n\t\t\t\tif start < stop\n\t\t\t\t\titerator ->\n\t\t\t\t\t\tif (i += step) < stop then i else nil\n\t\t\t\telse\n\t\t\t\t\titerator ->\n\t\t\t\t\t\tif (i += step) > stop then i else nil\n\n\tprimes = lazylist -> do\n\t\tfilter((x) -> all((p) -> x % p != 0) takeWhile((p) -> p * p <= x) range(2, Infinity)) range(2, Infinity)\n\n\t# lazylist producers: lazy, enumerate, generate, random_gen, ranged_random_gen, permutation_gen,\n\n\tlazy = (arr) -> #make a lazylist from array or function\n\t\tif typeof arr is 'function'\n\t\t\tlazylist arr\n\t\telse if arr[Symbol.iterator]?\n\t\t\tlazylist ->\n\t\t\t\tit = arr[Symbol.iterator]()\n\t\t\t\titerator ->\n\t\t\t\t\tr = it.next()\n\t\t\t\t\tif r.done then nil else r.value\n\t\telse #maybe Array or String\n\t\t\tlazylist ->\n\t\t\t\ti = -1\n\t\t\t\titerator ->\n\t\t\t\t\ti += 1\n\t\t\t\t\tif i < arr.length\n\t\t\t\t\t\tarr[i]\n\t\t\t\t\telse\n\t\t\t\t\t\tnil\n\n\tenumerate = (it) -> # iterator with index(with key for object)\n\t\tif it[Symbol.iterator]? or it instanceof Array\n\t\t\tzip(naturals, it)\n\t\telse\n\t\t\tlazylist ->\n\t\t\t\tkeys = Object.keys(it)\n\t\t\t\ti = -1\n\t\t\t\titerator ->\n\t\t\t\t\tif ++i < keys.length then [(k = keys[i]), it[k]] else nil\n\n\trepeat = (x) -> # repeat x\n\t\tlazylist ->\n\t\t\titerator ->\n\t\t\t\tx\n\n\tgenerate = (init, next) -> #function next should not change it's argument\n\t\tlazylist ->\n\t\t\tstatus = init\n\t\t\titerator ->\n\t\t\t\tlast = status\n\t\t\t\tstatus = next status\n\t\t\t\treturn last\n\n\trandom_gen = do ->\n\t\thash = (x) ->\n\t\t\tx = Math.sin(x) * 1e4\n\t\t\tx - Math.floor(x)\n\t\t(opts) ->\n\t\t\tseed = hash(opts?.seed ? Math.random())\n\t\t\tgenerate seed, hash\n\n\tranged_random_gen = (range, opts) ->\n\t\tseed = opts?.seed ? Math.random()\n\t\tmap((x) -> Math.floor(x * range)) random_gen(seed: seed)\n\n\tpermutation_gen = do ->\n\t\tnext_permutation = (x) ->\n\t\t\tx = x[...]\n\t\t\tl = x.length - 1\n\t\t\t--l while l >= 1 and x[l] <= x[l - 1]\n\n\t\t\tif (l != 0)\n\t\t\t\tm = x.length - 1\n\t\t\t\t--m while m > l - 1 and x[m] <= x[l - 1]\n\t\t\t\t[x[m], x[l - 1]] = [x[l - 1], x[m]]\n\n\t\t\tr = x.length - 1\n\t\t\twhile(l < r)\n\t\t\t\t[x[l], x[r]] = [x[r], x[l]]\n\t\t\t\t++l\n\t\t\t\t--r\n\t\t\treturn x\n\n\t\t(arr) ->\n\t\t\tif arr.length == 0 then nil else\n\t\t\t\tconcat [arr[...]], takeWhile((ls) -> json(ls) != json(arr)) drop(1) generate arr, next_permutation\n\n\t# lazylist decorators: take, takeWhile, drop, dropWhile, cons, map, filter, scanl, streak, reverse,\n\n\ttake = (n) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\tc = -1\n\t\t\t\titerator ->\n\t\t\t\t\tif ++c < n then iter() else nil\n\n\ttakeWhile = (ok) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\titerator ->\n\t\t\t\t\tif (x = iter()) isnt nil and ok(x) then x else nil\n\n\tdrop = (n) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\tfinished = false\n\t\t\t\t(finished or= (iter() is nil); break if finished) for i in [0...n]\n\t\t\t\tif finished then (-> nil) else iter\n\n\tdropWhile = (ok) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\tnull while ok(x = iter()) and x isnt nil\n\t\t\t\titerator ->\n\t\t\t\t\t[prevx, x] = [x, iter()]\n\t\t\t\t\treturn prevx\n\n\tcons = (x) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = null\n\t\t\t\titerator ->\n\t\t\t\t\tif iter is null\n\t\t\t\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\t\t\treturn x\n\t\t\t\t\telse\n\t\t\t\t\t\treturn iter()\n\n\tmap = (f) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\titerator ->\n\t\t\t\t\tif (x = iter()) isnt nil then f(x) else nil\n\n\tfilter = (ok) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\titerator ->\n\t\t\t\t\tnull while not ok(x = iter()) and x isnt nil\n\t\t\t\t\treturn x\n\n\tscanl = (f, r) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\titerator ->\n\t\t\t\t\tgot = r\n\t\t\t\t\tr = if (x = iter()) isnt nil then f(r, x) else nil\n\t\t\t\t\treturn got\n\n\tstreak = (n) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\tbuf = []\n\t\t\t\titerator ->\n\t\t\t\t\treturn nil if (x = iter()) is nil\n\t\t\t\t\tbuf.push(x)\n\t\t\t\t\tbuf.shift(1) if buf.length > n\n\t\t\t\t\treturn buf[...]\n\n\treverse = (xs) ->\n\t\tarr = if typeof xs is 'function' then list xs else copy xs\n\t\treturn lazy arr.reverse()\n\n\t# lazylist combiners: concat, zip, zipWith, cartProd,\n\n\tconcat = (xss...) ->\n\t\tlazylist ->\n\t\t\titer = (if xss[0][Symbol.iterator]? then xss[0] else lazy(xss[0]))[Symbol.iterator]()\n\t\t\tcurrent_index = 0\n\t\t\titerator ->\n\t\t\t\tif (x = iter()) isnt nil\n\t\t\t\t\treturn x\n\t\t\t\telse if (++current_index < xss.length)\n\t\t\t\t\titer = (if xss[current_index][Symbol.iterator]? then xss[current_index] else lazy(xss[current_index]))[Symbol.iterator]()\n\t\t\t\t\treturn iter()\n\t\t\t\telse\n\t\t\t\t\treturn nil\n\n\t{zip, zipWith} = do ->\n\t\tfinished = (arr) ->\n\t\t\tfor x in arr\n\t\t\t\treturn true if x is nil\n\t\t\treturn false\n\n\t\tzip = (xss...) ->\n\t\t\tlazylist ->\n\t\t\t\titers = ((if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]() for xs in xss)\n\t\t\t\titerator ->\n\t\t\t\t\tnext = (iter() for iter in iters)\n\t\t\t\t\tif finished(next)\n\t\t\t\t\t\treturn nil\n\t\t\t\t\telse\n\t\t\t\t\t\treturn next\n\n\t\tzipWith = (f) -> (xss...) ->\n\t\t\tlazylist ->\n\t\t\t\titers = ((if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]() for xs in xss)\n\t\t\t\titerator ->\n\t\t\t\t\tnext = (iter() for iter in iters)\n\t\t\t\t\tif finished(next)\n\t\t\t\t\t\treturn nil\n\t\t\t\t\telse\n\t\t\t\t\t\treturn f(next...)\n\n\t\treturn {zip, zipWith}\n\n\tcartProd = do -> # cartesian product\n\t\tinc_vector = (limits) ->\n\t\t\tlen_minus_1 = limits.length - 1\n\t\t\t(vec) ->\n\t\t\t\ti = len_minus_1\n\t\t\t\tvec[i--] = 0 until ++vec[i] < limits[i] or i <= 0\n\t\t\t\treturn vec\n\n\t\tapply_vector = (space) ->\n\t\t\tlen = space.length\n\t\t\t(vec) ->\n\t\t\t\t(space[i][vec[i]] for i in [0...len])\n\n\t\t(xss...) ->\n\t\t\tlazylist ->\n\t\t\t\txss = (list(xs) for xs in xss)\n\t\t\t\tlimits = (xss[i].length for i in [0...xss.length])\n\t\t\t\t(return nil if len is 0) for len in limits\n\t\t\t\tinc = inc_vector(limits)\n\t\t\t\tget_value = apply_vector(xss)\n\t\t\t\tv = (0 for i in [0...xss.length])\n\t\t\t\titerator ->\n\t\t\t\t\tif v[0] < limits[0] then (r = get_value v; inc v; r) else nil\n\n\t# lazylist consumers: list, last, length, foldl, best, all, any, foreach,\n\n\tlist = (xs) -> #force list elements of the lazylist to get an array\n\t\tif typeof xs is 'number'\n\t\t\tn = xs\n\t\t\t(xs) -> list take(n) xs\n\t\telse if typeof xs is 'function'\n\t\t\tit = xs[Symbol.iterator]()\n\t\t\t(x while (x = it()) isnt nil)\n\t\telse if xs[Symbol.iterator]?\n\t\t\tit = lazy(xs)[Symbol.iterator]()\n\t\t\t(x while (x = it()) isnt nil)\n\t\telse if xs instanceof Array\n\t\t\txs\n\t\telse\n\t\t\tthrow Error 'list(xs): xs is neither LazyList nor Array'\n\n\tlast = (xs) -> #returns nil if xs is empty\n\t\tif not xs[Symbol.iterator]? then xs[xs.length - 1] ? nil else\n\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\tr = nil\n\t\t\tr = x while (x = iter()) isnt nil\n\t\t\treturn r\n\n\tlength = (xs) ->\n\t\tif not xs[Symbol.iterator]? then xs.length else\n\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\tr = 0\n\t\t\t++r while (x = iter()) isnt nil\n\t\t\treturn r\n\n\tfoldl = (f, init) ->\n\t\t(xs) ->\n\t\t\tr = init\n\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\tr = f(r, x) while (x = iter()) isnt nil\n\t\t\treturn r\n\n\tbest = (better) ->\n\t\t(xs) ->\n\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\treturn null if (r = iter()) is nil\n\t\t\twhile (it = iter()) isnt nil\n\t\t\t\tr = if better(it, r) then it else r\n\t\t\treturn r\n\n\tall = (f) ->\n\t\tf = ((x) -> x is f) if typeof(f) isnt 'function'\n\t\t(xs) ->\n\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\twhile (x = iter()) isnt nil\n\t\t\t\treturn false if not f(x)\n\t\t\treturn true\n\n\tany = (f) ->\n\t\tall_not = all (x) -> not f(x)\n\t\t(xs) -> not (all_not xs)\n\n\tbrk = -> brk\n\tbrk.toString = -> 'foreach.break'\n\n\tforeach = (xs, callback, fruit) ->\n\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\twhile (x = iter()) isnt nil\n\t\t\tbreak if callback(x, fruit) is brk\n\t\tfruit\n\n\tObject.defineProperties foreach,\n\t\tbreak:\n\t\t\twritable: false\n\t\t\tconfigurable: false\n\t\t\tenumerable: false\n\t\t\tvalue: brk\n\n\treturn {\n\t\t# lazylist definition\n\t\tnil, lazylist, iterator, Symbol,\n\n\t\t# lazylist constants\n\t\tnaturals, range, primes,\n\n\t\t# lazylist producers\n\t\tlazy, enumerate, repeat, generate, random_gen, ranged_random_gen, permutation_gen,\n\n\t\t# lazylist decorators\n\t\tcons, map, filter, take, takeWhile, drop, dropWhile, scanl, streak, reverse,\n\n\t\t# lazylist combiners\n\t\tconcat, zip, zipWith, cartProd,\n\n\t\t# lazylist consumers\n\t\tlist, last, length, foldl, best, all, any, foreach,\n\t}\n\nmodule.exports = this_module\n\tSymbol: Symbol ? {iterator: 'iter'}\n","this_module = ({String, Array, Object}) ->\n\t# reinforce String\n\n\tObject.defineProperties String.prototype,\n\t\tformat:\n\t\t\tenumerable: false\n\t\t\tvalue: (args) ->\n\t\t\t\t@.replace /\\{(\\w+)\\}/g, (m, i) -> if args[i]? then args[i] else m\n\t\trepeat:\n\t\t\tenumerable: false\n\t\t\tvalue: (n) ->\n\t\t\t\t[r, pat] = ['', @]\n\t\t\t\twhile n > 0\n\t\t\t\t\tr += pat if n & 1\n\t\t\t\t\tn >>= 1\n\t\t\t\t\tpat += pat\n\t\t\t\treturn r\n\t\tcut:\n\t\t\tenumerable: false\n\t\t\tvalue: (start_pat, end_pat) ->\n\t\t\t\ti = @.search(start_pat) + 1\n\t\t\t\treturn null if i == 0\n\t\t\t\tj = @.substr(i).search(end_pat)\n\t\t\t\treturn null if j == -1\n\t\t\t\t@.substr(i, j)\n\n\t# reinforce Array\n\n\tObject.defineProperties Array.prototype,\n\t\tfirst:\n\t\t\tget: -> @[0]\n\t\t\tset: (v) -> @[0] = v\n\t\tsecond:\n\t\t\tget: -> @[1]\n\t\t\tset: (v) -> @[1] = v\n\t\tthird:\n\t\t\tget: -> @[2]\n\t\t\tset: (v) -> @[2] = v\n\t\tlast:\n\t\t\tget: -> @[@length - 1]\n\t\t\tset: (v) -> @[@length - 1] = v\n\t\trepeat:\n\t\t\tenumerable: false\n\t\t\tvalue: (n) ->\n\t\t\t\t[r, pat] = [[], @]\n\t\t\t\twhile n > 0\n\t\t\t\t\tr = r.concat(pat) if n & 1\n\t\t\t\t\tn >>= 1\n\t\t\t\t\tpat = pat.concat(pat)\n\t\t\t\treturn r\n\t\tunique:\n\t\t\tenumerable: false\n\t\t\tvalue: do ->\n\t\t\t\tinit = new Object\n\t\t\t\t(equal)->\n\t\t\t\t\ti = 0\n\t\t\t\t\tt = init\n\t\t\t\t\tif not equal?\n\t\t\t\t\t\tfor x, j in @ when x != t\n\t\t\t\t\t\t\t@[i] = t = x\n\t\t\t\t\t\t\ti += 1\n\t\t\t\t\telse\n\t\t\t\t\t\tfor x, j in @ when t is init or not equal(x, t)\n\t\t\t\t\t\t\t@[i] = t = x\n\t\t\t\t\t\t\ti += 1\n\t\t\t\t\t@splice(i, Infinity)\n\t\t\t\t\treturn @\n\n\t# reinforce Object\n\n\tObject.defineProperties Object,\n\t\tsize:\n\t\t\tenumerable: false\n\t\t\tvalue: (d) -> Object.keys(d).length\n\t\textend:\n\t\t\tenumerable: false\n\t\t\tvalue: (base, defaults...) -> #NOTE: modified inplace, use copy() to protect it.\n\t\t\t\tfor d in defaults when d?\n\t\t\t\t\tbase[k] ?= v for k, v of d #NOTE: null values will be replaced if a default value exists.\n\t\t\t\treturn base\n\t\tupdate:\n\t\t\tenumerable: false\n\t\t\tvalue: (base, updates...) -> #NOTE: modified inplace, use copy() to protect it.\n\t\t\t\tfor d in updates when d?\n\t\t\t\t\tbase[k] = v for k, v of d\n\t\t\t\treturn base\n\n\treturn {\n\t\tString, Array, Object\n\t}\n\nmodule.exports = this_module {String, Array, Object}\n","this_module = () ->\n\turi_encoder = (component_packer = str) ->\n\t\t(obj) ->\n\t\t\t(\"#{encodeURIComponent(k)}=#{encodeURIComponent component_packer v}\" for k, v of obj).join('&')\n\n\turi_decoder = (component_unpacker = ((s) -> s)) ->\n\t\t(str) ->\n\t\t\td = {}\n\t\t\tfor s in (str.match /[^?=&]+=[^&]*/g) ? []\n\t\t\t\t[..., k, v] = s.match /([^=]+)=(.*)/\n\t\t\t\td[decodeURIComponent(k)] = (component_unpacker decodeURIComponent v)\n\t\t\treturn d\n\n\treturn {\n\t\turi_encoder, uri_decoder,\n\t}\n\nmodule.exports = this_module()\n\n","this_module = () ->\n\tfunction_literal = (f) ->\n\t\texpr = f.toString().replace(/^\\s*function\\s?\\(\\s?\\)\\s?{\\s*return\\s*([^]*?);?\\s*}$/, '$1')\n\t\texpr = expr.replace(/[\\r\\n]{1,2}\\s*/g, '') if expr.length <= 100\n\t\treturn expr\n\n\ttime_now = ->\n\t\t(new Date).getTime()\n\n\tlog = do -> #log an expression with it's literal and time used\n\t\tdye = do ->\n\t\t\t# ANSI Terminal Colors.\n\t\t\tcavailable = (not window?) and process? and not process.env.NODE_DISABLE_COLORS\n\t\t\tpalette =\n\t\t\t\tbold: '\\x1B[0;1m'\n\t\t\t\tred: '\\x1B[0;31m'\n\t\t\t\tgreen: '\\x1B[0;32m'\n\t\t\t\tyellow: '\\x1B[0;33m'\n\t\t\t\tblue: '\\x1B[0;34m'\n\t\t\t\tbold_grey: '\\x1B[1;30m'\n\t\t\tif not cavailable\n\t\t\t\t(color) -> (s) -> s\n\t\t\telse\n\t\t\t\t(color) ->\n\t\t\t\t\t(s) -> \"#{palette[color]}#{s}#{'\\x1B[0m'}\"\n\n\t\tlog_label = do ->\n\t\t\tflag_palette =\n\t\t\t\t'#': 'bold_grey'\n\t\t\t\t'I': 'green'\n\t\t\t\t'E': 'red'\n\t\t\t\t'W': 'yellow'\n\t\t\top_flag = (op) ->\n\t\t\t\tif op == 'log' then '#' else op[0].toUpperCase()\n\t\t\t(op) ->\n\t\t\t\tflag = op_flag(op)\n\t\t\t\tdye(flag_palette[flag]) flag\n\n\t\thistories = []\n\t\tfactory = (op) ->\n\t\t\tprefix = \"#{dye('bold_grey') '#'}#{log_label op}\"\n\t\t\t(args...) ->\n\t\t\t\tball = []\n\t\t\t\tfor f in args\n\t\t\t\t\tif typeof f == 'function'\n\t\t\t\t\t\texpr = function_literal(f)\n\t\t\t\t\t\tstart_time = time_now()\n\t\t\t\t\t\teval_result = f()\n\t\t\t\t\t\ttime_used = time_now() - start_time\n\t\t\t\t\t\tball.push(\"#{prefix} #{dye('green') expr} #{dye('bold_grey') '==>'}\", eval_result)\n\t\t\t\t\t\tball.push(dye('yellow') \"[#{time_used}ms]\") if time_used > 0\n\t\t\t\t\telse\n\t\t\t\t\t\tball.push(\"#{prefix}\", f)\n\t\t\t\tconsole[op] ball...\n\t\t\t\thistories.push(ball)\n\t\t\t\thistories.shift() if histories.length >= 10\n\t\t\t\treturn null\n\t\tgot = factory('log')\n\t\tgot.histories = histories\n\t\tgot.info = factory('info')\n\t\tgot.warn = factory('warn')\n\t\tgot.error = got.err = factory('error')\n\t\treturn got\n\n\tassert = (f, msg) ->\n\t\t[f, msg] = [msg, f] if f not instanceof Function\n\t\ttry\n\t\t\tthrow Error \"Assertion #{msg ? function_literal(f)} Failed!\" if not f()\n\t\tcatch e\n\t\t\tthrow Error \"Assertion #{msg ? function_literal(f)} Unknown:\\n#{e}\"\n\n\tassertEq = (l, r) ->\n\t\ttry\n\t\t\tlv = l()\n\t\t\trv = r()\n\t\tcatch e\n\t\t\tthrow Error \"Equation Between #{function_literal(l)} And #{function_literal(r)} Unknown:\\n#{e}\"\n\t\tif lv isnt rv\n\t\t\tthrow Error \"Equation Failed:\\n\\t#{function_literal(l)} IS #{lv} BUT\\n\\t#{function_literal(r)} IS #{rv}.\"\n\n\tassertEqOn = (f) -> (l, r) ->\n\t\ttry\n\t\t\tlv = l()\n\t\t\trv = r()\n\t\t\tflv = f(lv)\n\t\t\tfrv = f(rv)\n\t\tcatch e\n\t\t\tthrow Error \"MAPPED Equation Between #{function_literal(l)} And #{function_literal(r)} Unknown:\\n#{e}\"\n\t\tif flv isnt frv\n\t\t\tthrow Error \"Equation Failed:\\n\\t#{function_literal(l)} IS #{lv} AND MAPPED TO #{flv} BUT\\n\\t#{function_literal(r)} IS #{rv} AND MAPPED TO #{frv}.\"\n\n\tsecurely = (f) -> # ensure a function not to modify it's arguments\n\t\t(args...) ->\n\t\t\targs = deepcopy args\n\t\t\tf(args...)\n\n\tdict = (pairs) -> #for dict comprehensions\n\t\td = {}\n\t\td[k] = v for [k, v] in pairs\n\t\treturn d\n\n\t{copy, deepcopy} = do ->\n\t\tcp = (root, dep) ->\n\t\t\treturn root if dep == 0 or not root? or typeof(root) != 'object'\n\t\t\tif root instanceof Array\n\t\t\t\tr = (cp(v, dep-1) for v in root)\n\t\t\telse\n\t\t\t\tr = {}\n\t\t\t\tr[k] = cp(v, dep-1) for k, v of root\n\t\t\treturn r\n\t\tcopy: (obj, depth=1) -> cp(obj, depth)\n\t\tdeepcopy: (obj, depth=Infinity) -> cp(obj, depth)\n\n\textend = (base) -> (defaults...) -> #NOTE: modified inplace, use copy() to protect it.\n\t\tfor d in defaults when d?\n\t\t\tbase[k] ?= v for k, v of d #NOTE: null values will be replaced if a default value exists.\n\t\treturn base\n\n\tupdate = (base) -> (updates...) -> #NOTE: modified inplace, use copy() to protect it.\n\t\tfor d in updates when d?\n\t\t\tbase[k] = v for k, v of d\n\t\treturn base\n\n\treturn {\n\t\tlog, assert, assertEq, assertEqOn, dict, copy, deepcopy, securely, extend, update,\n\t}\n\nmodule.exports = this_module()\n\n"],"sourceRoot":"/source/"}