{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","node_modules/browserify/node_modules/process/browser.js","coffee-mate.coffee.js","basics.coffee","coffee-mate.coffee","convertors.coffee","funny.coffee","lazy.coffee","url-helpers.coffee","utils.coffee"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","drainQueue","draining","currentQueue","len","queue","noop","process","nextTick","fun","push","setTimeout","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","cwd","chdir","umask",2,"this_module","slice","arg","abs","accept_multi_or_array","best","ceil","combine","curry2","curry3","equal","flip","floor","greaterEqual","greaterThan","lessEqual","lessThan","max","max_index","min","min_index","minus","notEqual","pack","pluck","plus","precise","seek","sum","uncurry2","uncurry3","unpack","x","y","g","b","c","arr","apply","arguments","attr","d","it","Math","parseFloat","toPrecision","first","Array","k","results","j","ref","this","./lazy",3,"basics","convertors","funny","lazy","url_helpers","utils","extend","./basics","./convertors","./funny","./url-helpers","./utils",4,"bool","chr","float","hex","int","json","obj","ord","str","base","parseInt","test","toString","charCodeAt","String","fromCharCode","indent","JSON","stringify","parse",5,"Y","church","memoize","iter","get_key","cache","args","cached","key",6,"Symbol","all","any","brk","cartProd","concat","cons","drop","dropWhile","enumerate","filter","foldl","foreach","generate","iterator","last","lazylist","list","map","naturals","nil","permutation_gen","primes","random_gen","range","ranged_random_gen","repeat","reverse","scanl","streak","take","takeWhile","zip","zipWith","next","value","done","stop","start","step","p","Infinity","keys","Object","init","status","hash","sin","opts","seed","random","next_permutation","m","ref1","ls","xs","ok","finished","prevx","got","buf","shift","copy","xss","current_index","len1","iters","apply_vector","inc_vector","limits","len_minus_1","vec","space","get_value","inc","v","results1","better","all_not","callback","fruit","defineProperties","break","writable","configurable","enumerable",7,"uri_decoder","uri_encoder","component_packer","encodeURIComponent","join","component_unpacker","ref2","match","decodeURIComponent",8,"assert","assertEq","assertEqOn","deepcopy","dict","function_literal","log","securely","time_now","update","expr","replace","Date","getTime","dye","factory","histories","log_label","cavailable","palette","window","NODE_DISABLE_COLORS","bold","red","green","yellow","blue","bold_grey","color","flag_palette","op_flag","#","I","E","W","op","toUpperCase","flag","prefix","ball","eval_result","start_time","time_used","console","info","warn","error","err","msg","Function","_error","lv","rv","flv","frv","pairs","cp","root","dep","depth","defaults","updates","_process"],"mappings":"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","file":"coffee-mate.coffee.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    draining = true;\n    var currentQueue;\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        var i = -1;\n        while (++i < len) {\n            currentQueue[i]();\n        }\n        len = queue.length;\n    }\n    draining = false;\n}\nprocess.nextTick = function (fun) {\n    queue.push(fun);\n    if (!draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n",null,"this_module = ({best}) ->\n\t# transformers\n\tflip = (f) ->\n\t\t(x) -> (y) -> f(y)(x)\n\n\tcombine = (f) -> (g) ->\n\t\t(x) -> f g(x)\n\n\tcurry2 = (f) ->\n\t\t(a) -> (b) -> f(a, b)\n\n\tcurry3 = (f) ->\n\t\t(a) -> (b) -> (c) -> f(a, b, c)\n\n\tuncurry2 = (f) ->\n\t\t(a, b) -> f(a)(b)\n\n\tuncurry3 = (f) ->\n\t\t(a, b, c) -> f(a)(b)(c)\n\n\tpack = (f) ->\n\t\t(arr) -> f(arr...)\n\n\tunpack = (f) ->\n\t\t(arr...) -> f(arr)\n\n\t# seek & pluck in Array or Object\n\tseek = (arr) ->\n\t\t(i) -> arr[i]\n\n\tpluck = (attr) ->\n\t\t(d) -> d[attr]\n\n\t# compare\n\tequal = (it) ->\n\t\t(x) -> x == it\n\n\tnotEqual = (it) ->\n\t\t(x) -> x != it\n\n\tlessThan = (it) ->\n\t\t(x) -> x < it\n\n\tgreaterThan = (it) ->\n\t\t(x) -> x > it\n\n\tlessEqual = (it) ->\n\t\t(x) -> x <= it\n\n\tgreaterEqual = (it) ->\n\t\t(x) -> x >= it\n\n\t# math\n\tplus = (it) ->\n\t\t(x) -> x + it\n\n\tminus = (it) ->\n\t\t(x) -> x - it\n\n\tabs = Math.abs\n\tfloor = Math.floor\n\tceil = Math.ceil\n\n\tprecise = (n) ->\n\t\t(x) -> parseFloat x.toPrecision(n)\n\n\taccept_multi_or_array = (f) ->\n\t\t(arr...) ->\n\t\t\tf(if arr.length == 1 and arr.first instanceof Array then arr.first else arr)\n\n\tsum = accept_multi_or_array (arr) ->\n\t\tarr = arr.first if arr.length == 1 and arr.first instanceof Array\n\t\tr = 0\n\t\tr += x for x in arr\n\t\tr\n\n\tmax = accept_multi_or_array (arr) ->\n\t\tbest((a, b) -> a > b) arr\n\n\tmin = accept_multi_or_array (arr) ->\n\t\tbest((a, b) -> a < b) arr\n\n\tmax_index = accept_multi_or_array (arr) ->\n\t\tbest((i, j) -> arr[i] > arr[j]) [0...arr.length]\n\n\tmin_index = accept_multi_or_array (arr) ->\n\t\tbest((i, j) -> arr[i] < arr[j]) [0...arr.length]\n\n\treturn {\n\t\tflip, combine,\n\t\tcurry2, curry3, uncurry2, uncurry3, pack, unpack,\n\t\tseek, pluck,\n\t\tequal, notEqual, lessThan, lessEqual, greaterThan, greaterEqual,\n\t\tplus, minus, abs, floor, ceil, precise,\n\t\tsum, max, min, max_index, min_index,\n\t}\n\nmodule.exports = this_module\n\tbest: require('./lazy').best\n\n","utils = require './utils'\nbasics = require './basics'\nlazy = require './lazy'\nfunny = require './funny'\nconvertors = require './convertors'\nurl_helpers = require './url-helpers'\n\nmodule.exports = utils.extend({}) utils, basics, lazy, funny, convertors, url_helpers\n\n","this_module = () ->\n\tint = (s, base) -> if typeof(s) == 'string' then (r = parseInt(s, base); unless s.slice? and r == parseInt(s.slice(0,-1), base) then r else null) else parseInt(0 + s)\n\tfloat = (s) -> if /^-?[0-9]*(\\.[0-9]+)?([eE]-?[0-9]+)?$/.test(s) then parseFloat(s) else null\n\tstr = (x, base) -> x.toString(base)\n\tbool = (x) -> if x in [true, false] then x else null\n\thex = (x) -> x.toString(16)\n\tord = (c) -> c.charCodeAt()\n\tchr = (x) -> String.fromCharCode(x)\n\tjson = (it, indent) -> JSON.stringify(it, null, indent)\n\tobj = (s) -> JSON.parse(s)\n\n\treturn {\n\t\tint, float, bool, str, hex, ord, chr, json, obj,\n\t}\n\nmodule.exports = this_module()\n\n","this_module = () ->\n\tchurch = (n) -> #the nth church number\n\t\titer = (f, n, r) ->\n\t\t\tif n == 0 then r else iter(f, n - 1, f(r))\n\t\t(f) ->\n\t\t\t(x) -> iter(f, n + 0, x)\n\n\tY = (f) -> #the Y combinator\n\t\t((x) -> (x x)) ((x) -> (f ((y) -> ((x x) y))))\n\n\tmemoize = (f, get_key = ((args...) -> json(args))) ->\n\t\tcache = {}\n\t\t(args...) ->\n\t\t\tkey = get_key(args...)\n\t\t\tcached = cache[key]\n\t\t\tif cached?\n\t\t\t\tcached\n\t\t\telse\n\t\t\t\tr = f(args...)\n\t\t\t\tcache[key] = r\n\t\t\t\tr\n\n\treturn {\n\t\tchurch, Y, memoize,\n\t}\n\nmodule.exports = this_module()\n\n","this_module = ({Symbol}) ->\n\n\t# LazyList definition: nil, lazylist, iterator,\n\n\tlazylist = (f) -> # construct a lazylist from a function.\n\t\tf[Symbol.iterator] = -> f()\n\t\tf.toString = -> \"LazyList\"\n\t\treturn f\n\n\tnil = lazylist -> nil # xs is empty <==> xs is nil or xs() is nil or xs()() is nil... <==> last xs is nil\n\tnil.toString = -> 'nil'\n\n\titerator = (it) -> # construct an iterator(which is a function with status) from a function.\n\t\tit.next = ->\n\t\t\tr = it()\n\t\t\t{value: r, done: r == nil}\n\t\tit.toString = -> \"Iterator\"\n\t\treturn it\n\n\t# lazylist constants: naturals, range, primes,\n\n\tnaturals =\n\t\tlazylist ->\n\t\t\ti = -1\n\t\t\titerator ->\n\t\t\t\t++i\n\n\trange = (args...) ->\n\t\tif args.length == 0\n\t\t\tnaturals\n\t\telse if args.length == 1\n\t\t\tlazylist ->\n\t\t\t\t[stop] = args\n\t\t\t\ti = -1\n\t\t\t\titerator ->\n\t\t\t\t\tif ++i < stop then i else nil\n\t\telse if args.length == 2\n\t\t\tlazylist ->\n\t\t\t\t[start, stop] = args\n\t\t\t\tif start < stop\n\t\t\t\t\ti = start - 1\n\t\t\t\t\titerator ->\n\t\t\t\t\t\tif ++i < stop then i else nil\n\t\t\t\telse\n\t\t\t\t\ti = start + 1\n\t\t\t\t\titerator ->\n\t\t\t\t\t\tif --i > stop then i else nil\n\t\telse\n\t\t\tlazylist ->\n\t\t\t\t[start, stop, step] = args\n\t\t\t\tthrow 'ERR IN range(): YOU ARE CREATING AN UNLIMITTED RANGE' if stop != start and (stop - start) * step < 0\n\t\t\t\ti = start - step\n\t\t\t\tif start < stop\n\t\t\t\t\titerator ->\n\t\t\t\t\t\tif (i += step) < stop then i else nil\n\t\t\t\telse\n\t\t\t\t\titerator ->\n\t\t\t\t\t\tif (i += step) > stop then i else nil\n\n\tprimes = lazylist -> do\n\t\tfilter((x) -> all((p) -> x % p != 0) takeWhile((p) -> p * p <= x) range(2, Infinity)) range(2, Infinity)\n\n\t# lazylist producers: lazy, enumerate, generate, random_gen, ranged_random_gen, permutation_gen,\n\n\tlazy = (arr) -> #make a lazylist from array or function\n\t\tif typeof arr is 'function'\n\t\t\tlazylist arr\n\t\telse if arr[Symbol.iterator]?\n\t\t\tlazylist ->\n\t\t\t\tit = arr[Symbol.iterator]()\n\t\t\t\titerator ->\n\t\t\t\t\tr = it.next()\n\t\t\t\t\tif r.done then nil else r.value\n\t\telse #maybe Array or String\n\t\t\tlazylist ->\n\t\t\t\ti = -1\n\t\t\t\titerator ->\n\t\t\t\t\ti += 1\n\t\t\t\t\tif i < arr.length\n\t\t\t\t\t\tarr[i]\n\t\t\t\t\telse\n\t\t\t\t\t\tnil\n\n\tenumerate = (it) -> # iterator with index(with key for object)\n\t\tif it[Symbol.iterator]? or it instanceof Array\n\t\t\tzip(naturals, it)\n\t\telse\n\t\t\tlazylist ->\n\t\t\t\tkeys = Object.keys(it)\n\t\t\t\ti = -1\n\t\t\t\titerator ->\n\t\t\t\t\tif ++i < keys.length then [(k = keys[i]), it[k]] else nil\n\n\trepeat = (x) -> # repeat x\n\t\tlazylist ->\n\t\t\titerator ->\n\t\t\t\tx\n\n\tgenerate = (init, next) -> #function next should not change it's argument\n\t\tlazylist ->\n\t\t\tstatus = init\n\t\t\titerator ->\n\t\t\t\tlast = status\n\t\t\t\tstatus = next status\n\t\t\t\treturn last\n\n\trandom_gen = do ->\n\t\thash = (x) ->\n\t\t\tx = Math.sin(x) * 1e4\n\t\t\tx - Math.floor(x)\n\t\t(opts) ->\n\t\t\tseed = hash(opts?.seed ? Math.random())\n\t\t\tgenerate seed, hash\n\n\tranged_random_gen = (range, opts) ->\n\t\tseed = opts?.seed ? Math.random()\n\t\tmap((x) -> Math.floor(x * range)) random_gen(seed: seed)\n\n\tpermutation_gen = do ->\n\t\tnext_permutation = (x) ->\n\t\t\tx = x[...]\n\t\t\tl = x.length - 1\n\t\t\t--l while l >= 1 and x[l] <= x[l - 1]\n\n\t\t\tif (l != 0)\n\t\t\t\tm = x.length - 1\n\t\t\t\t--m while m > l - 1 and x[m] <= x[l - 1]\n\t\t\t\t[x[m], x[l - 1]] = [x[l - 1], x[m]]\n\n\t\t\tr = x.length - 1\n\t\t\twhile(l < r)\n\t\t\t\t[x[l], x[r]] = [x[r], x[l]]\n\t\t\t\t++l\n\t\t\t\t--r\n\t\t\treturn x\n\n\t\t(arr) ->\n\t\t\tif arr.length == 0 then nil else\n\t\t\t\tconcat [arr[...]], takeWhile((ls) -> json(ls) != json(arr)) drop(1) generate arr, next_permutation\n\n\t# lazylist decorators: take, takeWhile, drop, dropWhile, cons, map, filter, scanl, streak, reverse,\n\n\ttake = (n) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\tc = -1\n\t\t\t\titerator ->\n\t\t\t\t\tif ++c < n then iter() else nil\n\n\ttakeWhile = (ok) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\titerator ->\n\t\t\t\t\tif (x = iter()) isnt nil and ok(x) then x else nil\n\n\tdrop = (n) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\tfinished = false\n\t\t\t\t(finished or= (iter() is nil); break if finished) for i in [0...n]\n\t\t\t\tif finished then (-> nil) else iter\n\n\tdropWhile = (ok) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\tnull while ok(x = iter()) and x isnt nil\n\t\t\t\titerator ->\n\t\t\t\t\t[prevx, x] = [x, iter()]\n\t\t\t\t\treturn prevx\n\n\tcons = (x) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = null\n\t\t\t\titerator ->\n\t\t\t\t\tif iter is null\n\t\t\t\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\t\t\treturn x\n\t\t\t\t\telse\n\t\t\t\t\t\treturn iter()\n\n\tmap = (f) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\titerator ->\n\t\t\t\t\tif (x = iter()) isnt nil then f(x) else nil\n\n\tfilter = (ok) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\titerator ->\n\t\t\t\t\tnull while not ok(x = iter()) and x isnt nil\n\t\t\t\t\treturn x\n\n\tscanl = (f, r) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\titerator ->\n\t\t\t\t\tgot = r\n\t\t\t\t\tr = if (x = iter()) isnt nil then f(r, x) else nil\n\t\t\t\t\treturn got\n\n\tstreak = (n) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\tbuf = []\n\t\t\t\titerator ->\n\t\t\t\t\treturn nil if (x = iter()) is nil\n\t\t\t\t\tbuf.push(x)\n\t\t\t\t\tbuf.shift(1) if buf.length > n\n\t\t\t\t\treturn buf[...]\n\n\treverse = (xs) ->\n\t\tarr = if typeof xs is 'function' then list xs else copy xs\n\t\treturn lazy arr.reverse()\n\n\t# lazylist combiners: concat, zip, zipWith, cartProd,\n\n\tconcat = (xss...) ->\n\t\tlazylist ->\n\t\t\titer = (if xss[0][Symbol.iterator]? then xss[0] else lazy(xss[0]))[Symbol.iterator]()\n\t\t\tcurrent_index = 0\n\t\t\titerator ->\n\t\t\t\tif (x = iter()) isnt nil\n\t\t\t\t\treturn x\n\t\t\t\telse if (++current_index < xss.length)\n\t\t\t\t\titer = (if xss[current_index][Symbol.iterator]? then xss[current_index] else lazy(xss[current_index]))[Symbol.iterator]()\n\t\t\t\t\treturn iter()\n\t\t\t\telse\n\t\t\t\t\treturn nil\n\n\t{zip, zipWith} = do ->\n\t\tfinished = (arr) ->\n\t\t\tfor x in arr\n\t\t\t\treturn true if x is nil\n\t\t\treturn false\n\n\t\tzip = (xss...) ->\n\t\t\tlazylist ->\n\t\t\t\titers = ((if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]() for xs in xss)\n\t\t\t\titerator ->\n\t\t\t\t\tnext = (iter() for iter in iters)\n\t\t\t\t\tif finished(next)\n\t\t\t\t\t\treturn nil\n\t\t\t\t\telse\n\t\t\t\t\t\treturn next\n\n\t\tzipWith = (f) -> (xss...) ->\n\t\t\tlazylist ->\n\t\t\t\titers = ((if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]() for xs in xss)\n\t\t\t\titerator ->\n\t\t\t\t\tnext = (iter() for iter in iters)\n\t\t\t\t\tif finished(next)\n\t\t\t\t\t\treturn nil\n\t\t\t\t\telse\n\t\t\t\t\t\treturn f(next...)\n\n\t\treturn {zip, zipWith}\n\n\tcartProd = do -> # cartesian product\n\t\tinc_vector = (limits) ->\n\t\t\tlen_minus_1 = limits.length - 1\n\t\t\t(vec) ->\n\t\t\t\ti = len_minus_1\n\t\t\t\tvec[i--] = 0 until ++vec[i] < limits[i] or i <= 0\n\t\t\t\treturn vec\n\n\t\tapply_vector = (space) ->\n\t\t\tlen = space.length\n\t\t\t(vec) ->\n\t\t\t\t(space[i][vec[i]] for i in [0...len])\n\n\t\t(xss...) ->\n\t\t\tlazylist ->\n\t\t\t\txss = (list(xs) for xs in xss)\n\t\t\t\tlimits = (xss[i].length for i in [0...xss.length])\n\t\t\t\t(return nil if len is 0) for len in limits\n\t\t\t\tinc = inc_vector(limits)\n\t\t\t\tget_value = apply_vector(xss)\n\t\t\t\tv = (0 for i in [0...xss.length])\n\t\t\t\titerator ->\n\t\t\t\t\tif v[0] < limits[0] then (r = get_value v; inc v; r) else nil\n\n\t# lazylist consumers: list, last, length, foldl, best, all, any, foreach,\n\n\tlist = (xs) -> #force list elements of the lazylist to get an array\n\t\tif typeof xs is 'number'\n\t\t\tn = xs\n\t\t\t(xs) -> list take(n) xs\n\t\telse if typeof xs is 'function'\n\t\t\tit = xs[Symbol.iterator]()\n\t\t\t(x while (x = it()) isnt nil)\n\t\telse if xs[Symbol.iterator]?\n\t\t\tit = lazy(xs)[Symbol.iterator]()\n\t\t\t(x while (x = it()) isnt nil)\n\t\telse if xs instanceof Array\n\t\t\txs\n\t\telse\n\t\t\tthrow Error 'list(xs): xs is neither LazyList nor Array'\n\n\tlast = (xs) -> #returns nil if xs is empty\n\t\tif not xs[Symbol.iterator]? then xs[xs.length - 1] ? nil else\n\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\tr = nil\n\t\t\tr = x while (x = iter()) isnt nil\n\t\t\treturn r\n\n\tlength = (xs) ->\n\t\tif not xs[Symbol.iterator]? then xs.length else\n\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\tr = 0\n\t\t\t++r while (x = iter()) isnt nil\n\t\t\treturn r\n\n\tfoldl = (f, init) ->\n\t\t(xs) ->\n\t\t\tr = init\n\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\tr = f(r, x) while (x = iter()) isnt nil\n\t\t\treturn r\n\n\tbest = (better) ->\n\t\t(xs) ->\n\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\treturn null if (r = iter()) is nil\n\t\t\twhile (it = iter()) isnt nil\n\t\t\t\tr = if better(it, r) then it else r\n\t\t\treturn r\n\n\tall = (f) ->\n\t\tf = ((x) -> x is f) if typeof(f) isnt 'function'\n\t\t(xs) ->\n\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\twhile (x = iter()) isnt nil\n\t\t\t\treturn false if not f(x)\n\t\t\treturn true\n\n\tany = (f) ->\n\t\tall_not = all (x) -> not f(x)\n\t\t(xs) -> not (all_not xs)\n\n\tbrk = -> brk\n\tbrk.toString = -> 'foreach.break'\n\n\tforeach = (xs, callback, fruit) ->\n\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\twhile (x = iter()) isnt nil\n\t\t\tbreak if callback(x, fruit) is brk\n\t\tfruit\n\n\tObject.defineProperties foreach,\n\t\tbreak:\n\t\t\twritable: false\n\t\t\tconfigurable: false\n\t\t\tenumerable: false\n\t\t\tvalue: brk\n\n\treturn {\n\t\t# lazylist definition\n\t\tnil, lazylist, iterator, Symbol,\n\n\t\t# lazylist constants\n\t\tnaturals, range, primes,\n\n\t\t# lazylist producers\n\t\tlazy, enumerate, repeat, generate, random_gen, ranged_random_gen, permutation_gen,\n\n\t\t# lazylist decorators\n\t\tcons, map, filter, take, takeWhile, drop, dropWhile, scanl, streak, reverse,\n\n\t\t# lazylist combiners\n\t\tconcat, zip, zipWith, cartProd,\n\n\t\t# lazylist consumers\n\t\tlist, last, length, foldl, best, all, any, foreach,\n\t}\n\nmodule.exports = this_module\n\tSymbol: Symbol ? {iterator: 'iter'}\n","this_module = () ->\n\turi_encoder = (component_packer = str) ->\n\t\t(obj) ->\n\t\t\t(\"#{encodeURIComponent(k)}=#{encodeURIComponent component_packer v}\" for k, v of obj).join('&')\n\n\turi_decoder = (component_unpacker = ((s) -> s)) ->\n\t\t(str) ->\n\t\t\td = {}\n\t\t\tfor s in (str.match /[^?=&]+=[^&]*/g) ? []\n\t\t\t\t[..., k, v] = s.match /([^=]+)=(.*)/\n\t\t\t\td[decodeURIComponent(k)] = (component_unpacker decodeURIComponent v)\n\t\t\treturn d\n\n\treturn {\n\t\turi_encoder, uri_decoder,\n\t}\n\nmodule.exports = this_module()\n\n","this_module = () ->\n\tfunction_literal = (f) ->\n\t\texpr = f.toString().replace(/^\\s*function\\s?\\(\\s?\\)\\s?{\\s*return\\s*([^]*?);?\\s*}$/, '$1')\n\t\texpr = expr.replace(/[\\r\\n]{1,2}\\s*/g, '') if expr.length <= 100\n\t\treturn expr\n\n\ttime_now = ->\n\t\t(new Date).getTime()\n\n\tlog = do -> #log an expression with it's literal and time used\n\t\tdye = do ->\n\t\t\t# ANSI Terminal Colors.\n\t\t\tcavailable = (not window?) and process? and not process.env.NODE_DISABLE_COLORS\n\t\t\tpalette =\n\t\t\t\tbold: '\\x1B[0;1m'\n\t\t\t\tred: '\\x1B[0;31m'\n\t\t\t\tgreen: '\\x1B[0;32m'\n\t\t\t\tyellow: '\\x1B[0;33m'\n\t\t\t\tblue: '\\x1B[0;34m'\n\t\t\t\tbold_grey: '\\x1B[1;30m'\n\t\t\tif not cavailable\n\t\t\t\t(color) -> (s) -> s\n\t\t\telse\n\t\t\t\t(color) ->\n\t\t\t\t\t(s) -> \"#{palette[color]}#{s}#{'\\x1B[0m'}\"\n\n\t\tlog_label = do ->\n\t\t\tflag_palette =\n\t\t\t\t'#': 'bold_grey'\n\t\t\t\t'I': 'green'\n\t\t\t\t'E': 'red'\n\t\t\t\t'W': 'yellow'\n\t\t\top_flag = (op) ->\n\t\t\t\tif op == 'log' then '#' else op[0].toUpperCase()\n\t\t\t(op) ->\n\t\t\t\tflag = op_flag(op)\n\t\t\t\tdye(flag_palette[flag]) flag\n\n\t\thistories = []\n\t\tfactory = (op) ->\n\t\t\tprefix = \"#{dye('bold_grey') '#'}#{log_label op}\"\n\t\t\t(args...) ->\n\t\t\t\tball = []\n\t\t\t\tfor f in args\n\t\t\t\t\tif typeof f == 'function'\n\t\t\t\t\t\texpr = function_literal(f)\n\t\t\t\t\t\tstart_time = time_now()\n\t\t\t\t\t\teval_result = f()\n\t\t\t\t\t\ttime_used = time_now() - start_time\n\t\t\t\t\t\tball.push(\"#{prefix} #{dye('green') expr} #{dye('bold_grey') '==>'}\", eval_result)\n\t\t\t\t\t\tball.push(dye('yellow') \"[#{time_used}ms]\") if time_used > 0\n\t\t\t\t\telse\n\t\t\t\t\t\tball.push(\"#{prefix}\", f)\n\t\t\t\tconsole[op] ball...\n\t\t\t\thistories.push(ball)\n\t\t\t\thistories.shift() if histories.length >= 10\n\t\t\t\treturn null\n\t\tgot = factory('log')\n\t\tgot.histories = histories\n\t\tgot.info = factory('info')\n\t\tgot.warn = factory('warn')\n\t\tgot.error = got.err = factory('error')\n\t\treturn got\n\n\tassert = (f, msg) ->\n\t\t[f, msg] = [msg, f] if f not instanceof Function\n\t\ttry\n\t\t\tthrow Error \"Assertion #{msg ? function_literal(f)} Failed!\" if not f()\n\t\tcatch e\n\t\t\tthrow Error \"Assertion #{msg ? function_literal(f)} Unknown:\\n#{e}\"\n\n\tassertEq = (l, r) ->\n\t\ttry\n\t\t\tlv = l()\n\t\t\trv = r()\n\t\tcatch e\n\t\t\tthrow Error \"Equation Between #{function_literal(l)} And #{function_literal(r)} Unknown:\\n#{e}\"\n\t\tif lv isnt rv\n\t\t\tthrow Error \"Equation Failed:\\n\\t#{function_literal(l)} IS #{lv} BUT\\n\\t#{function_literal(r)} IS #{rv}.\"\n\n\tassertEqOn = (f) -> (l, r) ->\n\t\ttry\n\t\t\tlv = l()\n\t\t\trv = r()\n\t\t\tflv = f(lv)\n\t\t\tfrv = f(rv)\n\t\tcatch e\n\t\t\tthrow Error \"MAPPED Equation Between #{function_literal(l)} And #{function_literal(r)} Unknown:\\n#{e}\"\n\t\tif flv isnt frv\n\t\t\tthrow Error \"Equation Failed:\\n\\t#{function_literal(l)} IS #{lv} AND MAPPED TO #{flv} BUT\\n\\t#{function_literal(r)} IS #{rv} AND MAPPED TO #{frv}.\"\n\n\tsecurely = (f) -> # ensure a function not to modify it's arguments\n\t\t(args...) ->\n\t\t\targs = deepcopy args\n\t\t\tf(args...)\n\n\tdict = (pairs) -> #for dict comprehensions\n\t\td = {}\n\t\td[k] = v for [k, v] in pairs\n\t\treturn d\n\n\t{copy, deepcopy} = do ->\n\t\tcp = (root, dep) ->\n\t\t\treturn root if dep == 0 or not root? or typeof(root) != 'object'\n\t\t\tif root instanceof Array\n\t\t\t\tr = (cp(v, dep-1) for v in root)\n\t\t\telse\n\t\t\t\tr = {}\n\t\t\t\tr[k] = cp(v, dep-1) for k, v of root\n\t\t\treturn r\n\t\tcopy: (obj, depth=1) -> cp(obj, depth)\n\t\tdeepcopy: (obj, depth=Infinity) -> cp(obj, depth)\n\n\textend = (base) -> (defaults...) -> #NOTE: modified inplace, use copy() to protect it.\n\t\tfor d in defaults when d?\n\t\t\tbase[k] ?= v for k, v of d #NOTE: null values will be replaced if a default value exists.\n\t\treturn base\n\n\tupdate = (base) -> (updates...) -> #NOTE: modified inplace, use copy() to protect it.\n\t\tfor d in updates when d?\n\t\t\tbase[k] = v for k, v of d\n\t\treturn base\n\n\treturn {\n\t\tlog, assert, assertEq, assertEqOn, dict, copy, deepcopy, securely, extend, update,\n\t}\n\nmodule.exports = this_module()\n\n"],"sourceRoot":"/source/"}