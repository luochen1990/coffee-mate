{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","node_modules/browserify/node_modules/process/browser.js","coffee-mate.coffee.js","basics.coffee","coffee-mate.coffee","convertors.coffee","funny.coffee","lazy.coffee","url-helpers.coffee","utils.coffee"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","drainQueue","draining","currentQueue","len","queue","noop","process","nextTick","fun","push","setTimeout","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","cwd","chdir","umask",2,"this_module","slice","arg","abs","accept_multi_or_array","best","ceil","combine","curry2","curry3","equal","flip","floor","greaterEqual","greaterThan","lessEqual","lessThan","max","max_index","min","min_index","minus","notEqual","pack","pluck","plus","seek","sum","uncurry2","uncurry3","unpack","x","y","g","b","c","arr","apply","arguments","attr","d","it","Math","first","Array","k","results","j","ref","this","./lazy",3,"basics","convertors","funny","lazy","url_helpers","utils","extend","./basics","./convertors","./funny","./url-helpers","./utils",4,"bool","chr","float","hex","int","json","obj","ord","str","base","parseInt","test","parseFloat","toString","charCodeAt","String","fromCharCode","indent","JSON","stringify","parse",5,"Y","church","memoize","iter","get_key","cache","args","cached","key",6,"Symbol","all","any","brk","cartProd","concat","cons","drop","dropWhile","enumerate","filter","foldl","foreach","generate","iterator","last","lazylist","list","map","naturals","nil","permutation_gen","primes","random_gen","range","ranged_random_gen","repeat","reverse","scanl","streak","take","takeWhile","zip","zipWith","next","value","done","stop","start","step","p","Infinity","keys","Object","init","status","hash","sin","opts","seed","random","next_permutation","m","ref1","ls","xs","ok","finished","prevx","got","buf","shift","copy","xss","current_index","len1","iters","apply_vector","inc_vector","limits","len_minus_1","vec","space","get_value","inc","v","results1","better","all_not","callback","fruit","defineProperties","break","writable","configurable","enumerable",7,"uri_decoder","uri_encoder","component_packer","encodeURIComponent","join","component_unpacker","ref2","match","decodeURIComponent",8,"assert","assertEq","assertEqOn","deepcopy","dict","function_literal","log","securely","time_now","update","expr","replace","Date","getTime","dye","factory","histories","log_label","cavailable","palette","window","NODE_DISABLE_COLORS","bold","red","green","yellow","blue","bold_grey","color","flag_palette","op_flag","#","I","E","W","op","toUpperCase","flag","prefix","ball","eval_result","start_time","time_used","console","info","warn","error","err","msg","Function","_error","lv","rv","flv","frv","pairs","cp","root","dep","depth","defaults","updates","_process"],"mappings":"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","file":"coffee-mate.coffee.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    draining = true;\n    var currentQueue;\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        var i = -1;\n        while (++i < len) {\n            currentQueue[i]();\n        }\n        len = queue.length;\n    }\n    draining = false;\n}\nprocess.nextTick = function (fun) {\n    queue.push(fun);\n    if (!draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n",null,"this_module = ({best}) ->\n\t# transformers\n\tflip = (f) ->\n\t\t(x) -> (y) -> f(y)(x)\n\n\tcombine = (f) -> (g) ->\n\t\t(x) -> f g(x)\n\n\tcurry2 = (f) ->\n\t\t(a) -> (b) -> f(a, b)\n\n\tcurry3 = (f) ->\n\t\t(a) -> (b) -> (c) -> f(a, b, c)\n\n\tuncurry2 = (f) ->\n\t\t(a, b) -> f(a)(b)\n\n\tuncurry3 = (f) ->\n\t\t(a, b, c) -> f(a)(b)(c)\n\n\tpack = (f) ->\n\t\t(arr) -> f(arr...)\n\n\tunpack = (f) ->\n\t\t(arr...) -> f(arr)\n\n\t# seek & pluck in Array or Object\n\tseek = (arr) ->\n\t\t(i) -> arr[i]\n\n\tpluck = (attr) ->\n\t\t(d) -> d[attr]\n\n\t# compare\n\tequal = (it) ->\n\t\t(x) -> x == it\n\n\tnotEqual = (it) ->\n\t\t(x) -> x != it\n\n\tlessThan = (it) ->\n\t\t(x) -> x < it\n\n\tgreaterThan = (it) ->\n\t\t(x) -> x > it\n\n\tlessEqual = (it) ->\n\t\t(x) -> x <= it\n\n\tgreaterEqual = (it) ->\n\t\t(x) -> x >= it\n\n\t# math\n\tplus = (it) ->\n\t\t(x) -> x + it\n\n\tminus = (it) ->\n\t\t(x) -> x - it\n\n\tabs = Math.abs\n\tfloor = Math.floor\n\tceil = Math.ceil\n\n\taccept_multi_or_array = (f) ->\n\t\t(arr...) ->\n\t\t\tf(if arr.length == 1 and arr.first instanceof Array then arr.first else arr)\n\n\tsum = accept_multi_or_array (arr) ->\n\t\tarr = arr.first if arr.length == 1 and arr.first instanceof Array\n\t\tr = 0\n\t\tr += x for x in arr\n\t\tr\n\n\tmax = accept_multi_or_array (arr) ->\n\t\tbest((a, b) -> a > b) arr\n\n\tmin = accept_multi_or_array (arr) ->\n\t\tbest((a, b) -> a < b) arr\n\n\tmax_index = accept_multi_or_array (arr) ->\n\t\tbest((i, j) -> arr[i] > arr[j]) [0...arr.length]\n\n\tmin_index = accept_multi_or_array (arr) ->\n\t\tbest((i, j) -> arr[i] < arr[j]) [0...arr.length]\n\n\treturn {\n\t\tflip, combine,\n\t\tcurry2, curry3, uncurry2, uncurry3, pack, unpack,\n\t\tseek, pluck,\n\t\tequal, notEqual, lessThan, lessEqual, greaterThan, greaterEqual,\n\t\tplus, minus, abs, floor, ceil,\n\t\tsum, max, min, max_index, min_index,\n\t}\n\nmodule.exports = this_module\n\tbest: require('./lazy').best\n\n","utils = require './utils'\nbasics = require './basics'\nlazy = require './lazy'\nfunny = require './funny'\nconvertors = require './convertors'\nurl_helpers = require './url-helpers'\n\nmodule.exports = utils.extend({}) utils, basics, lazy, funny, convertors, url_helpers\n\n","this_module = () ->\n\tint = (s, base) -> if typeof(s) == 'string' then (r = parseInt(s, base); unless s.slice? and r == parseInt(s.slice(0,-1), base) then r else null) else parseInt(0 + s)\n\tfloat = (s) -> if /^-?[0-9]*(\\.[0-9]+)?([eE]-?[0-9]+)?$/.test(s) then parseFloat(s) else null\n\tstr = (x, base) -> x.toString(base)\n\tbool = (x) -> if x in [true, false] then x else null\n\thex = (x) -> x.toString(16)\n\tord = (c) -> c.charCodeAt()\n\tchr = (x) -> String.fromCharCode(x)\n\tjson = (it, indent) -> JSON.stringify(it, null, indent)\n\tobj = (s) -> JSON.parse(s)\n\n\treturn {\n\t\tint, float, bool, str, hex, ord, chr, json, obj,\n\t}\n\nmodule.exports = this_module()\n\n","this_module = () ->\n\tchurch = (n) -> #the nth church number\n\t\titer = (f, n, r) ->\n\t\t\tif n == 0 then r else iter(f, n - 1, f(r))\n\t\t(f) ->\n\t\t\t(x) -> iter(f, n + 0, x)\n\n\tY = (f) -> #the Y combinator\n\t\t((x) -> (x x)) ((x) -> (f ((y) -> ((x x) y))))\n\n\tmemoize = (f, get_key = ((args...) -> json(args))) ->\n\t\tcache = {}\n\t\t(args...) ->\n\t\t\tkey = get_key(args...)\n\t\t\tcached = cache[key]\n\t\t\tif cached?\n\t\t\t\tcached\n\t\t\telse\n\t\t\t\tr = f(args...)\n\t\t\t\tcache[key] = r\n\t\t\t\tr\n\n\treturn {\n\t\tchurch, Y, memoize,\n\t}\n\nmodule.exports = this_module()\n\n","this_module = ({Symbol}) ->\n\n\t# LazyList definition: nil, lazylist, iterator,\n\n\tlazylist = (f) -> # construct a lazylist from a function.\n\t\tf[Symbol.iterator] = -> f()\n\t\tf.toString = -> \"LazyList\"\n\t\treturn f\n\n\tnil = lazylist -> nil # xs is empty <==> xs is nil or xs() is nil or xs()() is nil... <==> last xs is nil\n\tnil.toString = -> 'nil'\n\n\titerator = (it) -> # construct an iterator(which is a function with status) from a function.\n\t\tit.next = ->\n\t\t\tr = it()\n\t\t\t{value: r, done: r == nil}\n\t\tit.toString = -> \"Iterator\"\n\t\treturn it\n\n\t# lazylist constants: naturals, range, primes,\n\n\tnaturals =\n\t\tlazylist ->\n\t\t\ti = -1\n\t\t\titerator ->\n\t\t\t\t++i\n\n\trange = (args...) ->\n\t\tif args.length == 0\n\t\t\tnaturals\n\t\telse if args.length == 1\n\t\t\tlazylist ->\n\t\t\t\t[stop] = args\n\t\t\t\ti = -1\n\t\t\t\titerator ->\n\t\t\t\t\tif ++i < stop then i else nil\n\t\telse if args.length == 2\n\t\t\tlazylist ->\n\t\t\t\t[start, stop] = args\n\t\t\t\tif start < stop\n\t\t\t\t\ti = start - 1\n\t\t\t\t\titerator ->\n\t\t\t\t\t\tif ++i < stop then i else nil\n\t\t\t\telse\n\t\t\t\t\ti = start + 1\n\t\t\t\t\titerator ->\n\t\t\t\t\t\tif --i > stop then i else nil\n\t\telse\n\t\t\tlazylist ->\n\t\t\t\t[start, stop, step] = args\n\t\t\t\tthrow 'ERR IN range(): YOU ARE CREATING AN UNLIMITTED RANGE' if stop != start and (stop - start) * step < 0\n\t\t\t\ti = start - step\n\t\t\t\tif start < stop\n\t\t\t\t\titerator ->\n\t\t\t\t\t\tif (i += step) < stop then i else nil\n\t\t\t\telse\n\t\t\t\t\titerator ->\n\t\t\t\t\t\tif (i += step) > stop then i else nil\n\n\tprimes = lazylist -> do\n\t\tfilter((x) -> all((p) -> x % p != 0) takeWhile((p) -> p * p <= x) range(2, Infinity)) range(2, Infinity)\n\n\t# lazylist producers: lazy, enumerate, generate, random_gen, ranged_random_gen, permutation_gen,\n\n\tlazy = (arr) -> #make a lazylist from array or function\n\t\tif typeof arr is 'function'\n\t\t\tlazylist arr\n\t\telse if arr[Symbol.iterator]?\n\t\t\tlazylist ->\n\t\t\t\tit = arr[Symbol.iterator]()\n\t\t\t\titerator ->\n\t\t\t\t\tr = it.next()\n\t\t\t\t\tif r.done then nil else r.value\n\t\telse #maybe Array or String\n\t\t\tlazylist ->\n\t\t\t\ti = -1\n\t\t\t\titerator ->\n\t\t\t\t\ti += 1\n\t\t\t\t\tif i < arr.length\n\t\t\t\t\t\tarr[i]\n\t\t\t\t\telse\n\t\t\t\t\t\tnil\n\n\tenumerate = (it) -> # iterator with index(with key for object)\n\t\tif it[Symbol.iterator]? or it instanceof Array\n\t\t\tzip(naturals, it)\n\t\telse\n\t\t\tlazylist ->\n\t\t\t\tkeys = Object.keys(it)\n\t\t\t\ti = -1\n\t\t\t\titerator ->\n\t\t\t\t\tif ++i < keys.length then [(k = keys[i]), it[k]] else nil\n\n\trepeat = (x) -> # repeat x\n\t\tlazylist ->\n\t\t\titerator ->\n\t\t\t\tx\n\n\tgenerate = (init, next) -> #function next should not change it's argument\n\t\tlazylist ->\n\t\t\tstatus = init\n\t\t\titerator ->\n\t\t\t\tlast = status\n\t\t\t\tstatus = next status\n\t\t\t\treturn last\n\n\trandom_gen = do ->\n\t\thash = (x) ->\n\t\t\tx = Math.sin(x) * 1e4\n\t\t\tx - Math.floor(x)\n\t\t(opts) ->\n\t\t\tseed = hash(opts?.seed ? Math.random())\n\t\t\tgenerate seed, hash\n\n\tranged_random_gen = (range, opts) ->\n\t\tseed = opts?.seed ? Math.random()\n\t\tmap((x) -> Math.floor(x * range)) random_gen(seed: seed)\n\n\tpermutation_gen = do ->\n\t\tnext_permutation = (x) ->\n\t\t\tx = x[...]\n\t\t\tl = x.length - 1\n\t\t\t--l while l >= 1 and x[l] <= x[l - 1]\n\n\t\t\tif (l != 0)\n\t\t\t\tm = x.length - 1\n\t\t\t\t--m while m > l - 1 and x[m] <= x[l - 1]\n\t\t\t\t[x[m], x[l - 1]] = [x[l - 1], x[m]]\n\n\t\t\tr = x.length - 1\n\t\t\twhile(l < r)\n\t\t\t\t[x[l], x[r]] = [x[r], x[l]]\n\t\t\t\t++l\n\t\t\t\t--r\n\t\t\treturn x\n\n\t\t(arr) ->\n\t\t\tif arr.length == 0 then nil else\n\t\t\t\tconcat [arr[...]], takeWhile((ls) -> json(ls) != json(arr)) drop(1) generate arr, next_permutation\n\n\t# lazylist decorators: take, takeWhile, drop, dropWhile, cons, map, filter, scanl, streak, reverse,\n\n\ttake = (n) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\tc = -1\n\t\t\t\titerator ->\n\t\t\t\t\tif ++c < n then iter() else nil\n\n\ttakeWhile = (ok) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\titerator ->\n\t\t\t\t\tif (x = iter()) isnt nil and ok(x) then x else nil\n\n\tdrop = (n) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\tfinished = false\n\t\t\t\t(finished or= (iter() is nil); break if finished) for i in [0...n]\n\t\t\t\tif finished then (-> nil) else iter\n\n\tdropWhile = (ok) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\tnull while ok(x = iter()) and x isnt nil\n\t\t\t\titerator ->\n\t\t\t\t\t[prevx, x] = [x, iter()]\n\t\t\t\t\treturn prevx\n\n\tcons = (x) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = null\n\t\t\t\titerator ->\n\t\t\t\t\tif iter is null\n\t\t\t\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\t\t\treturn x\n\t\t\t\t\telse\n\t\t\t\t\t\treturn iter()\n\n\tmap = (f) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\titerator ->\n\t\t\t\t\tif (x = iter()) isnt nil then f(x) else nil\n\n\tfilter = (ok) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\titerator ->\n\t\t\t\t\tnull while not ok(x = iter()) and x isnt nil\n\t\t\t\t\treturn x\n\n\tscanl = (f, r) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\titerator ->\n\t\t\t\t\tgot = r\n\t\t\t\t\tr = if (x = iter()) isnt nil then f(r, x) else nil\n\t\t\t\t\treturn got\n\n\tstreak = (n) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\tbuf = []\n\t\t\t\titerator ->\n\t\t\t\t\treturn nil if (x = iter()) is nil\n\t\t\t\t\tbuf.push(x)\n\t\t\t\t\tbuf.shift(1) if buf.length > n\n\t\t\t\t\treturn buf[...]\n\n\treverse = (xs) ->\n\t\tarr = if typeof xs is 'function' then list xs else copy xs\n\t\treturn lazy arr.reverse()\n\n\t# lazylist combiners: concat, zip, zipWith, cartProd,\n\n\tconcat = (xss...) ->\n\t\tlazylist ->\n\t\t\titer = (if xss[0][Symbol.iterator]? then xss[0] else lazy(xss[0]))[Symbol.iterator]()\n\t\t\tcurrent_index = 0\n\t\t\titerator ->\n\t\t\t\tif (x = iter()) isnt nil\n\t\t\t\t\treturn x\n\t\t\t\telse if (++current_index < xss.length)\n\t\t\t\t\titer = (if xss[current_index][Symbol.iterator]? then xss[current_index] else lazy(xss[current_index]))[Symbol.iterator]()\n\t\t\t\t\treturn iter()\n\t\t\t\telse\n\t\t\t\t\treturn nil\n\n\t{zip, zipWith} = do ->\n\t\tfinished = (arr) ->\n\t\t\tfor x in arr\n\t\t\t\treturn true if x is nil\n\t\t\treturn false\n\n\t\tzip = (xss...) ->\n\t\t\tlazylist ->\n\t\t\t\titers = ((if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]() for xs in xss)\n\t\t\t\titerator ->\n\t\t\t\t\tnext = (iter() for iter in iters)\n\t\t\t\t\tif finished(next)\n\t\t\t\t\t\treturn nil\n\t\t\t\t\telse\n\t\t\t\t\t\treturn next\n\n\t\tzipWith = (f) -> (xss...) ->\n\t\t\tlazylist ->\n\t\t\t\titers = ((if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]() for xs in xss)\n\t\t\t\titerator ->\n\t\t\t\t\tnext = (iter() for iter in iters)\n\t\t\t\t\tif finished(next)\n\t\t\t\t\t\treturn nil\n\t\t\t\t\telse\n\t\t\t\t\t\treturn f(next...)\n\n\t\treturn {zip, zipWith}\n\n\tcartProd = do -> # cartesian product\n\t\tinc_vector = (limits) ->\n\t\t\tlen_minus_1 = limits.length - 1\n\t\t\t(vec) ->\n\t\t\t\ti = len_minus_1\n\t\t\t\tvec[i--] = 0 until ++vec[i] < limits[i] or i <= 0\n\t\t\t\treturn vec\n\n\t\tapply_vector = (space) ->\n\t\t\tlen = space.length\n\t\t\t(vec) ->\n\t\t\t\t(space[i][vec[i]] for i in [0...len])\n\n\t\t(xss...) ->\n\t\t\tlazylist ->\n\t\t\t\txss = (list(xs) for xs in xss)\n\t\t\t\tlimits = (xss[i].length for i in [0...xss.length])\n\t\t\t\t(return nil if len is 0) for len in limits\n\t\t\t\tinc = inc_vector(limits)\n\t\t\t\tget_value = apply_vector(xss)\n\t\t\t\tv = (0 for i in [0...xss.length])\n\t\t\t\titerator ->\n\t\t\t\t\tif v[0] < limits[0] then (r = get_value v; inc v; r) else nil\n\n\t# lazylist consumers: list, last, length, foldl, best, all, any, foreach,\n\n\tlist = (xs) -> #force list elements of the lazylist to get an array\n\t\tif typeof xs is 'number'\n\t\t\tn = xs\n\t\t\t(xs) -> list take(n) xs\n\t\telse if typeof xs is 'function'\n\t\t\tit = xs[Symbol.iterator]()\n\t\t\t(x while (x = it()) isnt nil)\n\t\telse if xs[Symbol.iterator]?\n\t\t\tit = lazy(xs)[Symbol.iterator]()\n\t\t\t(x while (x = it()) isnt nil)\n\t\telse if xs instanceof Array\n\t\t\txs\n\t\telse\n\t\t\tthrow Error 'list(xs): xs is neither LazyList nor Array'\n\n\tlast = (xs) -> #returns nil if xs is empty\n\t\tif not xs[Symbol.iterator]? then xs[xs.length - 1] ? nil else\n\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\tr = nil\n\t\t\tr = x while (x = iter()) isnt nil\n\t\t\treturn r\n\n\tlength = (xs) ->\n\t\tif not xs[Symbol.iterator]? then xs.length else\n\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\tr = 0\n\t\t\t++r while (x = iter()) isnt nil\n\t\t\treturn r\n\n\tfoldl = (f, init) ->\n\t\t(xs) ->\n\t\t\tr = init\n\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\tr = f(r, x) while (x = iter()) isnt nil\n\t\t\treturn r\n\n\tbest = (better) ->\n\t\t(xs) ->\n\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\treturn null if (r = iter()) is nil\n\t\t\twhile (it = iter()) isnt nil\n\t\t\t\tr = if better(it, r) then it else r\n\t\t\treturn r\n\n\tall = (f) ->\n\t\tf = ((x) -> x is f) if typeof(f) isnt 'function'\n\t\t(xs) ->\n\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\twhile (x = iter()) isnt nil\n\t\t\t\treturn false if not f(x)\n\t\t\treturn true\n\n\tany = (f) ->\n\t\tall_not = all (x) -> not f(x)\n\t\t(xs) -> not (all_not xs)\n\n\tbrk = -> brk\n\tbrk.toString = -> 'foreach.break'\n\n\tforeach = (xs, callback, fruit) ->\n\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\twhile (x = iter()) isnt nil\n\t\t\tbreak if callback(x, fruit) is brk\n\t\tfruit\n\n\tObject.defineProperties foreach,\n\t\tbreak:\n\t\t\twritable: false\n\t\t\tconfigurable: false\n\t\t\tenumerable: false\n\t\t\tvalue: brk\n\n\treturn {\n\t\t# lazylist definition\n\t\tnil, lazylist, iterator, Symbol,\n\n\t\t# lazylist constants\n\t\tnaturals, range, primes,\n\n\t\t# lazylist producers\n\t\tlazy, enumerate, repeat, generate, random_gen, ranged_random_gen, permutation_gen,\n\n\t\t# lazylist decorators\n\t\tcons, map, filter, take, takeWhile, drop, dropWhile, scanl, streak, reverse,\n\n\t\t# lazylist combiners\n\t\tconcat, zip, zipWith, cartProd,\n\n\t\t# lazylist consumers\n\t\tlist, last, length, foldl, best, all, any, foreach,\n\t}\n\nmodule.exports = this_module\n\tSymbol: Symbol ? {iterator: 'iter'}\n","this_module = () ->\n\turi_encoder = (component_packer = str) ->\n\t\t(obj) ->\n\t\t\t(\"#{encodeURIComponent(k)}=#{encodeURIComponent component_packer v}\" for k, v of obj).join('&')\n\n\turi_decoder = (component_unpacker = ((s) -> s)) ->\n\t\t(str) ->\n\t\t\td = {}\n\t\t\tfor s in (str.match /[^?=&]+=[^&]*/g) ? []\n\t\t\t\t[..., k, v] = s.match /([^=]+)=(.*)/\n\t\t\t\td[decodeURIComponent(k)] = (component_unpacker decodeURIComponent v)\n\t\t\treturn d\n\n\treturn {\n\t\turi_encoder, uri_decoder,\n\t}\n\nmodule.exports = this_module()\n\n","this_module = () ->\n\tfunction_literal = (f) ->\n\t\texpr = f.toString().replace(/^\\s*function\\s?\\(\\s?\\)\\s?{\\s*return\\s*([^]*?);?\\s*}$/, '$1')\n\t\texpr = expr.replace(/[\\r\\n]{1,2}\\s*/g, '') if expr.length <= 100\n\t\treturn expr\n\n\ttime_now = ->\n\t\t(new Date).getTime()\n\n\tlog = do -> #log an expression with it's literal and time used\n\t\tdye = do ->\n\t\t\t# ANSI Terminal Colors.\n\t\t\tcavailable = (not window?) and process? and not process.env.NODE_DISABLE_COLORS\n\t\t\tpalette =\n\t\t\t\tbold: '\\x1B[0;1m'\n\t\t\t\tred: '\\x1B[0;31m'\n\t\t\t\tgreen: '\\x1B[0;32m'\n\t\t\t\tyellow: '\\x1B[0;33m'\n\t\t\t\tblue: '\\x1B[0;34m'\n\t\t\t\tbold_grey: '\\x1B[1;30m'\n\t\t\tif not cavailable\n\t\t\t\t(color) -> (s) -> s\n\t\t\telse\n\t\t\t\t(color) ->\n\t\t\t\t\t(s) -> \"#{palette[color]}#{s}#{'\\x1B[0m'}\"\n\n\t\tlog_label = do ->\n\t\t\tflag_palette =\n\t\t\t\t'#': 'bold_grey'\n\t\t\t\t'I': 'green'\n\t\t\t\t'E': 'red'\n\t\t\t\t'W': 'yellow'\n\t\t\top_flag = (op) ->\n\t\t\t\tif op == 'log' then '#' else op[0].toUpperCase()\n\t\t\t(op) ->\n\t\t\t\tflag = op_flag(op)\n\t\t\t\tdye(flag_palette[flag]) flag\n\n\t\thistories = []\n\t\tfactory = (op) ->\n\t\t\tprefix = \"#{dye('bold_grey') '#'}#{log_label op}\"\n\t\t\t(args...) ->\n\t\t\t\tball = []\n\t\t\t\tfor f in args\n\t\t\t\t\tif typeof f == 'function'\n\t\t\t\t\t\texpr = function_literal(f)\n\t\t\t\t\t\tstart_time = time_now()\n\t\t\t\t\t\teval_result = f()\n\t\t\t\t\t\ttime_used = time_now() - start_time\n\t\t\t\t\t\tball.push(\"#{prefix} #{dye('green') expr} #{dye('bold_grey') '==>'}\", eval_result)\n\t\t\t\t\t\tball.push(dye('yellow') \"[#{time_used}ms]\") if time_used > 0\n\t\t\t\t\telse\n\t\t\t\t\t\tball.push(\"#{prefix}\", f)\n\t\t\t\tconsole[op] ball...\n\t\t\t\thistories.push(ball)\n\t\t\t\thistories.shift() if histories.length >= 10\n\t\t\t\treturn null\n\t\tgot = factory('log')\n\t\tgot.histories = histories\n\t\tgot.info = factory('info')\n\t\tgot.warn = factory('warn')\n\t\tgot.error = got.err = factory('error')\n\t\treturn got\n\n\tassert = (f, msg) ->\n\t\t[f, msg] = [msg, f] if f not instanceof Function\n\t\ttry\n\t\t\tthrow Error \"Assertion #{msg ? function_literal(f)} Failed!\" if not f()\n\t\tcatch e\n\t\t\tthrow Error \"Assertion #{msg ? function_literal(f)} Unknown:\\n#{e}\"\n\n\tassertEq = (l, r) ->\n\t\ttry\n\t\t\tlv = l()\n\t\t\trv = r()\n\t\tcatch e\n\t\t\tthrow Error \"Equation Between #{function_literal(l)} And #{function_literal(r)} Unknown:\\n#{e}\"\n\t\tif lv isnt rv\n\t\t\tthrow Error \"Equation Failed:\\n\\t#{function_literal(l)} IS #{lv} BUT\\n\\t#{function_literal(r)} IS #{rv}.\"\n\n\tassertEqOn = (f) -> (l, r) ->\n\t\ttry\n\t\t\tlv = l()\n\t\t\trv = r()\n\t\t\tflv = f(lv)\n\t\t\tfrv = f(rv)\n\t\tcatch e\n\t\t\tthrow Error \"MAPPED Equation Between #{function_literal(l)} And #{function_literal(r)} Unknown:\\n#{e}\"\n\t\tif flv isnt frv\n\t\t\tthrow Error \"Equation Failed:\\n\\t#{function_literal(l)} IS #{lv} AND MAPPED TO #{flv} BUT\\n\\t#{function_literal(r)} IS #{rv} AND MAPPED TO #{frv}.\"\n\n\tsecurely = (f) -> # ensure a function not to modify it's arguments\n\t\t(args...) ->\n\t\t\targs = deepcopy args\n\t\t\tf(args...)\n\n\tdict = (pairs) -> #for dict comprehensions\n\t\td = {}\n\t\td[k] = v for [k, v] in pairs\n\t\treturn d\n\n\t{copy, deepcopy} = do ->\n\t\tcp = (root, dep) ->\n\t\t\treturn root if dep == 0 or not root? or typeof(root) != 'object'\n\t\t\tif root instanceof Array\n\t\t\t\tr = (cp(v, dep-1) for v in root)\n\t\t\telse\n\t\t\t\tr = {}\n\t\t\t\tr[k] = cp(v, dep-1) for k, v of root\n\t\t\treturn r\n\t\tcopy: (obj, depth=1) -> cp(obj, depth)\n\t\tdeepcopy: (obj, depth=Infinity) -> cp(obj, depth)\n\n\textend = (base) -> (defaults...) -> #NOTE: modified inplace, use copy() to protect it.\n\t\tfor d in defaults when d?\n\t\t\tbase[k] ?= v for k, v of d #NOTE: null values will be replaced if a default value exists.\n\t\treturn base\n\n\tupdate = (base) -> (updates...) -> #NOTE: modified inplace, use copy() to protect it.\n\t\tfor d in updates when d?\n\t\t\tbase[k] = v for k, v of d\n\t\treturn base\n\n\treturn {\n\t\tlog, assert, assertEq, assertEqOn, dict, copy, deepcopy, securely, extend, update,\n\t}\n\nmodule.exports = this_module()\n\n"],"sourceRoot":"/source/"}