{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","node_modules/browserify/node_modules/process/browser.js","coffee-mate.coffee.js","basics.coffee","coffee-mate.coffee","convertors.coffee","funny.coffee","lazy.coffee","url-helpers.coffee","utils.coffee"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","drainQueue","draining","currentQueue","len","queue","noop","process","nextTick","fun","push","setTimeout","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","cwd","chdir","umask",2,"this_module","slice","arg","abs","accept_multi_or_array","best","ceil","equal","flip","floor","greaterEqual","greaterThan","lessEqual","lessThan","max","max_index","min","min_index","notEqual","pluck","seek","sum","x","y","arr","attr","d","it","Math","arguments","first","Array","k","b","results","j","ref","apply","this","./lazy",3,"basics","convertors","funny","lazy","url_helpers","utils","extend","./basics","./convertors","./funny","./url-helpers","./utils",4,"bool","chr","float","hex","int","json","obj","ord","str","base","parseInt","test","parseFloat","toString","c","charCodeAt","String","fromCharCode","indent","JSON","stringify","parse",5,"Y","church","memoize","iter","get_key","cache","args","cached","key",6,"Symbol","all","any","brk","cartProd","concat","cons","drop","dropWhile","enumerate","filter","foldl","foreach","generate","iterator","last","lazylist","list","map","naturals","nil","permutation_gen","primes","random_gen","range","ranged_random_gen","repeat","reverse","scanl","streak","take","takeWhile","zip","zipWith","next","value","done","stop","start","step","p","Infinity","keys","Object","init","status","hash","sin","opts","seed","random","next_permutation","m","ref1","ls","xs","ok","finished","prevx","got","buf","shift","copy","xss","current_index","len1","iters","apply_vector","inc_vector","limits","len_minus_1","vec","space","get_value","inc","v","better","all_not","callback","fruit","defineProperties","break","writable","configurable","enumerable",7,"uri_decoder","uri_encoder","component_packer","encodeURIComponent","join","component_unpacker","ref2","match","decodeURIComponent",8,"assert","assertEq","assertEqOn","deepcopy","dict","function_literal","log","securely","time_now","update","expr","replace","Date","getTime","dye","factory","histories","log_label","cavailable","palette","window","NODE_DISABLE_COLORS","bold","red","green","yellow","blue","bold_grey","color","flag_palette","op_flag","#","I","E","W","op","toUpperCase","flag","prefix","ball","eval_result","start_time","time_used","console","info","warn","error","err","msg","Function","_error","lv","rv","flv","frv","pairs","cp","root","dep","depth","defaults","updates","_process"],"mappings":"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","file":"coffee-mate.coffee.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    draining = true;\n    var currentQueue;\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        var i = -1;\n        while (++i < len) {\n            currentQueue[i]();\n        }\n        len = queue.length;\n    }\n    draining = false;\n}\nprocess.nextTick = function (fun) {\n    queue.push(fun);\n    if (!draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n",null,"this_module = ({best}) ->\n\tflip = (f) ->\n\t\t(x) -> (y) -> f(y)(x)\n\n\tseek = (arr) ->\n\t\t(i) -> arr[i]\n\n\tpluck = (attr) ->\n\t\t(d) -> d[attr]\n\n\tequal = (it) ->\n\t\t(x) -> x == it\n\n\tnotEqual = (it) ->\n\t\t(x) -> x != it\n\n\tlessThan = (it) ->\n\t\t(x) -> x < it\n\n\tgreaterThan = (it) ->\n\t\t(x) -> x > it\n\n\tlessEqual = (it) ->\n\t\t(x) -> x <= it\n\n\tgreaterEqual = (it) ->\n\t\t(x) -> x >= it\n\n\tabs = Math.abs\n\tfloor = Math.floor\n\tceil = Math.ceil\n\n\taccept_multi_or_array = (f) ->\n\t\t(arr...) ->\n\t\t\tf(if arr.length == 1 and arr.first instanceof Array then arr.first else arr)\n\n\tsum = accept_multi_or_array (arr) ->\n\t\tarr = arr.first if arr.length == 1 and arr.first instanceof Array\n\t\tr = 0\n\t\tr += x for x in arr\n\t\tr\n\n\tmax = accept_multi_or_array (arr) ->\n\t\tbest((a, b) -> a > b) arr\n\n\tmin = accept_multi_or_array (arr) ->\n\t\tbest((a, b) -> a < b) arr\n\n\tmax_index = accept_multi_or_array (arr) ->\n\t\tbest((i, j) -> arr[i] > arr[j]) [0...arr.length]\n\n\tmin_index = accept_multi_or_array (arr) ->\n\t\tbest((i, j) -> arr[i] < arr[j]) [0...arr.length]\n\n\treturn {\n\t\tflip, seek, pluck,\n\t\tequal, notEqual, lessThan, lessEqual, greaterThan, greaterEqual,\n\t\tabs, floor, ceil, sum, max, min, max_index, min_index,\n\t}\n\nmodule.exports = this_module\n\tbest: require('./lazy').best\n\n","utils = require './utils'\nbasics = require './basics'\nlazy = require './lazy'\nfunny = require './funny'\nconvertors = require './convertors'\nurl_helpers = require './url-helpers'\n\nmodule.exports = utils.extend({}) utils, basics, lazy, funny, convertors, url_helpers\n\n","this_module = () ->\n\tint = (s, base) -> if typeof(s) == 'string' then (r = parseInt(s, base); unless s.slice? and r == parseInt(s.slice(0,-1), base) then r else null) else parseInt(0 + s)\n\tfloat = (s) -> if /^-?[0-9]*(\\.[0-9]+)?([eE]-?[0-9]+)?$/.test(s) then parseFloat(s) else null\n\tstr = (x, base) -> x.toString(base)\n\tbool = (x) -> if x in [true, false] then x else null\n\thex = (x) -> x.toString(16)\n\tord = (c) -> c.charCodeAt()\n\tchr = (x) -> String.fromCharCode(x)\n\tjson = (it, indent) -> JSON.stringify(it, null, indent)\n\tobj = (s) -> JSON.parse(s)\n\n\treturn {\n\t\tint, float, bool, str, hex, ord, chr, json, obj,\n\t}\n\nmodule.exports = this_module()\n\n","this_module = () ->\n\tchurch = (n) -> #the nth church number\n\t\titer = (f, n, r) ->\n\t\t\tif n == 0 then r else iter(f, n - 1, f(r))\n\t\t(f) ->\n\t\t\t(x) -> iter(f, n + 0, x)\n\n\tY = (f) -> #the Y combinator\n\t\t((x) -> (x x)) ((x) -> (f ((y) -> ((x x) y))))\n\n\tmemoize = (f, get_key = ((args...) -> json(args))) ->\n\t\tcache = {}\n\t\t(args...) ->\n\t\t\tkey = get_key(args...)\n\t\t\tcached = cache[key]\n\t\t\tif cached?\n\t\t\t\tcached\n\t\t\telse\n\t\t\t\tr = f(args...)\n\t\t\t\tcache[key] = r\n\t\t\t\tr\n\n\treturn {\n\t\tchurch, Y, memoize,\n\t}\n\nmodule.exports = this_module()\n\n","this_module = ({Symbol}) ->\n\n\t# LazyList definition: nil, lazylist, iterator,\n\n\tlazylist = (f) -> # construct a lazylist from a function.\n\t\tf[Symbol.iterator] = -> f()\n\t\tf.toString = -> \"LazyList\"\n\t\treturn f\n\n\tnil = lazylist -> nil # xs is empty <==> xs is nil or xs() is nil or xs()() is nil... <==> last xs is nil\n\tnil.toString = -> 'nil'\n\n\titerator = (it) -> # construct an iterator(which is a function with status) from a function.\n\t\tit.next = ->\n\t\t\tr = it()\n\t\t\t{value: r, done: r == nil}\n\t\tit.toString = -> \"Iterator\"\n\t\treturn it\n\n\t# lazylist constants: naturals, range, primes,\n\n\tnaturals =\n\t\tlazylist ->\n\t\t\ti = -1\n\t\t\titerator ->\n\t\t\t\t++i\n\n\trange = (args...) ->\n\t\tif args.length == 0\n\t\t\tnaturals\n\t\telse if args.length == 1\n\t\t\tlazylist ->\n\t\t\t\t[stop] = args\n\t\t\t\ti = -1\n\t\t\t\titerator ->\n\t\t\t\t\tif ++i < stop then i else nil\n\t\telse if args.length == 2\n\t\t\tlazylist ->\n\t\t\t\t[start, stop] = args\n\t\t\t\tif start < stop\n\t\t\t\t\ti = start - 1\n\t\t\t\t\titerator ->\n\t\t\t\t\t\tif ++i < stop then i else nil\n\t\t\t\telse\n\t\t\t\t\ti = start + 1\n\t\t\t\t\titerator ->\n\t\t\t\t\t\tif --i > stop then i else nil\n\t\telse\n\t\t\tlazylist ->\n\t\t\t\t[start, stop, step] = args\n\t\t\t\tthrow 'ERR IN range(): YOU ARE CREATING AN UNLIMITTED RANGE' if stop != start and (stop - start) * step < 0\n\t\t\t\ti = start - step\n\t\t\t\tif start < stop\n\t\t\t\t\titerator ->\n\t\t\t\t\t\tif (i += step) < stop then i else nil\n\t\t\t\telse\n\t\t\t\t\titerator ->\n\t\t\t\t\t\tif (i += step) > stop then i else nil\n\n\tprimes = lazylist -> do\n\t\tfilter((x) -> all((p) -> x % p != 0) takeWhile((p) -> p * p <= x) range(2, Infinity)) range(2, Infinity)\n\n\t# lazylist producers: lazy, enumerate, generate, random_gen, ranged_random_gen, permutation_gen,\n\n\tlazy = (arr) -> #make a lazylist from array or function\n\t\tif typeof arr is 'function'\n\t\t\tlazylist arr\n\t\telse if arr[Symbol.iterator]?\n\t\t\tlazylist ->\n\t\t\t\tit = arr[Symbol.iterator]()\n\t\t\t\titerator ->\n\t\t\t\t\tr = it.next()\n\t\t\t\t\tif r.done then nil else r.value\n\t\telse #maybe Array or String\n\t\t\tlazylist ->\n\t\t\t\ti = -1\n\t\t\t\titerator ->\n\t\t\t\t\ti += 1\n\t\t\t\t\tif i < arr.length\n\t\t\t\t\t\tarr[i]\n\t\t\t\t\telse\n\t\t\t\t\t\tnil\n\n\tenumerate = (it) -> # iterator with index(with key for object)\n\t\tif it[Symbol.iterator]? or it instanceof Array\n\t\t\tzip(naturals, it)\n\t\telse\n\t\t\tlazylist ->\n\t\t\t\tkeys = Object.keys(it)\n\t\t\t\ti = -1\n\t\t\t\titerator ->\n\t\t\t\t\tif ++i < keys.length then [(k = keys[i]), it[k]] else nil\n\n\trepeat = (x) -> # repeat x\n\t\tlazylist ->\n\t\t\titerator ->\n\t\t\t\tx\n\n\tgenerate = (init, next) -> #function next should not change it's argument\n\t\tlazylist ->\n\t\t\tstatus = init\n\t\t\titerator ->\n\t\t\t\tlast = status\n\t\t\t\tstatus = next status\n\t\t\t\treturn last\n\n\trandom_gen = do ->\n\t\thash = (x) ->\n\t\t\tx = Math.sin(x) * 1e4\n\t\t\tx - Math.floor(x)\n\t\t(opts) ->\n\t\t\tseed = opts?.seed ? Math.random()\n\t\t\tgenerate seed, hash\n\n\tranged_random_gen = (range, opts) ->\n\t\tseed = opts?.seed ? Math.random()\n\t\tmap((x) -> Math.floor(x * range)) random_gen(seed: seed)\n\n\tpermutation_gen = do ->\n\t\tnext_permutation = (x) ->\n\t\t\tx = x[...]\n\t\t\tl = x.length - 1\n\t\t\t--l while l >= 1 and x[l] <= x[l - 1]\n\n\t\t\tif (l != 0)\n\t\t\t\tm = x.length - 1\n\t\t\t\t--m while m > l - 1 and x[m] <= x[l - 1]\n\t\t\t\t[x[m], x[l - 1]] = [x[l - 1], x[m]]\n\n\t\t\tr = x.length - 1\n\t\t\twhile(l < r)\n\t\t\t\t[x[l], x[r]] = [x[r], x[l]]\n\t\t\t\t++l\n\t\t\t\t--r\n\t\t\treturn x\n\n\t\t(arr) ->\n\t\t\tif arr.length == 0 then nil else\n\t\t\t\tconcat [arr[...]], takeWhile((ls) -> json(ls) != json(arr)) drop(1) generate arr, next_permutation\n\n\t# lazylist decorators: take, takeWhile, drop, dropWhile, cons, map, filter, scanl, streak, reverse,\n\n\ttake = (n) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if xs[Symbol.iterator]? then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\tc = -1\n\t\t\t\titerator ->\n\t\t\t\t\tif ++c < n then iter() else nil\n\n\ttakeWhile = (ok) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if xs[Symbol.iterator]? then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\titerator ->\n\t\t\t\t\tif (x = iter()) isnt nil and ok(x) then x else nil\n\n\tdrop = (n) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if xs[Symbol.iterator]? then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\tfinished = false\n\t\t\t\t(finished or= (iter() is nil); break if finished) for i in [0...n]\n\t\t\t\tif finished then (-> nil) else iter\n\n\tdropWhile = (ok) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if xs[Symbol.iterator]? then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\tnull while ok(x = iter()) and x isnt nil\n\t\t\t\titerator ->\n\t\t\t\t\t[prevx, x] = [x, iter()]\n\t\t\t\t\treturn prevx\n\n\tcons = (x) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = null\n\t\t\t\titerator ->\n\t\t\t\t\tif iter is null\n\t\t\t\t\t\titer = (if xs[Symbol.iterator]? then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\t\t\treturn x\n\t\t\t\t\telse\n\t\t\t\t\t\treturn iter()\n\n\tmap = (f) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if xs[Symbol.iterator]? then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\titerator ->\n\t\t\t\t\tif (x = iter()) isnt nil then f(x) else nil\n\n\tfilter = (ok) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if xs[Symbol.iterator]? then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\titerator ->\n\t\t\t\t\tnull while not ok(x = iter()) and x isnt nil\n\t\t\t\t\treturn x\n\n\tscanl = (f, r) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if xs[Symbol.iterator]? then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\titerator ->\n\t\t\t\t\tgot = r\n\t\t\t\t\tr = if (x = iter()) isnt nil then f(r, x) else nil\n\t\t\t\t\treturn got\n\n\tstreak = (n) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if xs[Symbol.iterator]? then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\tbuf = []\n\t\t\t\titerator ->\n\t\t\t\t\treturn nil if (x = iter()) is nil\n\t\t\t\t\tbuf.push(x)\n\t\t\t\t\tbuf.shift(1) if buf.length > n\n\t\t\t\t\treturn buf[...]\n\n\treverse = (xs) ->\n\t\tarr = if xs[Symbol.iterator]? then list xs else copy xs\n\t\treturn lazy arr.reverse()\n\n\t# lazylist combiners: concat, zip, zipWith, cartProd,\n\n\tconcat = (xss...) ->\n\t\tlazylist ->\n\t\t\titer = (if xss[0][Symbol.iterator]? then xss[0] else lazy(xss[0]))[Symbol.iterator]()\n\t\t\tcurrent_index = 0\n\t\t\titerator ->\n\t\t\t\tif (x = iter()) isnt nil\n\t\t\t\t\treturn x\n\t\t\t\telse if (++current_index < xss.length)\n\t\t\t\t\titer = (if xss[current_index][Symbol.iterator]? then xss[current_index] else lazy(xss[current_index]))[Symbol.iterator]()\n\t\t\t\t\treturn iter()\n\t\t\t\telse\n\t\t\t\t\treturn nil\n\n\t{zip, zipWith} = do ->\n\t\tfinished = (arr) ->\n\t\t\tfor x in arr\n\t\t\t\treturn true if x is nil\n\t\t\treturn false\n\n\t\tzip = (xss...) ->\n\t\t\tlazylist ->\n\t\t\t\titers = ((if xs[Symbol.iterator]? then xs else lazy(xs))[Symbol.iterator]() for xs in xss)\n\t\t\t\titerator ->\n\t\t\t\t\tnext = (iter() for iter in iters)\n\t\t\t\t\tif finished(next)\n\t\t\t\t\t\treturn nil\n\t\t\t\t\telse\n\t\t\t\t\t\treturn next\n\n\t\tzipWith = (f) -> (xss...) ->\n\t\t\tlazylist ->\n\t\t\t\titers = ((if xs[Symbol.iterator]? then xs else lazy(xs))[Symbol.iterator]() for xs in xss)\n\t\t\t\titerator ->\n\t\t\t\t\tnext = (iter() for iter in iters)\n\t\t\t\t\tif finished(next)\n\t\t\t\t\t\treturn nil\n\t\t\t\t\telse\n\t\t\t\t\t\treturn f(next...)\n\n\t\treturn {zip, zipWith}\n\n\tcartProd = do -> # cartesian product\n\t\tinc_vector = (limits) ->\n\t\t\tlen_minus_1 = limits.length - 1\n\t\t\t(vec) ->\n\t\t\t\ti = len_minus_1\n\t\t\t\tvec[i--] = 0 until ++vec[i] < limits[i] or i <= 0\n\t\t\t\treturn vec\n\n\t\tapply_vector = (space) ->\n\t\t\tlen = space.length\n\t\t\t(vec) ->\n\t\t\t\t(space[i][vec[i]] for i in [0...len])\n\n\t\t(xss...) ->\n\t\t\tlazylist ->\n\t\t\t\txss = (list(xs) for xs in xss)\n\t\t\t\tlimits = (xss[i].length for i in [0...xss.length])\n\t\t\t\t(return nil if len is 0) for len in limits\n\t\t\t\tinc = inc_vector(limits)\n\t\t\t\tget_value = apply_vector(xss)\n\t\t\t\tv = (0 for i in [0...xss.length])\n\t\t\t\titerator ->\n\t\t\t\t\tif v[0] < limits[0] then (r = get_value v; inc v; r) else nil\n\n\t# lazylist consumers: list, last, length, foldl, best, all, any, foreach,\n\n\tlist = (xs) -> #force list elements of the lazylist to get an array\n\t\tif xs[Symbol.iterator]?\n\t\t\tit = xs[Symbol.iterator]()\n\t\t\t(x while (x = it()) isnt nil)\n\t\telse if xs instanceof Array\n\t\t\txs\n\t\telse\n\t\t\tthrow Error 'list(xs): xs is neither LazyList nor Array'\n\n\tlast = (xs) -> #returns nil if xs is empty\n\t\tif not xs[Symbol.iterator]? then xs[xs.length - 1] ? nil else\n\t\t\titer = (if xs[Symbol.iterator]? then xs else lazy(xs))[Symbol.iterator]()\n\t\t\tr = nil\n\t\t\tr = x while (x = iter()) isnt nil\n\t\t\treturn r\n\n\tlength = (xs) ->\n\t\tif not xs[Symbol.iterator]? then xs.length else\n\t\t\titer = (if xs[Symbol.iterator]? then xs else lazy(xs))[Symbol.iterator]()\n\t\t\tr = 0\n\t\t\t++r while (x = iter()) isnt nil\n\t\t\treturn r\n\n\tfoldl = (f, r) ->\n\t\t(xs) ->\n\t\t\titer = (if xs[Symbol.iterator]? then xs else lazy(xs))[Symbol.iterator]()\n\t\t\tr = f(r, x) while (x = iter()) isnt nil\n\t\t\treturn r\n\n\tbest = (better) ->\n\t\t(xs) ->\n\t\t\titer = (if xs[Symbol.iterator]? then xs else lazy(xs))[Symbol.iterator]()\n\t\t\treturn null if (r = iter()) is nil\n\t\t\twhile (it = iter()) isnt nil\n\t\t\t\tr = if better(it, r) then it else r\n\t\t\treturn r\n\n\tall = (f) ->\n\t\tf = ((x) -> x is f) if typeof(f) isnt 'function'\n\t\t(xs) ->\n\t\t\titer = (if xs[Symbol.iterator]? then xs else lazy(xs))[Symbol.iterator]()\n\t\t\twhile (x = iter()) isnt nil\n\t\t\t\treturn false if not f(x)\n\t\t\treturn true\n\n\tany = (f) ->\n\t\tall_not = all (x) -> not f(x)\n\t\t(xs) -> not (all_not xs)\n\n\tbrk = -> brk\n\tbrk.toString = -> 'foreach.break'\n\n\tforeach = (xs, callback, fruit) ->\n\t\titer = (if xs[Symbol.iterator]? then xs else lazy(xs))[Symbol.iterator]()\n\t\twhile (x = iter()) isnt nil\n\t\t\tbreak if callback(x, fruit) is brk\n\t\tfruit\n\n\tObject.defineProperties foreach,\n\t\tbreak:\n\t\t\twritable: false\n\t\t\tconfigurable: false\n\t\t\tenumerable: false\n\t\t\tvalue: brk\n\n\treturn {\n\t\t# lazylist definition\n\t\tnil, lazylist, iterator, Symbol,\n\n\t\t# lazylist constants\n\t\tnaturals, range, primes,\n\n\t\t# lazylist producers\n\t\tlazy, enumerate, repeat, generate, random_gen, ranged_random_gen, permutation_gen,\n\n\t\t# lazylist decorators\n\t\tcons, map, filter, take, takeWhile, drop, dropWhile, scanl, streak, reverse,\n\n\t\t# lazylist combiners\n\t\tconcat, zip, zipWith, cartProd,\n\n\t\t# lazylist consumers\n\t\tlist, last, length, foldl, best, all, any, foreach,\n\t}\n\nmodule.exports = this_module\n\tSymbol: Symbol ? {iterator: 'iter'}\n","this_module = () ->\n\turi_encoder = (component_packer = str) ->\n\t\t(obj) ->\n\t\t\t(\"#{encodeURIComponent(k)}=#{encodeURIComponent component_packer v}\" for k, v of obj).join('&')\n\n\turi_decoder = (component_unpacker = ((s) -> s)) ->\n\t\t(str) ->\n\t\t\td = {}\n\t\t\tfor s in (str.match /[^?=&]+=[^&]*/g) ? []\n\t\t\t\t[..., k, v] = s.match /([^=]+)=(.*)/\n\t\t\t\td[decodeURIComponent(k)] = (component_unpacker decodeURIComponent v)\n\t\t\treturn d\n\n\treturn {\n\t\turi_encoder, uri_decoder,\n\t}\n\nmodule.exports = this_module()\n\n","this_module = () ->\n\tfunction_literal = (f) ->\n\t\texpr = f.toString().replace(/^\\s*function\\s?\\(\\s?\\)\\s?{\\s*return\\s*([^]*?);?\\s*}$/, '$1')\n\t\texpr = expr.replace(/[\\r\\n]{1,2}\\s*/g, '') if expr.length <= 100\n\t\treturn expr\n\n\ttime_now = ->\n\t\t(new Date).getTime()\n\n\tlog = do -> #log an expression with it's literal and time used\n\t\tdye = do ->\n\t\t\t# ANSI Terminal Colors.\n\t\t\tcavailable = (not window?) and process? and not process.env.NODE_DISABLE_COLORS\n\t\t\tpalette =\n\t\t\t\tbold: '\\x1B[0;1m'\n\t\t\t\tred: '\\x1B[0;31m'\n\t\t\t\tgreen: '\\x1B[0;32m'\n\t\t\t\tyellow: '\\x1B[0;33m'\n\t\t\t\tblue: '\\x1B[0;34m'\n\t\t\t\tbold_grey: '\\x1B[1;30m'\n\t\t\tif not cavailable\n\t\t\t\t(color) -> (s) -> s\n\t\t\telse\n\t\t\t\t(color) ->\n\t\t\t\t\t(s) -> \"#{palette[color]}#{s}#{'\\x1B[0m'}\"\n\n\t\tlog_label = do ->\n\t\t\tflag_palette =\n\t\t\t\t'#': 'bold_grey'\n\t\t\t\t'I': 'green'\n\t\t\t\t'E': 'red'\n\t\t\t\t'W': 'yellow'\n\t\t\top_flag = (op) ->\n\t\t\t\tif op == 'log' then '#' else op[0].toUpperCase()\n\t\t\t(op) ->\n\t\t\t\tflag = op_flag(op)\n\t\t\t\tdye(flag_palette[flag]) flag\n\n\t\thistories = []\n\t\tfactory = (op) ->\n\t\t\tprefix = \"#{dye('bold_grey') '#'}#{log_label op}\"\n\t\t\t(args...) ->\n\t\t\t\tball = []\n\t\t\t\tfor f in args\n\t\t\t\t\tif typeof f == 'function'\n\t\t\t\t\t\texpr = function_literal(f)\n\t\t\t\t\t\tstart_time = time_now()\n\t\t\t\t\t\teval_result = f()\n\t\t\t\t\t\ttime_used = time_now() - start_time\n\t\t\t\t\t\tball.push(\"#{prefix} #{dye('green') expr} #{dye('bold_grey') '==>'}\", f())\n\t\t\t\t\t\tball.push(dye('yellow') \"[#{time_used}ms]\") if time_used > 0\n\t\t\t\t\telse\n\t\t\t\t\t\tball.push(\"#{prefix}\", f)\n\t\t\t\tconsole[op] ball...\n\t\t\t\thistories.push(ball)\n\t\t\t\thistories.shift() if histories.length >= 10\n\t\t\t\treturn null\n\t\tgot = factory('log')\n\t\tgot.histories = histories\n\t\tgot.info = factory('info')\n\t\tgot.warn = factory('warn')\n\t\tgot.error = got.err = factory('error')\n\t\treturn got\n\n\tassert = (f, msg) ->\n\t\t[f, msg] = [msg, f] if f not instanceof Function\n\t\ttry\n\t\t\tthrow Error \"Assertion #{msg ? function_literal(f)} Failed!\" if not f()\n\t\tcatch e\n\t\t\tthrow Error \"Assertion #{msg ? function_literal(f)} Unknown:\\n#{e}\"\n\n\tassertEq = (l, r) ->\n\t\ttry\n\t\t\tlv = l()\n\t\t\trv = r()\n\t\tcatch e\n\t\t\tthrow Error \"Equation Between #{function_literal(l)} And #{function_literal(r)} Unknown:\\n#{e}\"\n\t\tif lv isnt rv\n\t\t\tthrow Error \"Equation Failed:\\n\\t#{function_literal(l)} IS #{lv} BUT\\n\\t#{function_literal(r)} IS #{rv}.\"\n\n\tassertEqOn = (f) -> (l, r) ->\n\t\ttry\n\t\t\tlv = l()\n\t\t\trv = r()\n\t\t\tflv = f(lv)\n\t\t\tfrv = f(rv)\n\t\tcatch e\n\t\t\tthrow Error \"MAPPED Equation Between #{function_literal(l)} And #{function_literal(r)} Unknown:\\n#{e}\"\n\t\tif flv isnt frv\n\t\t\tthrow Error \"Equation Failed:\\n\\t#{function_literal(l)} IS #{lv} AND MAPPED TO #{flv} BUT\\n\\t#{function_literal(r)} IS #{rv} AND MAPPED TO #{frv}.\"\n\n\tsecurely = (f) -> # ensure a function not to modify it's arguments\n\t\t(args...) ->\n\t\t\targs = deepcopy args\n\t\t\tf(args...)\n\n\tdict = (pairs) -> #for dict comprehensions\n\t\td = {}\n\t\td[k] = v for [k, v] in pairs\n\t\treturn d\n\n\t{copy, deepcopy} = do ->\n\t\tcp = (root, dep) ->\n\t\t\treturn root if dep == 0 or not root? or typeof(root) != 'object'\n\t\t\tif root instanceof Array\n\t\t\t\tr = (cp(v, dep-1) for v in root)\n\t\t\telse\n\t\t\t\tr = {}\n\t\t\t\tr[k] = cp(v, dep-1) for k, v of root\n\t\t\treturn r\n\t\tcopy: (obj, depth=1) -> cp(obj, depth)\n\t\tdeepcopy: (obj, depth=Infinity) -> cp(obj, depth)\n\n\textend = (base) -> (defaults...) -> #NOTE: modified inplace, use copy() to protect it.\n\t\tfor d in defaults when d?\n\t\t\tbase[k] ?= v for k, v of d #NOTE: null values will be replaced if a default value exists.\n\t\treturn base\n\n\tupdate = (base) -> (updates...) -> #NOTE: modified inplace, use copy() to protect it.\n\t\tfor d in updates when d?\n\t\t\tbase[k] = v for k, v of d\n\t\treturn base\n\n\treturn {\n\t\tlog, assert, assertEq, assertEqOn, dict, copy, deepcopy, securely, extend, update,\n\t}\n\nmodule.exports = this_module()\n\n"],"sourceRoot":"/source/"}