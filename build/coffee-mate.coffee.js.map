{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","node_modules/browserify/node_modules/process/browser.js","coffee-mate.coffee.js","basics.coffee","coffee-mate.coffee","convertors.coffee","funny.coffee","lazy.coffee","url-helpers.coffee","utils.coffee"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","drainQueue","draining","currentQueue","len","queue","noop","process","nextTick","fun","push","setTimeout","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","cwd","chdir","umask",2,"this_module","slice","arg","abs","accept_multi_or_array","best","ceil","equal","flip","floor","greaterEqual","greaterThan","lessEqual","lessThan","max","max_index","min","min_index","notEqual","pluck","seek","sum","x","y","arr","attr","d","it","Math","arguments","first","Array","k","b","results","j","ref","apply","this","./lazy",3,"basics","convertors","funny","lazy","url_helpers","utils","extend","./basics","./convertors","./funny","./url-helpers","./utils",4,"bool","chr","float","hex","int","json","obj","ord","str","base","parseInt","test","parseFloat","toString","c","charCodeAt","String","fromCharCode","indent","JSON","stringify","parse",5,"Y","church","memoize","iter","get_key","cache","args","cached","key",6,"all","any","brk","cartProd","concat","cons","drop","dropWhile","enumerate","filter","foldl","foreach","generate","iterator","last","lazylist","list","map","naturals","nil","permutation_gen","primes","random_gen","range","ranged_random_gen","repeat","reverse","scanl","streak","take","takeWhile","zip","zipWith","xs","next","value","done","stop","start","step","p","Infinity","keys","Object","init","status","hash","sin","opts","seed","random","next_permutation","m","ref1","ls","ok","finished","prevx","got","buf","shift","copy","xss","current_index","len1","iters","apply_vector","inc_vector","limits","len_minus_1","vec","space","get_value","inc","v","better","all_not","callback","fruit","defineProperties","break","writable","configurable","enumerable",7,"uri_decoder","uri_encoder","component_packer","encodeURIComponent","join","component_unpacker","ref2","match","decodeURIComponent",8,"assert","assertEq","assertEqOn","deepcopy","dict","function_literal","log","securely","time_now","update","expr","replace","Date","getTime","dye","factory","histories","log_label","cavailable","palette","NODE_DISABLE_COLORS","bold","red","green","yellow","blue","bold_grey","color","flag_palette","op_flag","#","I","E","W","op","toUpperCase","flag","prefix","ball","eval_result","start_time","time_used","console","info","warn","error","err","msg","Function","_error","lv","rv","flv","frv","pairs","cp","root","dep","depth","defaults","updates","_process"],"mappings":"CAAA,QAAAA,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAK,GAAA,GAAAC,OAAA,uBAAAN,EAAA,IAAA,MAAAK,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAX,EAAAG,IAAAS,WAAAb,GAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAS,QAAA,IAAA,GAAAL,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAa,GAAA,SAAAT,EAAAU,GCMA,QAAAC,KACA,IAAAC,EAAA,CAGAA,GAAA,CAGA,KAFA,GAAAC,GACAC,EAAAC,EAAAP,OACAM,GAAA,CACAD,EAAAE,EACAA,IAEA,KADA,GAAAd,GAAA,KACAA,EAAAa,GACAD,EAAAZ,IAEAa,GAAAC,EAAAP,OAEAI,GAAA,GAgBA,QAAAI,MApCA,GAAAC,GAAAP,EAAAJ,WACAS,KACAH,GAAA,CAoBAK,GAAAC,SAAA,SAAAC,GACAJ,EAAAK,KAAAD,GACAP,GACAS,WAAAV,EAAA,IAIAM,EAAAK,MAAA,UACAL,EAAAM,SAAA,EACAN,EAAAO,OACAP,EAAAQ,QACAR,EAAAS,QAAA,GACAT,EAAAU,YAIAV,EAAAW,GAAAZ,EACAC,EAAAY,YAAAb,EACAC,EAAAa,KAAAd,EACAC,EAAAc,IAAAf,EACAC,EAAAe,eAAAhB,EACAC,EAAAgB,mBAAAjB,EACAC,EAAAiB,KAAAlB,EAEAC,EAAAkB,QAAA,WACA,KAAA,IAAAhC,OAAA,qCAIAc,EAAAmB,IAAA,WAAA,MAAA,KACAnB,EAAAoB,MAAA,WACA,KAAA,IAAAlC,OAAA,mCAEAc,EAAAqB,MAAA,WAAA,MAAA,SCGMC,GAAG,SAASvC,EAAQU,GC5D1B,GAAA8B,GAAAC,KAAAA,KAAAD,GAAc,SAACE,GACd,GAAAC,GAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,CAqDA,OAtDehB,GAADH,EAACG,KACfG,EAAO,SAAC9C,GDmEL,MClEF,UAAC4D,GDmEG,MCnEG,UAACC,GDoEF,MCpEQ7D,GAAE6D,GAAGD,MAEpBF,EAAO,SAACI,GDuEL,MCtEF,UAAC/D,GDuEG,MCvEG+D,GAAI/D,KAEZ0D,EAAQ,SAACM,GDyEN,MCxEF,UAACC,GDyEG,MCzEGA,GAAED,KAEVlB,EAAQ,SAACoB,GD2EN,MC1EF,UAACL,GD2EG,MC3EGA,KAAKK,IAEbT,EAAW,SAACS,GD6ET,MC5EF,UAACL,GD6EG,MC7EGA,KAAKK,IAEbd,EAAW,SAACc,GD+ET,MC9EF,UAACL,GD+EG,MC/EOK,GAAJL,IAERX,EAAc,SAACgB,GDiFZ,MChFF,UAACL,GDiFG,MCjFGA,GAAIK,IAEZf,EAAY,SAACe,GDmFV,MClFF,UAACL,GDmFG,MCnFQK,IAALL,IAERZ,EAAe,SAACiB,GDqFb,MCpFF,UAACL,GDqFG,MCrFGA,IAAKK,IAEbxB,EAAMyB,KAAKzB,IACXM,EAAQmB,KAAKnB,MACbH,EAAOsB,KAAKtB,KAEZF,EAAwB,SAAC1C,GDsFtB,MCrFF,YACC,GAAA8D,EDuFG,OCxFHA,GAAA,GAAAK,UAAA7D,OAAAiC,EAAAlC,KAAA8D,UAAA,MACAnE,EAAmB,IAAd8D,EAAIxD,QAAgBwD,EAAIM,gBAAiBC,OAAWP,EAAIM,MAAWN,KAE1EH,EAAMjB,EAAsB,SAACoB,GAC5B,GAAAQ,GAAA1D,EAAAnB,EAAAmE,CAEA,KAFiC,IAAdE,EAAIxD,QAAgBwD,EAAIM,gBAAiBC,SAA5DP,EAAMA,EAAIM,OACV3E,EAAI,EACJ6E,EAAA,EAAA1D,EAAAkD,EAAAxD,OAAAM,EAAA0D,EAAAA,ID4FIV,EAAIE,EAAIQ,GC5FZ7E,GAAKmE,CD+FH,OC9FFnE,KAED2D,EAAMV,EAAsB,SAACoB,GD+F1B,MC9FFnB,GAAK,SAAC9C,EAAG0E,GD+FL,MC/FW1E,GAAI0E,IAAGT,KAEvBR,EAAMZ,EAAsB,SAACoB,GDiG1B,MChGFnB,GAAK,SAAC9C,EAAG0E,GDiGL,MCjGeA,GAAJ1E,IAAOiE,KAEvBT,EAAYX,EAAsB,SAACoB,GAClC,GAAAU,EDmGE,OCnGF7B,GAAK,SAAC5C,EAAG0E,GDoGL,MCpGWX,GAAI/D,GAAK+D,EAAIW,KAAI,WDsG5BD,IACA,KAAK,GAAIF,GAAI,EAAGI,EAAMZ,EAAIxD,OAAaoE,GAAL,EAAeA,EAAJJ,EAAUA,EAAII,EAAUA,GAAL,EAAWJ,IAAMA,IAAME,EAAQtD,KAAKoD,EACpG,OAAOE,IACNG,MAAMC,SCvGZrB,EAAYb,EAAsB,SAACoB,GAClC,GAAAU,ED0GE,OC1GF7B,GAAK,SAAC5C,EAAG0E,GD2GL,MC3GWX,GAAI/D,GAAK+D,EAAIW,KAAI,WD6G5BD,IACA,KAAK,GAAIF,GAAI,EAAGI,EAAMZ,EAAIxD,OAAaoE,GAAL,EAAeA,EAAJJ,EAAUA,EAAII,EAAUA,GAAL,EAAWJ,IAAMA,IAAME,EAAQtD,KAAKoD,EACpG,OAAOE,IACNG,MAAMC,UC7GX9B,KAAAA,EAAMY,KAAAA,EAAMD,MAAAA,EACZZ,MAAAA,EAAOW,SAAAA,EAAUL,SAAAA,EAAUD,UAAAA,EAAWD,YAAAA,EAAaD,aAAAA,EACnDP,IAAAA,EAAKM,MAAAA,EAAOH,KAAAA,EAAMe,IAAAA,EAAKP,IAAAA,EAAKE,IAAAA,EAAKD,UAAAA,EAAWE,UAAAA,IAzD9C/C,EA4DOJ,QAAUkC,GAChBK,KAAM7C,EAAQ,UAAU6C,SDoItBkC,SAAS,IAAIC,GAAG,SAAShF,EAAQU,GEjMpC,GAAAuE,GAAAC,EAAAC,EAAAC,EAAAC,EAAAC,CAAAA,GAAQtF,EAAQ,WAAhBiF,EACSjF,EAAQ,YADjBoF,EAEOpF,EAAQ,UAFfmF,EAGQnF,EAAQ,WAHhBkF,EAIalF,EAAQ,gBAJrBqF,EAKcrF,EAAQ,iBALtBU,EAOOJ,QAAUgF,EAAMC,WAAWD,EAAOL,EAAQG,EAAMD,EAAOD,EAAYG,KF6MvEG,WAAW,EAAEC,eAAe,EAAEC,UAAU,EAAEX,SAAS,EAAEY,gBAAgB,EAAEC,UAAU,IAAIC,GAAG,SAAS7F,EAAQU,GGpN5G,GAAA8B,EAAAA,GAAc,WACb,GAAAsD,GAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,CAUA,OAVAJ,GAAM,SAACtG,EAAG2G,GAAS,GAAA5G,EAAA,OAAgB,gBAAbC,IAA4BD,EAAI6G,SAAS5G,EAAG2G,GAAc,MAAA3G,EAAA6C,OAAa9C,IAAK6G,SAAS5G,EAAE6C,MAAM,EAAE,IAAK8D,GAAW5G,EAAO,MAAW6G,SAAS,EAAI5G,IACpKoG,EAAQ,SAACpG,GAAM,MAAG,uCAAuC6G,KAAK7G,GAAQ8G,WAAW9G,GAAQ,MACzF0G,EAAM,SAACxC,EAAGyC,GH2OP,MG3OgBzC,GAAE6C,SAASJ,IAC9BT,EAAO,SAAChC,GAAM,MAAGA,MAAM,GAANA,KAAY,EAAYA,EAAO,MAChDmC,EAAM,SAACnC,GHmPJ,MGnPUA,GAAE6C,SAAS,KACxBN,EAAM,SAACO,GHqPJ,MGrPUA,GAAEC,cACfd,EAAM,SAACjC,GHuPJ,MGvPUgD,QAAOC,aAAajD,IACjCqC,EAAO,SAAChC,EAAI6C,GHyPT,MGzPoBC,MAAKC,UAAU/C,EAAI,KAAM6C,IAChDZ,EAAM,SAACxG,GH2PJ,MG3PUqH,MAAKE,MAAMvH,KAGvBsG,MAAAA,EAAKF,QAAAA,EAAOF,KAAAA,EAAMQ,IAAAA,EAAKL,IAAAA,EAAKI,IAAAA,EAAKN,IAAAA,EAAKI,KAAAA,EAAMC,IAAAA,IAZ9C1F,EAeOJ,QAAUkC,SHwQX4E,GAAG,SAASpH,EAAQU,GIvR1B,GAAA8B,GAAAC,KAAAA,KAAAD,GAAc,WACb,GAAA6E,GAAAC,EAAAC,CAqBA,OArBAD,GAAS,SAAC5H,GACT,GAAA8H,EJoSE,OIpSFA,GAAO,SAACtH,EAAGR,EAAGC,GACb,MAAQ,KAALD,EAAYC,EAAO6H,EAAKtH,EAAGR,EAAI,EAAGQ,EAAEP,KACxC,SAACO,GJmSG,MIlSH,UAAC4D,GJmSI,MInSE0D,GAAKtH,EAAGR,EAAI,EAAGoE,MAExBuD,EAAI,SAACnH,GJsSF,MIrSF,UAAE4D,GJsSE,MItSKA,GAAEA,IAAI,SAAEA,GJwSb,MIxSoB5D,GAAE,SAAE6D,GJyStB,MIzS8BD,GAAEA,GAAGC,QAE1CwD,EAAU,SAACrH,EAAGuH,GACb,GAAAC,EJoTE,OARe,OAAXD,II7SOA,EAAU,WAAc,GAAAE,EJiT/B,OIjTmBA,GAAA,GAAAtD,UAAA7D,OAAAiC,EAAAlC,KAAA8D,UAAA,MAAY8B,KAAKwB,KAC1CD,KACA,WACC,GAAAC,GAAAC,EAAAC,EAAAlI,CAEA,OAHAgI,GAAA,GAAAtD,UAAA7D,OAAAiC,EAAAlC,KAAA8D,UAAA,MACAwD,EAAMJ,EAAA5C,MAAA,KAAQ8C,GACdC,EAASF,EAAMG,GACZ,MAAAD,EACFA,GAEAjI,EAAIO,EAAA2E,MAAA,KAAE8C,GACND,EAAMG,GAAOlI,EACbA,MAGF2H,OAAAA,EAAQD,EAAAA,EAAGE,QAAAA,IAvBb7G,EA0BOJ,QAAUkC,SJ8TXsF,GAAG,SAAS9H,EAAQU,GKxV1B,GAAA8B,GAAAC,KAAAA,KAAAD,GAAc,WAIb,GAAAuF,GAAAC,EAAAnF,EAAAoF,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAzD,EAAA0D,EAAAtI,EAAAuI,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA3E,EAAA4E,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,CA4VA,OA5VAjB,GAAW,SAACkB,GAGX,MAFAA,GAAGxC,KAAO,WL2VN,MK3VSwC,MACbA,EAAGrD,SAAW,WL6VV,MK7Va,YACVqD,GAERd,EAAMJ,EAAS,WL+VZ,MK/VeI,KAClBA,EAAIvC,SAAW,WLiWZ,MKjWe,OAElBiC,EAAW,SAACzE,GAKX,MAJAA,GAAG8F,KAAO,WACT,GAAAtK,ELmWG,OKnWHA,GAAIwE,KACH+F,MAAOvK,EAAGwK,KAAMxK,IAAKuJ,IACvB/E,EAAGwC,SAAW,WLuWV,MKvWa,YACVxC,GAIR8E,EACCH,EAAS,WACR,GAAA7I,ELuWC,OKvWDA,GAAI,GACJ2I,EAAS,WLuWN,QKtWF3I,MAEHqJ,EAAQ,WACP,GAAA3B,EAAA,OADQA,GAAA,GAAAtD,UAAA7D,OAAAiC,EAAAlC,KAAA8D,UAAA,MACU,IAAfsD,EAAKnH,OACPyI,EAEAH,EADsB,IAAfnB,EAAKnH,OACH,WACR,GAAAP,GAAAmK,CL4WI,OK5WHA,GAAQzC,EAAA,GACT1H,EAAI,GACJ2I,EAAS,WACR,QAAG3I,EAAMmK,EAAUnK,EAAOiJ,KACN,IAAfvB,EAAKnH,OACH,WACR,GAAAP,GAAAoK,EAAAD,CACA,OADCC,GAAA1C,EAAA,GAAOyC,EAAAzC,EAAA,GACGyC,EAARC,GACFpK,EAAIoK,EAAQ,EACZzB,EAAS,WACR,QAAG3I,EAAMmK,EAAUnK,EAAOiJ,MAE3BjJ,EAAIoK,EAAQ,EACZzB,EAAS,WACR,QAAG3I,EAAMmK,EAAUnK,EAAOiJ,MAEpB,WACR,GAAAjJ,GAAAoK,EAAAC,EAAAF,CACA,IADCC,EAAA1C,EAAA,GAAOyC,EAAAzC,EAAA,GAAM2C,EAAA3C,EAAA,GACkDyC,IAAQC,GAAkC,GAAvBD,EAAOC,GAASC,EAAnG,KAAM,sDAEN,OADArK,GAAIoK,EAAQC,EAEX1B,EADUwB,EAARC,EACO,WACR,OAAIpK,GAAKqK,GAAQF,EAAUnK,EAAOiJ,GAE1B,WACR,OAAIjJ,GAAKqK,GAAQF,EAAUnK,EAAOiJ,OAEvCE,EAASN,EAAS,WL8Yf,MK7YFN,GAAO,SAAC1E,GL8YJ,MK9YUiE,GAAI,SAACwC,GL+Yb,MK/YmBzG,GAAIyG,IAAK,IAAGV,EAAU,SAACU,GLiZ1C,MKjZyDzG,IAATyG,EAAIA,IAAQjB,EAAM,EAAGkB,SAAWlB,EAAM,EAAGkB,UAIhGpF,EAAO,SAACpB,GACP,MACC8E,GADgB,kBAAd9E,GACOA,EAEA,WACR,GAAA/D,ELmZI,OKnZJA,GAAI,GACJ2I,EAAS,WAER,MADA3I,IAAK,EACFA,EAAI+D,EAAIxD,OACVwD,EAAI/D,GAEJiJ,OAELX,EAAY,SAACpE,GACZ,MAAG,OAAAA,EAAAqD,MAAYrD,YAAcI,OAC5BuF,EAAIb,EAAU9E,GAEd2E,EAAS,WACR,GAAA7I,GAAAwK,CLyZI,OKzZJA,GAAOC,OAAOD,KAAKtG,GACnBlE,EAAI,GACJ2I,EAAS,WACR,GAAApE,EAAA,SAAGvE,EAAMwK,EAAKjK,QAAcgE,EAAIiG,EAAKxK,GAAKkE,EAAGK,IAAS0E,OAE1DM,EAAS,SAACrF,GLgaP,MK/ZF2E,GAAS,WLgaL,MK/ZHF,GAAS,WLgaJ,MK/ZJzE,QAEHwE,EAAW,SAACgC,EAAMV,GLkaf,MKjaFnB,GAAS,WACR,GAAA8B,ELmaG,OKnaHA,GAASD,EACT/B,EAAS,WACR,GAAAC,EAEA,OAFAA,GAAO+B,EACPA,EAASX,EAAKW,GACP/B,OAEVQ,EAAgB,WACf,GAAAwB,EL0aE,OK1aFA,GAAO,SAAC/G,GLwaJ,MKvaHA,GAAkB,IAAdM,KAAK0G,IAAIhH,GACbA,EAAIM,KAAKnB,MAAMa,IAChB,SAACiH,GACA,GAAAnG,GAAAoG,CLyaG,OKzaHA,GAAA,OAAApG,EAAA,MAAAmG,EAAAA,EAAAC,KAAA,QAAApG,EAAoBR,KAAK6G,SACzBtC,EAASqC,EAAMH,OAEjBtB,EAAoB,SAACD,EAAOyB,GAC3B,GAAAnG,GAAAoG,CL2aE,OK3aFA,GAAA,OAAApG,EAAA,MAAAmG,EAAAA,EAAAC,KAAA,QAAApG,EAAoBR,KAAK6G,SACzBjC,EAAI,SAAClF,GL2aD,MK3aOM,MAAKnB,MAAMa,EAAIwF,KAAQD,GAAW2B,KAAMA,MAEpD7B,EAAqB,WACpB,GAAA+B,ELqcE,OKrcFA,GAAmB,SAACpH,GACnB,GAAAzD,GAAA8K,EAAAxL,EAAAiF,EAAAwG,CAEI,KAFJtH,EAAIA,EAAErB,MAAA,GACNpC,EAAIyD,EAAEtD,OAAS,EACLH,GAAK,GAAMyD,EAAEzD,IAAMyD,EAAEzD,EAAI,MAAnCA,CAEA,IAAS,IAALA,EAAJ,CAEK,IADJ8K,EAAIrH,EAAEtD,OAAS,EACL2K,EAAI9K,EAAI,GAAMyD,EAAEqH,IAAMrH,EAAEzD,EAAI,MAAtC8K,CACAvG,IAAoBd,EAAEzD,EAAI,GAAIyD,EAAEqH,IAA/BrH,EAAEqH,GAAAvG,EAAA,GAAId,EAAEzD,EAAI,GAAJuE,EAAA,GAGV,IADAjF,EAAImE,EAAEtD,OAAS,EACLb,EAAJU,GACL+K,GAAgBtH,EAAEnE,GAAImE,EAAEzD,IAAvByD,EAAEzD,GAAA+K,EAAA,GAAItH,EAAEnE,GAAAyL,EAAA,KACT/K,IACAV,CACD,OAAOmE,IAER,SAACE,GACA,MAAiB,KAAdA,EAAIxD,OAAiB0I,EACvBf,GAAQnE,EAAIvB,MAAA,IAAOoH,EAAU,SAACwB,GLubxB,MKvb+BlF,MAAKkF,KAAOlF,KAAKnC,KAAMqE,EAAK,GAAGM,EAAS3E,EAAKkH,UAIrFtB,EAAO,SAAClK,GLybL,MKxbF,UAACsK,GLybG,MKxbHlB,GAAS,WACR,GAAAlC,GAAAY,CL2bI,OK3bJA,IAAW,MAAAwC,EAAAxC,KAAcwC,EAAQ5E,EAAK4E,IAAKxC,OAC3CZ,EAAI,GACJgC,EAAS,WACR,QAAGhC,EAAMlH,EAAO8H,IAAY0B,QAEhCW,EAAY,SAACyB,GLicV,MKhcF,UAACtB,GLicG,MKhcHlB,GAAS,WACR,GAAAtB,ELkcI,OKlcJA,IAAW,MAAAwC,EAAAxC,KAAcwC,EAAQ5E,EAAK4E,IAAKxC,OAC3CoB,EAAS,WACR,GAAA9E,EAAA,QAAIA,EAAI0D,OAAa0B,GAAQoC,EAAGxH,GAAQA,EAAOoF,QAEnDb,EAAO,SAAC3I,GL0cL,MKzcF,UAACsK,GL0cG,MKzcHlB,GAAS,WACR,GAAAyC,GAAAtL,EAAAuH,EAAA7C,EAAAC,CAEA,KAFA4C,GAAW,MAAAwC,EAAAxC,KAAcwC,EAAQ5E,EAAK4E,IAAKxC,OAC3C+D,GAAW,EACgDtL,EAAA0E,EAAA,EAAAC,EAAAlF,GAAAkF,GAAA,EAAAA,EAAAD,EAAAA,EAAAC,KAA1D2G,IAAAA,EAAc/D,MAAU0B,IAAeqC,GAAmBtL,EAAA2E,GAAA,IAAAD,IAAAA,GAC3D,MAAG4G,GAAe,WLidV,MKjdarC,IAAU1B,MAElCc,EAAY,SAACgD,GLwdV,MKvdF,UAACtB,GLwdG,MKvdHlB,GAAS,WACR,GAAAtB,GAAA1D,CACK,KADL0D,GAAW,MAAAwC,EAAAxC,KAAcwC,EAAQ5E,EAAK4E,IAAKxC,OAChC8D,EAAGxH,EAAI0D,MAAY1D,IAAOoF,IL2djC,MK1dJN,GAAS,WACR,GAAA4C,GAAA5G,CACA,OADAA,IAAcd,EAAG0D,KAAhBgE,EAAA5G,EAAA,GAAOd,EAAAc,EAAA,GACD4G,QAEXpD,EAAO,SAACtE,GL+dL,MK9dF,UAACkG,GL+dG,MK9dHlB,GAAS,WACR,GAAAtB,ELgeI,OKheJA,GAAO,KACPoB,EAAS,WACR,MAAW,QAARpB,GACFA,GAAW,MAAAwC,EAAAxC,KAAcwC,EAAQ5E,EAAK4E,IAAKxC,OACpC1D,GAEA0D,UAEZwB,EAAM,SAAC9I,GLoeJ,MKneF,UAAC8J,GLoeG,MKneHlB,GAAS,WACR,GAAAtB,ELqeI,OKreJA,IAAW,MAAAwC,EAAAxC,KAAcwC,EAAQ5E,EAAK4E,IAAKxC,OAC3CoB,EAAS,WACR,GAAA9E,EAAA,QAAIA,EAAI0D,OAAa0B,EAAShJ,EAAE4D,GAAQoF,QAE5CV,EAAS,SAAC8C,GL6eP,MK5eF,UAACtB,GL6eG,MK5eHlB,GAAS,WACR,GAAAtB,EL8eI,OK9eJA,IAAW,MAAAwC,EAAAxC,KAAcwC,EAAQ5E,EAAK4E,IAAKxC,OAC3CoB,EAAS,WACH,IAAL,GAAA9E,IAAWwH,EAAOxH,EAAI0D,MAAY1D,IAAOoF,IACzC,MAAOpF,SAEX4F,EAAQ,SAACxJ,EAAGP,GLofT,MKnfF,UAACqK,GLofG,MKnfHlB,GAAS,WACR,GAAAtB,ELqfI,OKrfJA,IAAW,MAAAwC,EAAAxC,KAAcwC,EAAQ5E,EAAK4E,IAAKxC,OAC3CoB,EAAS,WACR,GAAA6C,GAAA3H,CAEA,OAFA2H,GAAM9L,EACNA,GAAQmE,EAAI0D,OAAa0B,EAAShJ,EAAEP,EAAGmE,GAAQoF,EACxCuC,QAEX9B,EAAS,SAACjK,GLyfP,MKxfF,UAACsK,GLyfG,MKxfHlB,GAAS,WACR,GAAA4C,GAAAlE,CL2fI,OK3fJA,IAAW,MAAAwC,EAAAxC,KAAcwC,EAAQ5E,EAAK4E,IAAKxC,OAC3CkE,KACA9C,EAAS,WACR,GAAA9E,EAAA,QAAeA,EAAI0D,OAAW0B,EAAvBA,GACPwC,EAAItK,KAAK0C,GACO4H,EAAIlL,OAASd,GAA7BgM,EAAIC,MAAM,GACHD,EAAIjJ,MAAA,UAEfgH,EAAU,SAACO,GACV,GAAAhG,EACA,OADAA,GAAS,MAAAgG,EAAAxC,KAAcuB,EAAKiB,GAAQ4B,KAAK5B,GAClC5E,EAAKpB,EAAIyF,YAIjBtB,EAAS,WACR,GAAA0D,ELkgBE,OKngBOA,GAAA,GAAAxH,UAAA7D,OAAAiC,EAAAlC,KAAA8D,UAAA,MACTyE,EAAS,WACR,GAAAgD,GAAAtE,CLqgBG,OKrgBHA,IAAW,MAAAqE,EAAA,GAAArE,KAAkBqE,EAAI,GAAQzG,EAAKyG,EAAI,KAAKrE,OACvDsE,EAAgB,EAChBlD,EAAS,WACR,GAAA9E,EAAA,QAAIA,EAAI0D,OAAa0B,EACbpF,IACCgI,EAAkBD,EAAIrL,QAC9BgH,GAAW,MAAAqE,EAAAC,GAAAtE,KAA8BqE,EAAIC,GAAoB1G,EAAKyG,EAAIC,KAAiBtE,UAGpF0B,OAEXtE,EAAoB,WACnB,GAAA2G,GAAAzB,EAAAC,CAyBA,OAzBAwB,GAAW,SAACvH,GACX,GAAAW,GAAAoH,EAAAjI,CAAA,KAAAa,EAAA,EAAAoH,EAAA/H,EAAAxD,OAAAuL,EAAApH,EAAAA,IACC,GLygBIb,EAAIE,EAAIW,GKzgBGb,IAAKoF,EAApB,OAAO,CACR,QAAO,GAERY,EAAM,WACL,GAAA+B,EL+gBG,OKhhBGA,GAAA,GAAAxH,UAAA7D,OAAAiC,EAAAlC,KAAA8D,UAAA,MACNyE,EAAS,WACR,GAAAkD,GAAAhC,CLyhBI,OKzhBJgC,GAAA,WLihBM,GAAIrH,GAAGoH,EAAMrH,CAEb,KKnhBGA,KAAAC,EAAA,EAAAoH,EAAAF,EAAArL,OAAAuL,EAAApH,EAAAA,ILohBDqF,EAAK6B,EAAIlH,GKphBRD,EAAAtD,MAAI,MAAA4I,EAAAxC,KAAcwC,EAAQ5E,EAAK4E,IAAKxC,OLuhBvC,OAAO9C,MKthBbkE,EAAS,WACR,GAAApB,GAAAyC,CACA,OADAA,GAAA,WL0hBO,GAAItF,GAAGoH,EAAMrH,CAEb,KK5hBCA,KAAAC,EAAA,EAAAoH,EAAAC,EAAAxL,OAAAuL,EAAApH,EAAAA,IL6hBC6C,EAAOwE,EAAMrH,GK7hBdD,EAAAtD,KAAAoG,ILgiBD,OAAO9C,MK/hBX6G,EAAStB,GACJf,EAEAe,OAEXF,EAAU,SAAC7J,GLqiBP,MKriBa,YAChB,GAAA2L,ELuiBK,OKxiBYA,GAAA,GAAAxH,UAAA7D,OAAAiC,EAAAlC,KAAA8D,UAAA,MACjByE,EAAS,WACR,GAAAkD,GAAAhC,CLijBM,OKjjBNgC,GAAA,WLyiBQ,GAAIrH,GAAGoH,EAAMrH,CAEb,KK3iBCA,KAAAC,EAAA,EAAAoH,EAAAF,EAAArL,OAAAuL,EAAApH,EAAAA,IL4iBCqF,EAAK6B,EAAIlH,GK5iBVD,EAAAtD,MAAI,MAAA4I,EAAAxC,KAAcwC,EAAQ5E,EAAK4E,IAAKxC,OL+iBrC,OAAO9C,MK9iBfkE,EAAS,WACR,GAAApB,GAAAyC,CACA,OADAA,GAAA,WLkjBS,GAAItF,GAAGoH,EAAMrH,CAEb,KKpjBDA,KAAAC,EAAA,EAAAoH,EAAAC,EAAAxL,OAAAuL,EAAApH,EAAAA,ILqjBG6C,EAAOwE,EAAMrH,GKrjBhBD,EAAAtD,KAAAoG,ILwjBC,OAAO9C,MKvjBb6G,EAAStB,GACJf,EAEAhJ,EAAA2E,MAAA,KAAEoF,UAELH,IAAAA,EAAKC,QAAAA,MA1BbD,EAAAlF,EAAAkF,IAAKC,EAAAnF,EAAAmF,QA4BN7B,EAAc,WACb,GAAA+D,GAAAC,CLylBE,OKzlBFA,GAAa,SAACC,GACb,GAAAC,ELmkBG,OKnkBHA,GAAcD,EAAO3L,OAAS,EAC9B,SAAC6L,GACA,GAAApM,EACa,KADbA,EAAImM,MACeC,EAAMpM,GAAKkM,EAAOlM,IAAW,GAALA,IAA3CoM,EAAIpM,KAAO,CACX,OAAOoM,KAETJ,EAAe,SAACK,GACf,GAAAxL,ELwkBG,OKxkBHA,GAAMwL,EAAM9L,OACZ,SAAC6L,GACA,GAAApM,GAAA0E,EAAAyG,EAAA1G,CLykBI,KKzkBHA,KAA0BzE,EAAA0E,EAAA,EAAAyG,EAAAtK,EAAAsK,GAAA,EAAAA,EAAAzG,EAAAA,EAAAyG,EAAAnL,EAAAmL,GAAA,IAAAzG,IAAAA,EAA1BD,EAAAtD,KAAAkL,EAAMrM,GAAGoM,EAAIpM,IL4kBV,OAAOyE,KK1kBb,WACC,GAAAmH,EL+kBG,OKhlBHA,GAAA,GAAAxH,UAAA7D,OAAAiC,EAAAlC,KAAA8D,UAAA,MACAyE,EAAS,WACR,GAAAyD,GAAAtM,EAAAuM,EAAA7H,EAAA7D,EAAAiL,EAAAI,EAAAM,EAAAzC,CAEA,KAFA6B,EAAA,WLilBM,GAAIlH,GAAGoH,EAAMrH,CAEb,KKnlBCA,KAAAC,EAAA,EAAAoH,EAAAF,EAAArL,OAAAuL,EAAApH,EAAAA,ILolBCqF,EAAK6B,EAAIlH,GKplBVD,EAAAtD,KAAA2H,EAAKiB,GLulBN,OAAOtF,MKtlBbyH,EAAA,WLylBM,GAAIxH,GAAGyG,EAAM1G,CAEb,KK3lBIA,KAAuBzE,EAAA0E,EAAA,EAAAyG,EAAAS,EAAArL,OAAA4K,GAAA,EAAAA,EAAAzG,EAAAA,EAAAyG,EAAAnL,EAAAmL,GAAA,IAAAzG,IAAAA,EAAvBD,EAAAtD,KAAAyK,EAAI5L,GAAGO,OL8lBX,OAAOkE,MK7lBbC,EAAA,EAAAoH,EAAAI,EAAA3L,OAAAuL,EAAApH,EAAAA,IAAC,GLgmBK7D,EAAMqL,EAAOxH,GKhmBG,IAAP7D,EAAd,MAAOoI,EL+mBJ,OK9mBJsD,GAAMN,EAAWC,GACjBI,EAAYN,EAAaJ,GACzBY,EAAA,WLqmBM,GAAI5M,GAAGuL,EAAM1G,CAEb,KKvmBDA,KAAWzE,EAAAJ,EAAA,EAAAuL,EAAAS,EAAArL,OAAA4K,GAAA,EAAAA,EAAAvL,EAAAA,EAAAuL,EAAAnL,EAAAmL,GAAA,IAAAvL,IAAAA,EAAX6E,EAAAtD,KAAA,EL0mBC,OAAOsD,MKzmBbkE,EAAS,WACR,GAAAjJ,EAAA,OAAG8M,GAAE,GAAKN,EAAO,IAASxM,EAAI4M,EAAUE,GAAGD,EAAIC,GAAG9M,GAAQuJ,UAI9DH,EAAO,SAACiB,GACP,GAAA7F,GAAAO,EAAAZ,CAAA,IAAG,MAAAkG,EAAAxC,KAAH,CLunBI,IKtnBHrD,EAAK6F,EAAGxC,OACL9C,MAAOZ,EAAIK,OAAW+E,GAAxBxE,EAAAtD,KAAA0C,ELwnBE,OAAOY,GKvnBN,GAAGsF,YAAczF,OLynBlB,MKxnBHyF,EAEA,MAAM7J,OAAM,+CAEd0I,EAAO,SAACmB,GACP,GAAAxC,GAAA7H,EAAAyL,EAAAtH,CAAA,IAAO,MAAAkG,EAAAxC,KL2nBH,MAAqC,QAA7B4D,EAAOpB,EAAGA,EAAGxJ,OAAS,IAAc4K,EK3nBPlC,CAGlC,KAFN1B,GAAW,MAAAwC,EAAAxC,KAAcwC,EAAQ5E,EAAK4E,IAAKxC,OAC3C7H,EAAIuJ,GACSpF,EAAI0D,OAAa0B,GAA9BvJ,EAAImE,CACJ,OAAOnE,IAETa,EAAS,SAACwJ,GACT,GAAAxC,GAAA7H,EAAAmE,CAAA,IAAO,MAAAkG,EAAAxC,KLioBH,MKjoBiBwC,GAAGxJ,MAGnB,KAFJgH,GAAW,MAAAwC,EAAAxC,KAAcwC,EAAQ5E,EAAK4E,IAAKxC,OAC3C7H,EAAI,GACOmE,EAAI0D,OAAa0B,KAA5BvJ,CACA,OAAOA,IAET8I,EAAQ,SAACvI,EAAGP,GLsoBT,MKroBF,UAACqK,GACA,GAAAxC,GAAA1D,CACY,KADZ0D,GAAW,MAAAwC,EAAAxC,KAAcwC,EAAQ5E,EAAK4E,IAAKxC,QACxB1D,EAAI0D,OAAa0B,GAApCvJ,EAAIO,EAAEP,EAAGmE,EACT,OAAOnE,KAETkD,EAAO,SAAC6J,GL0oBL,MKzoBF,UAAC1C,GACA,GAAA7F,GAAAqD,EAAA7H,CACA,IADA6H,GAAW,MAAAwC,EAAAxC,KAAcwC,EAAQ5E,EAAK4E,IAAKxC,QAC3B7H,EAAI6H,OAAW0B,EAA/B,MAAO,KACP,OAAO/E,EAAKqD,OAAa0B,GACxBvJ,EAAO+M,EAAOvI,EAAIxE,GAAQwE,EAAQxE,CACnC,OAAOA,KAEToI,EAAM,SAAC7H,GLopBJ,MKnpBoC,kBAAfA,KAAvBA,EAAI,SAAE4D,GLgpBA,MKhpBMA,KAAK5D,IACjB,SAAC8J,GACA,GAAAxC,GAAA1D,CACA,KADA0D,GAAW,MAAAwC,EAAAxC,KAAcwC,EAAQ5E,EAAK4E,IAAKxC,QACpC1D,EAAI0D,OAAa0B,GACvB,IAAgBhJ,EAAM4D,GAAtB,OAAO,CACR,QAAO,IAETkE,EAAM,SAAC9H,GACN,GAAAyM,EL2pBE,OK3pBFA,GAAU5E,EAAI,SAACjE,GLypBX,OKzpBiB5D,EAAM4D,KAC3B,SAACkG,GL2pBG,OK3pBS2C,EAAQ3C,KAEtB/B,EAAM,WL6pBH,MK7pBMA,IACTA,EAAItB,SAAW,WL+pBZ,MK/pBe,iBAElB+B,EAAU,SAACsB,EAAI4C,EAAUC,GACxB,GAAArF,GAAA1D,CACA,KADA0D,GAAW,MAAAwC,EAAAxC,KAAcwC,EAAQ5E,EAAK4E,IAAKxC,QACpC1D,EAAI0D,OAAa0B,GACd0D,EAAS9I,EAAG+I,KAAU5E,ILoqB9B,MKnqBF4E,IAEDnC,OAAOoC,iBAAiBpE,GACvBqE,SACCC,UAAU,EACVC,cAAc,EACdC,YAAY,EACZhD,MAAOjC,MAIRiB,IAAAA,EAAKJ,SAAAA,EAAUF,SAAAA,EAGfK,SAAAA,EAAUK,MAAAA,EAAOF,OAAAA,EAGjBhE,KAAAA,EAAMmD,UAAAA,EAAWiB,OAAAA,EAAQb,SAAAA,EAAUU,WAAAA,EAAYE,kBAAAA,EAAmBJ,gBAAAA,EAGlEf,KAAAA,EAAMY,IAAAA,EAAKR,OAAAA,EAAQoB,KAAAA,EAAMC,UAAAA,EAAWxB,KAAAA,EAAMC,UAAAA,EAAWoB,MAAAA,EAAOC,OAAAA,EAAQF,QAAAA,EAGpEtB,OAAAA,EAAQ2B,IAAAA,EAAKC,QAAAA,EAAS7B,SAAAA,EAGtBa,KAAAA,EAAMF,KAAAA,EAAMrI,OAAAA,EAAQiI,MAAAA,EAAO5F,KAAAA,EAAMkF,IAAAA,EAAKC,IAAAA,EAAKU,QAAAA,IAjX7ChI,EAoXOJ,QAAUkC,SL2rBX2K,GAAG,SAASnN,EAAQU,GM/iC1B,GAAA8B,EAAAA,GAAc,WACb,GAAA4K,GAAAC,CAYA,OAZAA,GAAc,SAACC,GNujCZ,MAHwB,OAApBA,IMpjCQA,EAAmBhH,KACjC,SAACF,GACA,GAAA5B,GAAAiI,CNujCG,OMvjCH,YNwjCK,GAAI/H,EMxjCRA,KN0jCI,KM1jCJF,IAAA4B,GN2jCMqG,EAAIrG,EAAI5B,GM3jCdE,EAAAtD,KAAGmM,mBAAmB/I,GAAG,IAAG+I,mBAAmBD,EAAiBb,IN8jC5D,OAAO/H,MM9jC0E8I,KAAK,OAE7FJ,EAAc,SAACK,GNskCZ,MAL0B,OAAtBA,IMjkCQA,EAAqB,SAAE7N,GNmkC/B,MMnkCqCA,KAC3C,SAAC0G,GACA,GAAApC,GAAAjE,EAAA0E,EAAAH,EAAA1D,EAAA8D,EAAAwG,EAAAsC,EAAA9N,EAAA6M,CACA,KADAvI,KACAkH,EAAA,OAAAxG,EAAA0B,EAAAqH,MAAA,mBAAA/I,KAAA3E,EAAA,EAAAa,EAAAsK,EAAA5K,OAAAM,EAAAb,EAAAA,INwkCKL,EAAIwL,EAAKnL,GMvkCbyN,EAAc9N,EAAE+N,MAAM,gBAAtBhJ,EAAA+I,EAAAlN,OAAA,EAAMgE,EAAAkJ,EAAA/I,KAAG8H,EAAAiB,EAAA/I,KACTT,EAAE0J,mBAAmBpJ,IAAOiJ,EAAmBG,mBAAmBnB,GACnE,OAAOvI,MAGRmJ,YAAAA,EAAaD,YAAAA,IAdf1M,EAiBOJ,QAAUkC,SNglCXqL,GAAG,SAAS7N,EAAQU,IAC1B,SAAWO,GOlmCX,GAAAuB,GAAAC,KAAAA,KAAAD,GAAc,WACb,GAAAsL,GAAAC,EAAAC,EAAApC,EAAAqC,EAAAC,EAAA3I,EAAA4I,EAAAC,EAAAxJ,EAAAyJ,EAAAC,EAAAC,CA0HA,OA1HAJ,GAAmB,SAACjO,GACnB,GAAAsO,EAEA,OAFAA,GAAOtO,EAAEyG,WAAW8H,QAAQ,uDAAwD,MACtCD,EAAKhO,QAAU,MAA7DgO,EAAOA,EAAKC,QAAQ,kBAAmB,KAChCD,GAERF,EAAW,WP2mCR,OO1mCF,GAACI,OAAUC,WAEZP,EAAS,WACR,GAAAQ,GAAAC,EAAApD,EAAAqD,EAAAC,CAoDA,OApDAH,GAAS,WAER,GAAAI,GAAAC,CAQA,OARAD,GAAa,mBAAA/N,IAAA,OAAAA,IAAaA,EAAYO,IAAI0N,oBAC1CD,GACCE,KAAM,SACNC,IAAK,UACLC,MAAO,UACPC,OAAQ,UACRC,KAAM,UACNC,UAAW,WACTR,EAGF,SAACS,GPinCK,MOhnCL,UAAC7P,GPinCM,MOjnCA,GAAGqP,EAAQQ,GAAS7P,EAAI,SAHhC,WP6mCM,MO7mCK,UAACA,GP8mCJ,MO9mCUA,QAKpBmP,EAAe,WACd,GAAAW,GAAAC,CPkoCG,OOloCHD,IACCE,IAAK,YACLC,EAAK,QACLC,EAAK,MACLC,EAAK,UACNJ,EAAU,SAACK,GACV,MAAS,QAANA,EAAiB,IAASA,EAAG,GAAGC,eACpC,SAACD,GACA,GAAAE,EP6nCI,OO7nCJA,GAAOP,EAAQK,GACfpB,EAAIc,EAAaQ,IAAOA,OAE1BpB,KACAD,EAAU,SAACmB,GACV,GAAAG,EP+nCG,OO/nCHA,GAAS,GAAGvB,EAAI,aAAa,KAAMG,EAAUiB,GAC7C,WACC,GAAArI,GAAAyI,EAAAC,EAAA7B,EAAAtO,EAAAD,EAAAa,EAAAwP,EAAAC,CACA,KAFA5I,EAAA,GAAAtD,UAAA7D,OAAAiC,EAAAlC,KAAA8D,UAAA,MACA+L,KACAnQ,EAAA,EAAAa,EAAA6G,EAAAnH,OAAAM,EAAAb,EAAAA,IPioCMC,EAAIyH,EAAK1H,GOhoCC,kBAAZC,IACFsO,EAAOL,EAAiBjO,GACxBoQ,EAAahC,IACb+B,EAAcnQ,IACdqQ,EAAYjC,IAAagC,EACzBF,EAAKhP,KAAQ+O,EAAO,IAAGvB,EAAI,SAASJ,GAAK,IAAGI,EAAI,aAAa,OAAS1O,KACvBqQ,EAAY,GAA3DH,EAAKhP,KAAKwN,EAAI,UAAU,IAAI2B,EAAU,SAEtCH,EAAKhP,KAAK,GAAG+O,EAAUjQ,EAIzB,OAHAsQ,SAAQR,GAARnL,MAAA2L,QAAYJ,GACZtB,EAAU1N,KAAKgP,GACMtB,EAAUtO,QAAU,IAAzCsO,EAAUnD,QACH,OACTF,EAAMoD,EAAQ,OACdpD,EAAIqD,UAAYA,EAChBrD,EAAIgF,KAAO5B,EAAQ,QACnBpD,EAAIiF,KAAO7B,EAAQ,QACnBpD,EAAIkF,MAAQlF,EAAImF,IAAM/B,EAAQ,SACvBpD,KAERqC,EAAS,SAAC5N,EAAG2Q,GACZ,GAAArR,GAAAoF,CAAuB1E,aAAiB4Q,YAAxClM,GAAYiM,EAAK3Q,GAAhBA,EAAA0E,EAAA,GAAGiM,EAAAjM,EAAA,GACJ,KACC,IAAgE1E,IAAhE,KAAMC,OAAM,cAAY,MAAA0Q,EAACA,EAAM1C,EAAiBjO,IAAG,YADpD,MAAA6Q,GAGC,KADKvR,GAAAuR,EACC5Q,MAAM,cAAY,MAAA0Q,EAACA,EAAM1C,EAAiBjO,IAAG,cAAaV,KAElEuO,EAAW,SAAC1N,EAAGV,GACd,GAAAH,GAAAwR,EAAAC,CAAA,KACCD,EAAK3Q,IACL4Q,EAAKtR,IAFN,MAAAoR,GAIC,KADKvR,GAAAuR,EACC5Q,MAAM,oBAAoBgO,EAAiB9N,GAAG,QAAO8N,EAAiBxO,GAAG,cAAaH,GAC7F,GAAGwR,IAAQC,EACV,KAAM9Q,OAAM,sBAAuBgO,EAAiB9N,GAAG,OAAM2Q,EAAG,UAAU7C,EAAiBxO,GAAG,OAAMsR,EAAG,MAEzGjD,EAAa,SAAC9N,GPqpCX,MOrpCiB,UAACG,EAAGV,GACvB,GAAAH,GAAA0R,EAAAC,EAAAH,EAAAC,CAAA,KACCD,EAAK3Q,IACL4Q,EAAKtR,IACLuR,EAAMhR,EAAE8Q,GACRG,EAAMjR,EAAE+Q,GAJT,MAAAF,GAMC,KADKvR,GAAAuR,EACC5Q,MAAM,2BAA2BgO,EAAiB9N,GAAG,QAAO8N,EAAiBxO,GAAG,cAAaH,GACpG,GAAG0R,IAASC,EACX,KAAMhR,OAAM,sBAAuBgO,EAAiB9N,GAAG,OAAM2Q,EAAG,kBAAiBE,EAAI,UAAU/C,EAAiBxO,GAAG,OAAMsR,EAAG,kBAAiBE,EAAI,OAEnJ9C,EAAW,SAACnO,GP2pCT,MO1pCF,YACC,GAAAyH,EP6pCG,OO9pCHA,GAAA,GAAAtD,UAAA7D,OAAAiC,EAAAlC,KAAA8D,UAAA,MACAsD,EAAOsG,EAAStG,GAChBzH,EAAA2E,MAAA,KAAE8C,KAEJuG,EAAO,SAACkD,GACP,GAAAlN,GAAAjE,EAAAuE,EAAA1D,EAAA8D,EAAA6H,CACA,KADAvI,KACAjE,EAAA,EAAAa,EAAAsQ,EAAA5Q,OAAAM,EAAAb,EAAAA,IAAA2E,EAAAwM,EAAAnR,GAAcuE,EAAAI,EAAA,GAAG6H,EAAA7H,EAAA,GAAjBV,EAAEM,GAAKiI,CACP,OAAOvI,IAERU,EAAsB,WACrB,GAAAyM,EP0rCE,OO1rCFA,GAAK,SAACC,EAAMC,GACX,GAAA/M,GAAA7E,EAAA8M,CAAA,IAAsB,IAAP8E,GAAgB,MAAAD,GAAyB,gBAAhBA,GAAxC,MAAOA,EACP,IAAGA,YAAgB/M,OAClB5E,EAAA,WPsqCM,GAAIM,GAAGa,EAAK4D,CAEZ,KOxqCDA,KAAAzE,EAAA,EAAAa,EAAAwQ,EAAA9Q,OAAAM,EAAAb,EAAAA,IPyqCGwM,EAAI6E,EAAKrR,GOzqCZyE,EAAAtD,KAAAiQ,EAAG5E,EAAG8E,EAAI,GP4qCT,OAAO7M,UO7qCd,CAGC/E,IACA,KAAA6E,IAAA8M,GP8qCM7E,EAAI6E,EAAK9M,GO9qCf7E,EAAE6E,GAAK6M,EAAG5E,EAAG8E,EAAI,GAClB,MAAO5R,KACRiM,KAAM,SAACxF,EAAKoL,GPurCN,MAHa,OAATA,IOprCEA,EAAM,GAAMH,EAAGjL,EAAKoL,IAChCvD,SAAU,SAAC7H,EAAKoL,GP4rCV,MAHa,OAATA,IOzrCMA,EAAMhH,KAAa6G,EAAGjL,EAAKoL,QAV3C5F,EAAAhH,EAAAgH,KAAMqC,EAAArJ,EAAAqJ,SAYP1I,EAAS,SAACgB,GP+rCP,MO/rCgB,YAClB,GAAArC,GAAAuN,EAAAxR,EAAAuE,EAAA1D,EAAA2L,CAAA,KADmBgF,EAAA,GAAApN,UAAA7D,OAAAiC,EAAAlC,KAAA8D,UAAA,MACnBpE,EAAA,EAAAa,EAAA2Q,EAAAjR,OAAAM,EAAAb,EAAAA,IPmsCM,GADAiE,EAAIuN,EAASxR,GOlsCI,MAAAiE,EACtB,IAAAM,IAAAN,GPosCSuI,EAAIvI,EAAEM,GACS,MAAX+B,EAAK/B,KOrsClB+B,EAAK/B,GAAMiI,EACZ,OAAOlG,KAERgI,EAAS,SAAChI,GP4sCP,MO5sCgB,YAClB,GAAArC,GAAAjE,EAAAuE,EAAA1D,EAAA4Q,EAAAjF,CAAA,KADmBiF,EAAA,GAAArN,UAAA7D,OAAAiC,EAAAlC,KAAA8D,UAAA,MACnBpE,EAAA,EAAAa,EAAA4Q,EAAAlR,OAAAM,EAAAb,EAAAA,IPgtCM,GADAiE,EAAIwN,EAAQzR,GO/sCI,MAAAiE,EACrB,IAAAM,IAAAN,GPitCSuI,EAAIvI,EAAEM,GOjtCf+B,EAAK/B,GAAKiI,CACX,OAAOlG,MAGP6H,IAAAA,EAAKN,OAAAA,EAAQC,SAAAA,EAAUC,WAAAA,EAAYE,KAAAA,EAAMtC,KAAAA,EAAMqC,SAAAA,EAAUI,SAAAA,EAAU9I,OAAAA,EAAQgJ,OAAAA,IA5H7E7N,EA+HOJ,QAAUkC,MPouCdjC,KAAKuE,KAAK9E,EAAQ,eAElB2R,SAAW,SAAS","file":"coffee-mate.coffee.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    draining = true;\n    var currentQueue;\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        var i = -1;\n        while (++i < len) {\n            currentQueue[i]();\n        }\n        len = queue.length;\n    }\n    draining = false;\n}\nprocess.nextTick = function (fun) {\n    queue.push(fun);\n    if (!draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n",null,"this_module = ({best}) ->\n\tflip = (f) ->\n\t\t(x) -> (y) -> f(y)(x)\n\n\tseek = (arr) ->\n\t\t(i) -> arr[i]\n\n\tpluck = (attr) ->\n\t\t(d) -> d[attr]\n\n\tequal = (it) ->\n\t\t(x) -> x == it\n\n\tnotEqual = (it) ->\n\t\t(x) -> x != it\n\n\tlessThan = (it) ->\n\t\t(x) -> x < it\n\n\tgreaterThan = (it) ->\n\t\t(x) -> x > it\n\n\tlessEqual = (it) ->\n\t\t(x) -> x <= it\n\n\tgreaterEqual = (it) ->\n\t\t(x) -> x >= it\n\n\tabs = Math.abs\n\tfloor = Math.floor\n\tceil = Math.ceil\n\n\taccept_multi_or_array = (f) ->\n\t\t(arr...) ->\n\t\t\tf(if arr.length == 1 and arr.first instanceof Array then arr.first else arr)\n\n\tsum = accept_multi_or_array (arr) ->\n\t\tarr = arr.first if arr.length == 1 and arr.first instanceof Array\n\t\tr = 0\n\t\tr += x for x in arr\n\t\tr\n\n\tmax = accept_multi_or_array (arr) ->\n\t\tbest((a, b) -> a > b) arr\n\n\tmin = accept_multi_or_array (arr) ->\n\t\tbest((a, b) -> a < b) arr\n\n\tmax_index = accept_multi_or_array (arr) ->\n\t\tbest((i, j) -> arr[i] > arr[j]) [0...arr.length]\n\n\tmin_index = accept_multi_or_array (arr) ->\n\t\tbest((i, j) -> arr[i] < arr[j]) [0...arr.length]\n\n\treturn {\n\t\tflip, seek, pluck,\n\t\tequal, notEqual, lessThan, lessEqual, greaterThan, greaterEqual,\n\t\tabs, floor, ceil, sum, max, min, max_index, min_index,\n\t}\n\nmodule.exports = this_module\n\tbest: require('./lazy').best\n\n","utils = require './utils'\nbasics = require './basics'\nlazy = require './lazy'\nfunny = require './funny'\nconvertors = require './convertors'\nurl_helpers = require './url-helpers'\n\nmodule.exports = utils.extend({}) utils, basics, lazy, funny, convertors, url_helpers\n\n","this_module = () ->\n\tint = (s, base) -> if typeof(s) == 'string' then (r = parseInt(s, base); unless s.slice? and r == parseInt(s.slice(0,-1), base) then r else null) else parseInt(0 + s)\n\tfloat = (s) -> if /^-?[0-9]*(\\.[0-9]+)?([eE]-?[0-9]+)?$/.test(s) then parseFloat(s) else null\n\tstr = (x, base) -> x.toString(base)\n\tbool = (x) -> if x in [true, false] then x else null\n\thex = (x) -> x.toString(16)\n\tord = (c) -> c.charCodeAt()\n\tchr = (x) -> String.fromCharCode(x)\n\tjson = (it, indent) -> JSON.stringify(it, null, indent)\n\tobj = (s) -> JSON.parse(s)\n\n\treturn {\n\t\tint, float, bool, str, hex, ord, chr, json, obj,\n\t}\n\nmodule.exports = this_module()\n\n","this_module = () ->\n\tchurch = (n) -> #the nth church number\n\t\titer = (f, n, r) ->\n\t\t\tif n == 0 then r else iter(f, n - 1, f(r))\n\t\t(f) ->\n\t\t\t(x) -> iter(f, n + 0, x)\n\n\tY = (f) -> #the Y combinator\n\t\t((x) -> (x x)) ((x) -> (f ((y) -> ((x x) y))))\n\n\tmemoize = (f, get_key = ((args...) -> json(args))) ->\n\t\tcache = {}\n\t\t(args...) ->\n\t\t\tkey = get_key(args...)\n\t\t\tcached = cache[key]\n\t\t\tif cached?\n\t\t\t\tcached\n\t\t\telse\n\t\t\t\tr = f(args...)\n\t\t\t\tcache[key] = r\n\t\t\t\tr\n\n\treturn {\n\t\tchurch, Y, memoize,\n\t}\n\nmodule.exports = this_module()\n\n","this_module = () ->\n\n\t# LazyList definition: nil, lazylist, iterator,\n\n\tlazylist = (xs) -> # construct a lazylist from a function.\n\t\txs.iter = -> xs()\n\t\txs.toString = -> \"LazyList\"\n\t\treturn xs\n\n\tnil = lazylist -> nil # xs is empty <==> xs is nil or xs() is nil or xs()() is nil... <==> last xs is nil\n\tnil.toString = -> 'nil'\n\n\titerator = (it) -> # construct an iterator(which is a function with status) from a function.\n\t\tit.next = ->\n\t\t\tr = it()\n\t\t\t{value: r, done: r == nil}\n\t\tit.toString = -> \"Iterator\"\n\t\treturn it\n\n\t# lazylist constants: naturals, range, primes,\n\n\tnaturals =\n\t\tlazylist ->\n\t\t\ti = -1\n\t\t\titerator ->\n\t\t\t\t++i\n\n\trange = (args...) ->\n\t\tif args.length == 0\n\t\t\tnaturals\n\t\telse if args.length == 1\n\t\t\tlazylist ->\n\t\t\t\t[stop] = args\n\t\t\t\ti = -1\n\t\t\t\titerator ->\n\t\t\t\t\tif ++i < stop then i else nil\n\t\telse if args.length == 2\n\t\t\tlazylist ->\n\t\t\t\t[start, stop] = args\n\t\t\t\tif start < stop\n\t\t\t\t\ti = start - 1\n\t\t\t\t\titerator ->\n\t\t\t\t\t\tif ++i < stop then i else nil\n\t\t\t\telse\n\t\t\t\t\ti = start + 1\n\t\t\t\t\titerator ->\n\t\t\t\t\t\tif --i > stop then i else nil\n\t\telse\n\t\t\tlazylist ->\n\t\t\t\t[start, stop, step] = args\n\t\t\t\tthrow 'ERR IN range(): YOU ARE CREATING AN UNLIMITTED RANGE' if stop != start and (stop - start) * step < 0\n\t\t\t\ti = start - step\n\t\t\t\tif start < stop\n\t\t\t\t\titerator ->\n\t\t\t\t\t\tif (i += step) < stop then i else nil\n\t\t\t\telse\n\t\t\t\t\titerator ->\n\t\t\t\t\t\tif (i += step) > stop then i else nil\n\n\tprimes = lazylist -> do\n\t\tfilter((x) -> all((p) -> x % p != 0) takeWhile((p) -> p * p <= x) range(2, Infinity)) range(2, Infinity)\n\n\t# lazylist producers: lazy, enumerate, generate, random_gen, ranged_random_gen, permutation_gen,\n\n\tlazy = (arr) -> #make a lazylist from array or function\n\t\tif typeof arr is 'function'\n\t\t\tlazylist arr\n\t\telse #maybe Array or String\n\t\t\tlazylist ->\n\t\t\t\ti = -1\n\t\t\t\titerator ->\n\t\t\t\t\ti += 1\n\t\t\t\t\tif i < arr.length\n\t\t\t\t\t\tarr[i]\n\t\t\t\t\telse\n\t\t\t\t\t\tnil\n\n\tenumerate = (it) -> # iterator with index(with key for object)\n\t\tif it.iter? or it instanceof Array\n\t\t\tzip(naturals, it)\n\t\telse\n\t\t\tlazylist ->\n\t\t\t\tkeys = Object.keys(it)\n\t\t\t\ti = -1\n\t\t\t\titerator ->\n\t\t\t\t\tif ++i < keys.length then [(k = keys[i]), it[k]] else nil\n\n\trepeat = (it) -> # repeat it\n\t\tlazylist ->\n\t\t\titerator ->\n\t\t\t\tit\n\n\tgenerate = (init, next) -> #function next should not change it's argument\n\t\tlazylist ->\n\t\t\tstatus = init\n\t\t\titerator ->\n\t\t\t\tlast = status\n\t\t\t\tstatus = next status\n\t\t\t\treturn last\n\n\trandom_gen = do ->\n\t\thash = (x) ->\n\t\t\tx = Math.sin(x) * 1e4\n\t\t\tx - Math.floor(x)\n\t\t(opts) ->\n\t\t\tseed = opts?.seed ? Math.random()\n\t\t\tgenerate seed, hash\n\n\tranged_random_gen = (range, opts) ->\n\t\tseed = opts?.seed ? Math.random()\n\t\tmap((x) -> Math.floor(x * range)) random_gen(seed: seed)\n\n\tpermutation_gen = do ->\n\t\tnext_permutation = (x) ->\n\t\t\tx = x[...]\n\t\t\tl = x.length - 1\n\t\t\t--l while l >= 1 and x[l] <= x[l - 1]\n\n\t\t\tif (l != 0)\n\t\t\t\tm = x.length - 1\n\t\t\t\t--m while m > l - 1 and x[m] <= x[l - 1]\n\t\t\t\t[x[m], x[l - 1]] = [x[l - 1], x[m]]\n\n\t\t\tr = x.length - 1\n\t\t\twhile(l < r)\n\t\t\t\t[x[l], x[r]] = [x[r], x[l]]\n\t\t\t\t++l\n\t\t\t\t--r\n\t\t\treturn x\n\n\t\t(arr) ->\n\t\t\tif arr.length == 0 then nil else\n\t\t\t\tconcat [arr[...]], takeWhile((ls) -> json(ls) != json(arr)) drop(1) generate arr, next_permutation\n\n\t# lazylist decorators: take, takeWhile, drop, dropWhile, cons, map, filter, scanl, streak, reverse,\n\n\ttake = (n) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if xs.iter? then xs else lazy(xs)).iter()\n\t\t\t\tc = -1\n\t\t\t\titerator ->\n\t\t\t\t\tif ++c < n then iter() else nil\n\n\ttakeWhile = (ok) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if xs.iter? then xs else lazy(xs)).iter()\n\t\t\t\titerator ->\n\t\t\t\t\tif (x = iter()) isnt nil and ok(x) then x else nil\n\n\tdrop = (n) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if xs.iter? then xs else lazy(xs)).iter()\n\t\t\t\tfinished = false\n\t\t\t\t(finished or= (iter() is nil); break if finished) for i in [0...n]\n\t\t\t\tif finished then (-> nil) else iter\n\n\tdropWhile = (ok) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if xs.iter? then xs else lazy(xs)).iter()\n\t\t\t\tnull while ok(x = iter()) and x isnt nil\n\t\t\t\titerator ->\n\t\t\t\t\t[prevx, x] = [x, iter()]\n\t\t\t\t\treturn prevx\n\n\tcons = (x) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = null\n\t\t\t\titerator ->\n\t\t\t\t\tif iter is null\n\t\t\t\t\t\titer = (if xs.iter? then xs else lazy(xs)).iter()\n\t\t\t\t\t\treturn x\n\t\t\t\t\telse\n\t\t\t\t\t\treturn iter()\n\n\tmap = (f) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if xs.iter? then xs else lazy(xs)).iter()\n\t\t\t\titerator ->\n\t\t\t\t\tif (x = iter()) isnt nil then f(x) else nil\n\n\tfilter = (ok) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if xs.iter? then xs else lazy(xs)).iter()\n\t\t\t\titerator ->\n\t\t\t\t\tnull while not ok(x = iter()) and x isnt nil\n\t\t\t\t\treturn x\n\n\tscanl = (f, r) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if xs.iter? then xs else lazy(xs)).iter()\n\t\t\t\titerator ->\n\t\t\t\t\tgot = r\n\t\t\t\t\tr = if (x = iter()) isnt nil then f(r, x) else nil\n\t\t\t\t\treturn got\n\n\tstreak = (n) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if xs.iter? then xs else lazy(xs)).iter()\n\t\t\t\tbuf = []\n\t\t\t\titerator ->\n\t\t\t\t\treturn nil if (x = iter()) is nil\n\t\t\t\t\tbuf.push(x)\n\t\t\t\t\tbuf.shift(1) if buf.length > n\n\t\t\t\t\treturn buf[...]\n\n\treverse = (xs) ->\n\t\tarr = if xs.iter? then list xs else copy xs\n\t\treturn lazy arr.reverse()\n\n\t# lazylist combiners: concat, zip, zipWith, cartProd,\n\n\tconcat = (xss...) ->\n\t\tlazylist ->\n\t\t\titer = (if xss[0].iter? then xss[0] else lazy(xss[0])).iter()\n\t\t\tcurrent_index = 0\n\t\t\titerator ->\n\t\t\t\tif (x = iter()) isnt nil\n\t\t\t\t\treturn x\n\t\t\t\telse if (++current_index < xss.length)\n\t\t\t\t\titer = (if xss[current_index].iter? then xss[current_index] else lazy(xss[current_index])).iter()\n\t\t\t\t\treturn iter()\n\t\t\t\telse\n\t\t\t\t\treturn nil\n\n\t{zip, zipWith} = do ->\n\t\tfinished = (arr) ->\n\t\t\tfor x in arr\n\t\t\t\treturn true if x is nil\n\t\t\treturn false\n\n\t\tzip = (xss...) ->\n\t\t\tlazylist ->\n\t\t\t\titers = ((if xs.iter? then xs else lazy(xs)).iter() for xs in xss)\n\t\t\t\titerator ->\n\t\t\t\t\tnext = (iter() for iter in iters)\n\t\t\t\t\tif finished(next)\n\t\t\t\t\t\treturn nil\n\t\t\t\t\telse\n\t\t\t\t\t\treturn next\n\n\t\tzipWith = (f) -> (xss...) ->\n\t\t\tlazylist ->\n\t\t\t\titers = ((if xs.iter? then xs else lazy(xs)).iter() for xs in xss)\n\t\t\t\titerator ->\n\t\t\t\t\tnext = (iter() for iter in iters)\n\t\t\t\t\tif finished(next)\n\t\t\t\t\t\treturn nil\n\t\t\t\t\telse\n\t\t\t\t\t\treturn f(next...)\n\n\t\treturn {zip, zipWith}\n\n\tcartProd = do -> # cartesian product\n\t\tinc_vector = (limits) ->\n\t\t\tlen_minus_1 = limits.length - 1\n\t\t\t(vec) ->\n\t\t\t\ti = len_minus_1\n\t\t\t\tvec[i--] = 0 until ++vec[i] < limits[i] or i <= 0\n\t\t\t\treturn vec\n\n\t\tapply_vector = (space) ->\n\t\t\tlen = space.length\n\t\t\t(vec) ->\n\t\t\t\t(space[i][vec[i]] for i in [0...len])\n\n\t\t(xss...) ->\n\t\t\tlazylist ->\n\t\t\t\txss = (list(xs) for xs in xss)\n\t\t\t\tlimits = (xss[i].length for i in [0...xss.length])\n\t\t\t\t(return nil if len is 0) for len in limits\n\t\t\t\tinc = inc_vector(limits)\n\t\t\t\tget_value = apply_vector(xss)\n\t\t\t\tv = (0 for i in [0...xss.length])\n\t\t\t\titerator ->\n\t\t\t\t\tif v[0] < limits[0] then (r = get_value v; inc v; r) else nil\n\n\t# lazylist consumers: list, last, length, foldl, best, all, any, foreach,\n\n\tlist = (xs) -> #force list elements of the lazylist to get an array\n\t\tif xs.iter?\n\t\t\tit = xs.iter()\n\t\t\t(x while (x = it()) isnt nil)\n\t\telse if xs instanceof Array\n\t\t\txs\n\t\telse\n\t\t\tthrow Error 'list(xs): xs is neither LazyList nor Array'\n\n\tlast = (xs) -> #returns nil if xs is empty\n\t\tif not xs.iter? then xs[xs.length - 1] ? nil else\n\t\t\titer = (if xs.iter? then xs else lazy(xs)).iter()\n\t\t\tr = nil\n\t\t\tr = x while (x = iter()) isnt nil\n\t\t\treturn r\n\n\tlength = (xs) ->\n\t\tif not xs.iter? then xs.length else\n\t\t\titer = (if xs.iter? then xs else lazy(xs)).iter()\n\t\t\tr = 0\n\t\t\t++r while (x = iter()) isnt nil\n\t\t\treturn r\n\n\tfoldl = (f, r) ->\n\t\t(xs) ->\n\t\t\titer = (if xs.iter? then xs else lazy(xs)).iter()\n\t\t\tr = f(r, x) while (x = iter()) isnt nil\n\t\t\treturn r\n\n\tbest = (better) ->\n\t\t(xs) ->\n\t\t\titer = (if xs.iter? then xs else lazy(xs)).iter()\n\t\t\treturn null if (r = iter()) is nil\n\t\t\twhile (it = iter()) isnt nil\n\t\t\t\tr = if better(it, r) then it else r\n\t\t\treturn r\n\n\tall = (f) ->\n\t\tf = ((x) -> x is f) if typeof(f) isnt 'function'\n\t\t(xs) ->\n\t\t\titer = (if xs.iter? then xs else lazy(xs)).iter()\n\t\t\twhile (x = iter()) isnt nil\n\t\t\t\treturn false if not f(x)\n\t\t\treturn true\n\n\tany = (f) ->\n\t\tall_not = all (x) -> not f(x)\n\t\t(xs) -> not (all_not xs)\n\n\tbrk = -> brk\n\tbrk.toString = -> 'foreach.break'\n\n\tforeach = (xs, callback, fruit) ->\n\t\titer = (if xs.iter? then xs else lazy(xs)).iter()\n\t\twhile (x = iter()) isnt nil\n\t\t\tbreak if callback(x, fruit) is brk\n\t\tfruit\n\n\tObject.defineProperties foreach,\n\t\tbreak:\n\t\t\twritable: false\n\t\t\tconfigurable: false\n\t\t\tenumerable: false\n\t\t\tvalue: brk\n\n\treturn {\n\t\t# lazylist definition\n\t\tnil, lazylist, iterator,\n\n\t\t# lazylist constants\n\t\tnaturals, range, primes,\n\n\t\t# lazylist producers\n\t\tlazy, enumerate, repeat, generate, random_gen, ranged_random_gen, permutation_gen,\n\n\t\t# lazylist decorators\n\t\tcons, map, filter, take, takeWhile, drop, dropWhile, scanl, streak, reverse,\n\n\t\t# lazylist combiners\n\t\tconcat, zip, zipWith, cartProd,\n\n\t\t# lazylist consumers\n\t\tlist, last, length, foldl, best, all, any, foreach,\n\t}\n\nmodule.exports = this_module()\n\n","this_module = () ->\n\turi_encoder = (component_packer = str) ->\n\t\t(obj) ->\n\t\t\t(\"#{encodeURIComponent(k)}=#{encodeURIComponent component_packer v}\" for k, v of obj).join('&')\n\n\turi_decoder = (component_unpacker = ((s) -> s)) ->\n\t\t(str) ->\n\t\t\td = {}\n\t\t\tfor s in (str.match /[^?=&]+=[^&]*/g) ? []\n\t\t\t\t[..., k, v] = s.match /([^=]+)=(.*)/\n\t\t\t\td[decodeURIComponent(k)] = (component_unpacker decodeURIComponent v)\n\t\t\treturn d\n\n\treturn {\n\t\turi_encoder, uri_decoder,\n\t}\n\nmodule.exports = this_module()\n\n","this_module = () ->\n\tfunction_literal = (f) ->\n\t\texpr = f.toString().replace(/^\\s*function\\s?\\(\\s?\\)\\s?{\\s*return\\s*([^]*?);?\\s*}$/, '$1')\n\t\texpr = expr.replace(/[\\r\\n]{1,2}\\s*/g, '') if expr.length <= 100\n\t\treturn expr\n\n\ttime_now = ->\n\t\t(new Date).getTime()\n\n\tlog = do -> #log an expression with it's literal and time used\n\t\tdye = do ->\n\t\t\t# ANSI Terminal Colors.\n\t\t\tcavailable = process? and not process.env.NODE_DISABLE_COLORS\n\t\t\tpalette =\n\t\t\t\tbold: '\\x1B[0;1m'\n\t\t\t\tred: '\\x1B[0;31m'\n\t\t\t\tgreen: '\\x1B[0;32m'\n\t\t\t\tyellow: '\\x1B[0;33m'\n\t\t\t\tblue: '\\x1B[0;34m'\n\t\t\t\tbold_grey: '\\x1B[1;30m'\n\t\t\tif not cavailable\n\t\t\t\t(color) -> (s) -> s\n\t\t\telse\n\t\t\t\t(color) ->\n\t\t\t\t\t(s) -> \"#{palette[color]}#{s}#{'\\x1B[0m'}\"\n\n\t\tlog_label = do ->\n\t\t\tflag_palette =\n\t\t\t\t'#': 'bold_grey'\n\t\t\t\t'I': 'green'\n\t\t\t\t'E': 'red'\n\t\t\t\t'W': 'yellow'\n\t\t\top_flag = (op) ->\n\t\t\t\tif op == 'log' then '#' else op[0].toUpperCase()\n\t\t\t(op) ->\n\t\t\t\tflag = op_flag(op)\n\t\t\t\tdye(flag_palette[flag]) flag\n\n\t\thistories = []\n\t\tfactory = (op) ->\n\t\t\tprefix = \"#{dye('bold_grey') '#'}#{log_label op}\"\n\t\t\t(args...) ->\n\t\t\t\tball = []\n\t\t\t\tfor f in args\n\t\t\t\t\tif typeof f == 'function'\n\t\t\t\t\t\texpr = function_literal(f)\n\t\t\t\t\t\tstart_time = time_now()\n\t\t\t\t\t\teval_result = f()\n\t\t\t\t\t\ttime_used = time_now() - start_time\n\t\t\t\t\t\tball.push(\"#{prefix} #{dye('green') expr} #{dye('bold_grey') '==>'}\", f())\n\t\t\t\t\t\tball.push(dye('yellow') \"[#{time_used}ms]\") if time_used > 0\n\t\t\t\t\telse\n\t\t\t\t\t\tball.push(\"#{prefix}\", f)\n\t\t\t\tconsole[op] ball...\n\t\t\t\thistories.push(ball)\n\t\t\t\thistories.shift() if histories.length >= 10\n\t\t\t\treturn null\n\t\tgot = factory('log')\n\t\tgot.histories = histories\n\t\tgot.info = factory('info')\n\t\tgot.warn = factory('warn')\n\t\tgot.error = got.err = factory('error')\n\t\treturn got\n\n\tassert = (f, msg) ->\n\t\t[f, msg] = [msg, f] if f not instanceof Function\n\t\ttry\n\t\t\tthrow Error \"Assertion #{msg ? function_literal(f)} Failed!\" if not f()\n\t\tcatch e\n\t\t\tthrow Error \"Assertion #{msg ? function_literal(f)} Unknown:\\n#{e}\"\n\n\tassertEq = (l, r) ->\n\t\ttry\n\t\t\tlv = l()\n\t\t\trv = r()\n\t\tcatch e\n\t\t\tthrow Error \"Equation Between #{function_literal(l)} And #{function_literal(r)} Unknown:\\n#{e}\"\n\t\tif lv isnt rv\n\t\t\tthrow Error \"Equation Failed:\\n\\t#{function_literal(l)} IS #{lv} BUT\\n\\t#{function_literal(r)} IS #{rv}.\"\n\n\tassertEqOn = (f) -> (l, r) ->\n\t\ttry\n\t\t\tlv = l()\n\t\t\trv = r()\n\t\t\tflv = f(lv)\n\t\t\tfrv = f(rv)\n\t\tcatch e\n\t\t\tthrow Error \"MAPPED Equation Between #{function_literal(l)} And #{function_literal(r)} Unknown:\\n#{e}\"\n\t\tif flv isnt frv\n\t\t\tthrow Error \"Equation Failed:\\n\\t#{function_literal(l)} IS #{lv} AND MAPPED TO #{flv} BUT\\n\\t#{function_literal(r)} IS #{rv} AND MAPPED TO #{frv}.\"\n\n\tsecurely = (f) -> # ensure a function not to modify it's arguments\n\t\t(args...) ->\n\t\t\targs = deepcopy args\n\t\t\tf(args...)\n\n\tdict = (pairs) -> #for dict comprehensions\n\t\td = {}\n\t\td[k] = v for [k, v] in pairs\n\t\treturn d\n\n\t{copy, deepcopy} = do ->\n\t\tcp = (root, dep) ->\n\t\t\treturn root if dep == 0 or not root? or typeof(root) != 'object'\n\t\t\tif root instanceof Array\n\t\t\t\tr = (cp(v, dep-1) for v in root)\n\t\t\telse\n\t\t\t\tr = {}\n\t\t\t\tr[k] = cp(v, dep-1) for k, v of root\n\t\t\treturn r\n\t\tcopy: (obj, depth=1) -> cp(obj, depth)\n\t\tdeepcopy: (obj, depth=Infinity) -> cp(obj, depth)\n\n\textend = (base) -> (defaults...) -> #NOTE: modified inplace, use copy() to protect it.\n\t\tfor d in defaults when d?\n\t\t\tbase[k] ?= v for k, v of d #NOTE: null values will be replaced if a default value exists.\n\t\treturn base\n\n\tupdate = (base) -> (updates...) -> #NOTE: modified inplace, use copy() to protect it.\n\t\tfor d in updates when d?\n\t\t\tbase[k] = v for k, v of d\n\t\treturn base\n\n\treturn {\n\t\tlog, assert, assertEq, assertEqOn, dict, copy, deepcopy, securely, extend, update,\n\t}\n\nmodule.exports = this_module()\n\n"],"sourceRoot":"/source/"}