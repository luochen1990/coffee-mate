{"version":3,"sources":["/source/node_modules/browserify/node_modules/browser-pack/_prelude.js","/source/src/coffee-mate.coffee","coffee-mate.js","/source/node_modules/browserify/node_modules/process/browser.js","/source/node_modules/lazy.coffee/build/lazy.js","/source/src/basics.coffee","/source/src/convertors.coffee","/source/src/funny.coffee","/source/src/url-helpers.coffee","/source/src/utils.coffee"],"names":["f","exports","module","define","amd","g","window","global","self","this","CoffeeMate","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"basics","convertors","funny","lazy","url_helpers","utils","extend","./basics","./convertors","./funny","./url-helpers","./utils","lazy.coffee",2,"cleanUpNextTick","draining","currentQueue","queue","concat","queueIndex","drainQueue","timeout","setTimeout","len","run","clearTimeout","Item","fun","array","noop","process","nextTick","args","Array","arguments","push","prototype","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","name","cwd","chdir","dir","umask",3,"this_module","slice","arg","Iterator","LazyList","Symbol","all","any","best","brk","cartProd","cons","drop","dropWhile","enumerate","filter","foldl","foreach","group","groupBy","groupOn","head","iterate","last","list","map","naturals","nil","partition","permutations","primes","randoms","range","ref","repeat","reverse","scanl","sort","sortOn","streak","take","takeWhile","zip","zipWith","iterator","toString","it","next","value","done","stop","start","step","x","p","Infinity","xs","constructor","String","keys","Object","k","init","st","hash","normal","salt","Math","PI","sin","floor","seed","opts","ref1","rg","next_permutation","m","arr","ls","json","c","iter","ok","finished","j","prevx","got","buf","shift","b","fa","fb","eq","memo","v","y","results","xss","xs_iter","len1","iters","apply_vector","inc_vector","limits","len_minus_1","vec","space","get_value","inc","results1","ref2","better","all_not","callback","fruit","defineProperties","break","writable","configurable","enumerable",4,"abs","accept_multi_or_array","ceil","combine","curry2","curry3","equal","flip","greaterEqual","greaterThan","lessEqual","lessThan","max","max_index","min","min_index","minus","notEqual","pack","pluck","plus","precise","seek","sum","uncurry2","uncurry3","unpack","attr","d","parseFloat","toPrecision","first",5,"bool","chr","float","hex","int","obj","ord","str","base","parseInt","test","charCodeAt","fromCharCode","indent","JSON","stringify","parse",6,"Y","church","fix","memoFix","memoize","get_key","cache","cached","key","ff",7,"uri_decoder","uri_encoder","component_packer","encodeURIComponent","join","component_unpacker","match","decodeURIComponent",8,"assert","assertEq","assertEqOn","copy","deepcopy","dict","function_literal","log","overload","securely","time_now","update","expr","replace","Date","getTime","dye","factory","histories","log_label","cavailable","palette","NODE_DISABLE_COLORS","bold","red","green","yellow","blue","bold_grey","color","flag_palette","op_flag","#","I","E","W","op","toUpperCase","flag","prefix","ball","eval_result","start_time","time_used","console","info","warn","error","err","msg","Function","_error","lv","rv","flv","frv","pairs","cp","root","dep","depth","defaults","updates","_d","fallback","_process"],"mappings":"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","file":"coffee-mate.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","utils = require './utils'\nbasics = require './basics'\nlazy = require 'lazy.coffee'\nfunny = require './funny'\nconvertors = require './convertors'\nurl_helpers = require './url-helpers'\n\nmodule.exports = utils.extend({}) utils, basics, lazy, funny, convertors, url_helpers\n\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.CoffeeMate = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nvar basics, convertors, funny, lazy, url_helpers, utils;\n\nutils = require('./utils');\n\nbasics = require('./basics');\n\nlazy = require('lazy.coffee');\n\nfunny = require('./funny');\n\nconvertors = require('./convertors');\n\nurl_helpers = require('./url-helpers');\n\nmodule.exports = utils.extend({})(utils, basics, lazy, funny, convertors, url_helpers);\n\n\n},{\"./basics\":4,\"./convertors\":5,\"./funny\":6,\"./url-helpers\":7,\"./utils\":8,\"lazy.coffee\":3}],2:[function(require,module,exports){\n// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            currentQueue[queueIndex].run();\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (!draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],3:[function(require,module,exports){\n(function (global){\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.lazy = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nvar this_module,\n  slice = [].slice;\n\nthis_module = function(arg) {\n  var Iterator, LazyList, Symbol, all, any, best, brk, cartProd, concat, cons, drop, dropWhile, enumerate, filter, foldl, foreach, group, groupBy, groupOn, head, iterate, last, lazy, length, list, map, naturals, nil, partition, permutations, primes, randoms, range, ref, repeat, reverse, scanl, sort, sortOn, streak, take, takeWhile, zip, zipWith;\n  Symbol = arg.Symbol;\n  LazyList = function(f) {\n    f[Symbol.iterator] = function() {\n      return f();\n    };\n    f.toString = function() {\n      return \"LazyList\";\n    };\n    return f;\n  };\n  nil = LazyList(function() {\n    return nil;\n  });\n  nil.toString = function() {\n    return 'nil';\n  };\n  Iterator = function(it) {\n    it.next = function() {\n      var r;\n      r = it();\n      return {\n        value: r,\n        done: r === nil\n      };\n    };\n    it.toString = function() {\n      return \"Iterator\";\n    };\n    return it;\n  };\n  naturals = LazyList(function() {\n    var i;\n    i = -1;\n    return Iterator(function() {\n      return ++i;\n    });\n  });\n  range = function() {\n    var args;\n    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    if (args.length === 0) {\n      return naturals;\n    } else if (args.length === 1) {\n      return LazyList(function() {\n        var i, stop;\n        stop = args[0];\n        i = -1;\n        return Iterator(function() {\n          if (++i < stop) {\n            return i;\n          } else {\n            return nil;\n          }\n        });\n      });\n    } else if (args.length === 2) {\n      return LazyList(function() {\n        var i, start, stop;\n        start = args[0], stop = args[1];\n        if (start < stop) {\n          i = start - 1;\n          return Iterator(function() {\n            if (++i < stop) {\n              return i;\n            } else {\n              return nil;\n            }\n          });\n        } else {\n          i = start + 1;\n          return Iterator(function() {\n            if (--i > stop) {\n              return i;\n            } else {\n              return nil;\n            }\n          });\n        }\n      });\n    } else {\n      return LazyList(function() {\n        var i, start, step, stop;\n        start = args[0], stop = args[1], step = args[2];\n        if (stop !== start && (stop - start) * step < 0) {\n          throw 'ERR IN range(): YOU ARE CREATING AN UNLIMITTED RANGE';\n        }\n        i = start - step;\n        if (start < stop) {\n          return Iterator(function() {\n            if ((i += step) < stop) {\n              return i;\n            } else {\n              return nil;\n            }\n          });\n        } else {\n          return Iterator(function() {\n            if ((i += step) > stop) {\n              return i;\n            } else {\n              return nil;\n            }\n          });\n        }\n      });\n    }\n  };\n  primes = LazyList(function() {\n    return filter(function(x) {\n      return all(function(p) {\n        return x % p !== 0;\n      })(takeWhile(function(p) {\n        return p * p <= x;\n      })(range(2, Infinity)));\n    })(range(2, Infinity))();\n  });\n  lazy = function(xs) {\n    var ref;\n    if (typeof xs === 'function') {\n      if (xs[Symbol.iterator] != null) {\n        return xs;\n      } else {\n        return LazyList(xs);\n      }\n    } else if ((ref = xs.constructor) === Array || ref === String) {\n      return LazyList(function() {\n        var i;\n        i = -1;\n        return Iterator(function() {\n          if ((++i) < xs.length) {\n            return xs[i];\n          } else {\n            return nil;\n          }\n        });\n      });\n    } else if (xs[Symbol.iterator] != null) {\n      return LazyList(function() {\n        var it;\n        it = xs[Symbol.iterator]();\n        return Iterator(function() {\n          var r;\n          r = it.next();\n          if (r.done) {\n            return nil;\n          } else {\n            return r.value;\n          }\n        });\n      });\n    } else {\n      throw Error('lazy(xs): xs is neither Array nor Iterable');\n    }\n  };\n  enumerate = function(it) {\n    if ((it[Symbol.iterator] != null) || it instanceof Array) {\n      return zip(naturals, it);\n    } else {\n      return LazyList(function() {\n        var i, keys;\n        keys = Object.keys(it);\n        i = -1;\n        return Iterator(function() {\n          var k;\n          if (++i < keys.length) {\n            return [(k = keys[i]), it[k]];\n          } else {\n            return nil;\n          }\n        });\n      });\n    }\n  };\n  repeat = function(x) {\n    return LazyList(function() {\n      return Iterator(function() {\n        return x;\n      });\n    });\n  };\n  iterate = function(next, init) {\n    return LazyList(function() {\n      var st;\n      st = init;\n      return Iterator(function() {\n        var r;\n        r = st;\n        st = next(st);\n        return r;\n      });\n    });\n  };\n  randoms = (function() {\n    var hash, normal, salt;\n    salt = Math.PI / 3.0;\n    hash = function(x) {\n      x = Math.sin(x + salt) * 1e4;\n      return x - Math.floor(x);\n    };\n    normal = function(seed) {\n      return iterate(hash, hash(seed));\n    };\n    return function(opts) {\n      var k, ref, ref1, rg, s, seed;\n      if (opts == null) {\n        return normal(0);\n      } else if (typeof opts === 'number') {\n        return normal(opts);\n      } else {\n        seed = (ref = opts.seed) != null ? ref : 0;\n        rg = opts.range;\n        if (rg != null) {\n          if (typeof rg === 'number') {\n            return map(function(x) {\n              return Math.floor(x * rg);\n            })(normal(seed));\n          } else {\n            ref1 = [rg[0], rg[1] - rg[0] + 1], s = ref1[0], k = ref1[1];\n            return map(function(x) {\n              return s + Math.floor(x * k);\n            })(normal(seed));\n          }\n        } else {\n          return normal(seed);\n        }\n      }\n    };\n  })();\n  permutations = (function() {\n    var next_permutation;\n    next_permutation = function(x) {\n      var l, m, r, ref, ref1;\n      x = x.slice(0);\n      l = x.length - 1;\n      while (l >= 1 && x[l] <= x[l - 1]) {\n        --l;\n      }\n      if (l !== 0) {\n        m = x.length - 1;\n        while (m > l - 1 && x[m] <= x[l - 1]) {\n          --m;\n        }\n        ref = [x[l - 1], x[m]], x[m] = ref[0], x[l - 1] = ref[1];\n      }\n      r = x.length - 1;\n      while (l < r) {\n        ref1 = [x[r], x[l]], x[l] = ref1[0], x[r] = ref1[1];\n        ++l;\n        --r;\n      }\n      return x;\n    };\n    return function(xs) {\n      var arr;\n      arr = list(xs);\n      if (arr.length === 0) {\n        return nil;\n      } else {\n        return cons(arr.slice(0))(takeWhile(function(ls) {\n          return json(ls) !== json(arr);\n        })(drop(1)(iterate(next_permutation, arr))));\n      }\n    };\n  })();\n  take = function(n) {\n    return function(xs) {\n      return LazyList(function() {\n        var c, iter;\n        iter = lazy(xs)[Symbol.iterator]();\n        c = -1;\n        return Iterator(function() {\n          if (++c < n) {\n            return iter();\n          } else {\n            return nil;\n          }\n        });\n      });\n    };\n  };\n  takeWhile = function(ok) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter;\n        iter = lazy(xs)[Symbol.iterator]();\n        return Iterator(function() {\n          var x;\n          if ((x = iter()) !== nil && ok(x)) {\n            return x;\n          } else {\n            return nil;\n          }\n        });\n      });\n    };\n  };\n  drop = function(n) {\n    return function(xs) {\n      return LazyList(function() {\n        var finished, i, iter, j, ref;\n        iter = lazy(xs)[Symbol.iterator]();\n        finished = false;\n        for (i = j = 0, ref = n; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n          finished || (finished = iter() === nil);\n          if (finished) {\n            break;\n          }\n        }\n        if (finished) {\n          return function() {\n            return nil;\n          };\n        } else {\n          return iter;\n        }\n      });\n    };\n  };\n  dropWhile = function(ok) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter, x;\n        iter = lazy(xs)[Symbol.iterator]();\n        while (ok(x = iter()) && x !== nil) {\n          null;\n        }\n        return Iterator(function() {\n          var prevx, ref;\n          ref = [x, iter()], prevx = ref[0], x = ref[1];\n          return prevx;\n        });\n      });\n    };\n  };\n  cons = function(x) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter;\n        iter = null;\n        return Iterator(function() {\n          if (iter === null) {\n            iter = lazy(xs)[Symbol.iterator]();\n            return x;\n          } else {\n            return iter();\n          }\n        });\n      });\n    };\n  };\n  map = function(f) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter;\n        iter = lazy(xs)[Symbol.iterator]();\n        return Iterator(function() {\n          var x;\n          if ((x = iter()) !== nil) {\n            return f(x);\n          } else {\n            return nil;\n          }\n        });\n      });\n    };\n  };\n  filter = function(ok) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter;\n        iter = lazy(xs)[Symbol.iterator]();\n        return Iterator(function() {\n          var x;\n          while (!ok(x = iter()) && x !== nil) {\n            null;\n          }\n          return x;\n        });\n      });\n    };\n  };\n  scanl = function(f, r) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter;\n        iter = lazy(xs)[Symbol.iterator]();\n        return Iterator(function() {\n          var got, x;\n          got = r;\n          r = (x = iter()) !== nil ? f(r, x) : nil;\n          return got;\n        });\n      });\n    };\n  };\n  streak = function(n) {\n    if (n < 1) {\n      return nil;\n    } else {\n      return function(xs) {\n        return drop(n - 1)(LazyList(function() {\n          var buf, iter;\n          iter = lazy(xs)[Symbol.iterator]();\n          buf = [];\n          return Iterator(function() {\n            var x;\n            if ((x = iter()) === nil) {\n              return nil;\n            }\n            buf.push(x);\n            if (buf.length > n) {\n              buf.shift(1);\n            }\n            return buf.slice(0);\n          });\n        }));\n      };\n    }\n  };\n  reverse = function(xs) {\n    var ref;\n    if ((ref = xs.constructor) === Array || ref === String) {\n      return LazyList(function() {\n        var i;\n        i = xs.length;\n        return Iterator(function() {\n          if ((--i) >= 0) {\n            return xs[i];\n          } else {\n            return nil;\n          }\n        });\n      });\n    } else {\n      return list(lazy(xs)).reverse();\n    }\n  };\n  sort = function(xs) {\n    var arr;\n    arr = list(lazy(xs));\n    return arr.sort();\n  };\n  sortOn = function(f) {\n    return function(xs) {\n      var arr;\n      arr = list(lazy(xs));\n      return arr.sort(function(a, b) {\n        var fa, fb;\n        return ((fa = f(a)) > (fb = f(b))) - (fa < fb);\n      });\n    };\n  };\n  group = function(xs) {\n    return LazyList(function() {\n      var iter, t, x;\n      iter = lazy(xs)[Symbol.iterator]();\n      t = nil;\n      x = iter();\n      return Iterator(function() {\n        if (x === nil) {\n          return nil;\n        } else if (x !== t) {\n          t = x;\n          return LazyList(function() {\n            return Iterator(function() {\n              var r;\n              if ((r = x) === t) {\n                x = iter();\n                return r;\n              } else {\n                return nil;\n              }\n            });\n          });\n        }\n      });\n    });\n  };\n  groupBy = function(eq) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter, t, x;\n        iter = lazy(xs)[Symbol.iterator]();\n        t = nil;\n        x = iter();\n        return Iterator(function() {\n          if (x === nil) {\n            return nil;\n          } else if (!eq(x, t)) {\n            t = x;\n            return LazyList(function() {\n              return Iterator(function() {\n                var r;\n                if (eq((r = x), t)) {\n                  x = iter();\n                  return r;\n                } else {\n                  return nil;\n                }\n              });\n            });\n          }\n        });\n      });\n    };\n  };\n  groupOn = function(f) {\n    return function(xs) {\n      var k, memo, v;\n      memo = {};\n      foreach(xs, function(x) {\n        var y;\n        y = f(x);\n        if (memo[y] == null) {\n          memo[y] = [];\n        }\n        return memo[y].push(x);\n      });\n      return (function() {\n        var results;\n        results = [];\n        for (k in memo) {\n          v = memo[k];\n          results.push(v);\n        }\n        return results;\n      })();\n    };\n  };\n  partition = function(f) {\n    return function(xs) {\n      var memo;\n      memo = [[], []];\n      foreach(xs, function(x) {\n        var y;\n        y = !f(x) + 0;\n        return memo[y].push(x);\n      });\n      return memo;\n    };\n  };\n  concat = function(xss) {\n    return LazyList(function() {\n      var iter, xs, xs_iter;\n      xs_iter = lazy(xss)[Symbol.iterator]();\n      xs = xs_iter();\n      iter = lazy(xs)[Symbol.iterator]();\n      return Iterator(function() {\n        var x;\n        if ((x = iter()) !== nil) {\n          return x;\n        } else if ((xs = xs_iter()) !== nil) {\n          iter = lazy(xs)[Symbol.iterator]();\n          return iter();\n        } else {\n          return nil;\n        }\n      });\n    });\n  };\n  ref = (function() {\n    var finished, zip, zipWith;\n    finished = function(arr) {\n      var j, len1, x;\n      for (j = 0, len1 = arr.length; j < len1; j++) {\n        x = arr[j];\n        if (x === nil) {\n          return true;\n        }\n      }\n      return false;\n    };\n    zip = function() {\n      var xss;\n      xss = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      return LazyList(function() {\n        var iters, xs;\n        iters = (function() {\n          var j, len1, results;\n          results = [];\n          for (j = 0, len1 = xss.length; j < len1; j++) {\n            xs = xss[j];\n            results.push(lazy(xs)[Symbol.iterator]());\n          }\n          return results;\n        })();\n        return Iterator(function() {\n          var iter, next;\n          next = (function() {\n            var j, len1, results;\n            results = [];\n            for (j = 0, len1 = iters.length; j < len1; j++) {\n              iter = iters[j];\n              results.push(iter());\n            }\n            return results;\n          })();\n          if (finished(next)) {\n            return nil;\n          } else {\n            return next;\n          }\n        });\n      });\n    };\n    zipWith = function(f) {\n      return function() {\n        var xss;\n        xss = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        return LazyList(function() {\n          var iters, xs;\n          iters = (function() {\n            var j, len1, results;\n            results = [];\n            for (j = 0, len1 = xss.length; j < len1; j++) {\n              xs = xss[j];\n              results.push(lazy(xs)[Symbol.iterator]());\n            }\n            return results;\n          })();\n          return Iterator(function() {\n            var iter, next;\n            next = (function() {\n              var j, len1, results;\n              results = [];\n              for (j = 0, len1 = iters.length; j < len1; j++) {\n                iter = iters[j];\n                results.push(iter());\n              }\n              return results;\n            })();\n            if (finished(next)) {\n              return nil;\n            } else {\n              return f.apply(null, next);\n            }\n          });\n        });\n      };\n    };\n    return {\n      zip: zip,\n      zipWith: zipWith\n    };\n  })(), zip = ref.zip, zipWith = ref.zipWith;\n  cartProd = (function() {\n    var apply_vector, inc_vector;\n    inc_vector = function(limits) {\n      var len_minus_1;\n      len_minus_1 = limits.length - 1;\n      return function(vec) {\n        var i;\n        i = len_minus_1;\n        while (!(++vec[i] < limits[i] || i <= 0)) {\n          vec[i--] = 0;\n        }\n        return vec;\n      };\n    };\n    apply_vector = function(space) {\n      var len;\n      len = space.length;\n      return function(vec) {\n        var i, j, ref1, results;\n        results = [];\n        for (i = j = 0, ref1 = len; 0 <= ref1 ? j < ref1 : j > ref1; i = 0 <= ref1 ? ++j : --j) {\n          results.push(space[i][vec[i]]);\n        }\n        return results;\n      };\n    };\n    return function() {\n      var xss;\n      xss = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      return LazyList(function() {\n        var get_value, i, inc, j, len, len1, limits, v, xs;\n        xss = (function() {\n          var j, len1, results;\n          results = [];\n          for (j = 0, len1 = xss.length; j < len1; j++) {\n            xs = xss[j];\n            results.push(list(xs));\n          }\n          return results;\n        })();\n        limits = (function() {\n          var j, ref1, results;\n          results = [];\n          for (i = j = 0, ref1 = xss.length; 0 <= ref1 ? j < ref1 : j > ref1; i = 0 <= ref1 ? ++j : --j) {\n            results.push(xss[i].length);\n          }\n          return results;\n        })();\n        for (j = 0, len1 = limits.length; j < len1; j++) {\n          len = limits[j];\n          if (len === 0) {\n            return nil;\n          }\n        }\n        inc = inc_vector(limits);\n        get_value = apply_vector(xss);\n        v = (function() {\n          var o, ref1, results;\n          results = [];\n          for (i = o = 0, ref1 = xss.length; 0 <= ref1 ? o < ref1 : o > ref1; i = 0 <= ref1 ? ++o : --o) {\n            results.push(0);\n          }\n          return results;\n        })();\n        return Iterator(function() {\n          var r;\n          if (v[0] < limits[0]) {\n            r = get_value(v);\n            inc(v);\n            return r;\n          } else {\n            return nil;\n          }\n        });\n      });\n    };\n  })();\n  list = function(xs) {\n    var it, n, results, results1, x;\n    if (xs instanceof Array) {\n      return xs;\n    } else if (typeof xs === 'function') {\n      it = xs[Symbol.iterator]();\n      results = [];\n      while ((x = it()) !== nil) {\n        results.push(x);\n      }\n      return results;\n    } else if (xs[Symbol.iterator] != null) {\n      it = lazy(xs)[Symbol.iterator]();\n      results1 = [];\n      while ((x = it()) !== nil) {\n        results1.push(x);\n      }\n      return results1;\n    } else if (typeof xs === 'number') {\n      n = xs;\n      return function(xs) {\n        return list(take(n)(xs));\n      };\n    } else {\n      throw Error('list(xs): xs is neither Array nor Iterable');\n    }\n  };\n  head = function(xs) {\n    var iter, ref1, ref2;\n    if ((ref1 = xs.constructor) === Array || ref1 === String) {\n      return (ref2 = xs[0]) != null ? ref2 : nil;\n    } else {\n      iter = lazy(xs)[Symbol.iterator]();\n      return iter();\n    }\n  };\n  last = function(xs) {\n    var iter, r, ref1, ref2, x;\n    if ((ref1 = xs.constructor) === Array || ref1 === String) {\n      return (ref2 = xs[xs.length - 1]) != null ? ref2 : nil;\n    } else {\n      iter = lazy(xs)[Symbol.iterator]();\n      r = nil;\n      while ((x = iter()) !== nil) {\n        r = x;\n      }\n      return r;\n    }\n  };\n  length = function(xs) {\n    var iter, r, ref1, x;\n    if ((ref1 = xs.constructor) === Array || ref1 === String) {\n      return xs.length;\n    } else {\n      iter = lazy(xs)[Symbol.iterator]();\n      r = 0;\n      while ((x = iter()) !== nil) {\n        ++r;\n      }\n      return r;\n    }\n  };\n  foldl = function(f, init) {\n    return function(xs) {\n      var iter, r, x;\n      r = init;\n      iter = lazy(xs)[Symbol.iterator]();\n      while ((x = iter()) !== nil) {\n        r = f(r, x);\n      }\n      return r;\n    };\n  };\n  best = function(better) {\n    return function(xs) {\n      var it, iter, r;\n      iter = lazy(xs)[Symbol.iterator]();\n      if ((r = iter()) === nil) {\n        return null;\n      }\n      while ((it = iter()) !== nil) {\n        r = better(it, r) ? it : r;\n      }\n      return r;\n    };\n  };\n  all = function(f) {\n    if (typeof f !== 'function') {\n      f = (function(x) {\n        return x === f;\n      });\n    }\n    return function(xs) {\n      var iter, x;\n      iter = lazy(xs)[Symbol.iterator]();\n      while ((x = iter()) !== nil) {\n        if (!f(x)) {\n          return false;\n        }\n      }\n      return true;\n    };\n  };\n  any = function(f) {\n    var all_not;\n    all_not = all(function(x) {\n      return !f(x);\n    });\n    return function(xs) {\n      return !(all_not(xs));\n    };\n  };\n  brk = function() {\n    return brk;\n  };\n  brk.toString = function() {\n    return 'foreach.break';\n  };\n  foreach = function(xs, callback, fruit) {\n    var iter, x;\n    iter = lazy(xs)[Symbol.iterator]();\n    while ((x = iter()) !== nil) {\n      if (callback(x, fruit) === brk) {\n        break;\n      }\n    }\n    return fruit;\n  };\n  Object.defineProperties(foreach, {\n    \"break\": {\n      writable: false,\n      configurable: false,\n      enumerable: false,\n      value: brk\n    }\n  });\n  return {\n    nil: nil,\n    LazyList: LazyList,\n    Iterator: Iterator,\n    Symbol: Symbol,\n    naturals: naturals,\n    range: range,\n    primes: primes,\n    lazy: lazy,\n    enumerate: enumerate,\n    repeat: repeat,\n    iterate: iterate,\n    randoms: randoms,\n    permutations: permutations,\n    cons: cons,\n    map: map,\n    filter: filter,\n    take: take,\n    takeWhile: takeWhile,\n    drop: drop,\n    dropWhile: dropWhile,\n    scanl: scanl,\n    streak: streak,\n    reverse: reverse,\n    sort: sort,\n    sortOn: sortOn,\n    group: group,\n    groupBy: groupBy,\n    groupOn: groupOn,\n    partition: partition,\n    concat: concat,\n    zip: zip,\n    zipWith: zipWith,\n    cartProd: cartProd,\n    list: list,\n    head: head,\n    last: last,\n    length: length,\n    foldl: foldl,\n    best: best,\n    all: all,\n    any: any,\n    foreach: foreach\n  };\n};\n\nmodule.exports = this_module({\n  Symbol: typeof Symbol !== \"undefined\" && Symbol !== null ? Symbol : {\n    iterator: 'iter'\n  }\n});\n\n\n},{}]},{},[1])(1)\n});\n\n\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],4:[function(require,module,exports){\nvar this_module,\n  slice = [].slice;\n\nthis_module = function(arg) {\n  var abs, accept_multi_or_array, best, ceil, combine, curry2, curry3, equal, flip, floor, greaterEqual, greaterThan, lessEqual, lessThan, max, max_index, min, min_index, minus, notEqual, pack, pluck, plus, precise, seek, sum, uncurry2, uncurry3, unpack;\n  best = arg.best;\n  flip = function(f) {\n    return function(x) {\n      return function(y) {\n        return f(y)(x);\n      };\n    };\n  };\n  combine = function(f) {\n    return function(g) {\n      return function(x) {\n        return f(g(x));\n      };\n    };\n  };\n  curry2 = function(f) {\n    return function(a) {\n      return function(b) {\n        return f(a, b);\n      };\n    };\n  };\n  curry3 = function(f) {\n    return function(a) {\n      return function(b) {\n        return function(c) {\n          return f(a, b, c);\n        };\n      };\n    };\n  };\n  uncurry2 = function(f) {\n    return function(a, b) {\n      return f(a)(b);\n    };\n  };\n  uncurry3 = function(f) {\n    return function(a, b, c) {\n      return f(a)(b)(c);\n    };\n  };\n  pack = function(f) {\n    return function(arr) {\n      return f.apply(null, arr);\n    };\n  };\n  unpack = function(f) {\n    return function() {\n      var arr;\n      arr = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      return f(arr);\n    };\n  };\n  seek = function(arr) {\n    return function(i) {\n      return arr[i];\n    };\n  };\n  pluck = function(attr) {\n    return function(d) {\n      return d[attr];\n    };\n  };\n  equal = function(it) {\n    return function(x) {\n      return x === it;\n    };\n  };\n  notEqual = function(it) {\n    return function(x) {\n      return x !== it;\n    };\n  };\n  lessThan = function(it) {\n    return function(x) {\n      return x < it;\n    };\n  };\n  greaterThan = function(it) {\n    return function(x) {\n      return x > it;\n    };\n  };\n  lessEqual = function(it) {\n    return function(x) {\n      return x <= it;\n    };\n  };\n  greaterEqual = function(it) {\n    return function(x) {\n      return x >= it;\n    };\n  };\n  plus = function(it) {\n    return function(x) {\n      return x + it;\n    };\n  };\n  minus = function(it) {\n    return function(x) {\n      return x - it;\n    };\n  };\n  abs = Math.abs;\n  floor = Math.floor;\n  ceil = Math.ceil;\n  precise = function(n) {\n    return function(x) {\n      return parseFloat(x.toPrecision(n));\n    };\n  };\n  accept_multi_or_array = function(f) {\n    return function() {\n      var arr;\n      arr = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      return f(arr.length === 1 && arr.first instanceof Array ? arr.first : arr);\n    };\n  };\n  sum = accept_multi_or_array(function(arr) {\n    var k, len, r, x;\n    if (arr.length === 1 && arr.first instanceof Array) {\n      arr = arr.first;\n    }\n    r = 0;\n    for (k = 0, len = arr.length; k < len; k++) {\n      x = arr[k];\n      r += x;\n    }\n    return r;\n  });\n  max = accept_multi_or_array(function(arr) {\n    return best(function(a, b) {\n      return a > b;\n    })(arr);\n  });\n  min = accept_multi_or_array(function(arr) {\n    return best(function(a, b) {\n      return a < b;\n    })(arr);\n  });\n  max_index = accept_multi_or_array(function(arr) {\n    var k, ref, results;\n    return best(function(i, j) {\n      return arr[i] > arr[j];\n    })((function() {\n      results = [];\n      for (var k = 0, ref = arr.length; 0 <= ref ? k < ref : k > ref; 0 <= ref ? k++ : k--){ results.push(k); }\n      return results;\n    }).apply(this));\n  });\n  min_index = accept_multi_or_array(function(arr) {\n    var k, ref, results;\n    return best(function(i, j) {\n      return arr[i] < arr[j];\n    })((function() {\n      results = [];\n      for (var k = 0, ref = arr.length; 0 <= ref ? k < ref : k > ref; 0 <= ref ? k++ : k--){ results.push(k); }\n      return results;\n    }).apply(this));\n  });\n  return {\n    flip: flip,\n    combine: combine,\n    curry2: curry2,\n    curry3: curry3,\n    uncurry2: uncurry2,\n    uncurry3: uncurry3,\n    pack: pack,\n    unpack: unpack,\n    seek: seek,\n    pluck: pluck,\n    equal: equal,\n    notEqual: notEqual,\n    lessThan: lessThan,\n    lessEqual: lessEqual,\n    greaterThan: greaterThan,\n    greaterEqual: greaterEqual,\n    plus: plus,\n    minus: minus,\n    abs: abs,\n    floor: floor,\n    ceil: ceil,\n    precise: precise,\n    sum: sum,\n    max: max,\n    min: min,\n    max_index: max_index,\n    min_index: min_index\n  };\n};\n\nmodule.exports = this_module({\n  best: require('lazy.coffee').best\n});\n\n\n},{\"lazy.coffee\":3}],5:[function(require,module,exports){\nvar this_module;\n\nthis_module = function() {\n  var bool, chr, float, hex, int, json, obj, ord, str;\n  int = function(s, base) {\n    var r;\n    if (typeof s === 'string') {\n      r = parseInt(s, base);\n      if (!((s.slice != null) && r === parseInt(s.slice(0, -1), base))) {\n        return r;\n      } else {\n        return null;\n      }\n    } else {\n      return parseInt(0 + s);\n    }\n  };\n  float = function(s) {\n    if (/^-?[0-9]*(\\.[0-9]+)?([eE]-?[0-9]+)?$/.test(s)) {\n      return parseFloat(s);\n    } else {\n      return null;\n    }\n  };\n  str = function(x, base) {\n    return x.toString(base);\n  };\n  bool = function(x) {\n    if (x === true || x === false) {\n      return x;\n    } else {\n      return null;\n    }\n  };\n  hex = function(x) {\n    return x.toString(16);\n  };\n  ord = function(c) {\n    return c.charCodeAt();\n  };\n  chr = function(x) {\n    return String.fromCharCode(x);\n  };\n  json = function(it, indent) {\n    return JSON.stringify(it, null, indent);\n  };\n  obj = function(s) {\n    return JSON.parse(s);\n  };\n  return {\n    int: int,\n    float: float,\n    bool: bool,\n    str: str,\n    hex: hex,\n    ord: ord,\n    chr: chr,\n    json: json,\n    obj: obj\n  };\n};\n\nmodule.exports = this_module();\n\n\n},{}],6:[function(require,module,exports){\nvar this_module,\n  slice = [].slice;\n\nthis_module = function() {\n  var Y, church, fix, memoFix, memoize;\n  church = function(n) {\n    var iter;\n    iter = function(f, n, r) {\n      if (n === 0) {\n        return r;\n      } else {\n        return iter(f, n - 1, f(r));\n      }\n    };\n    return function(f) {\n      return function(x) {\n        return iter(f, n + 0, x);\n      };\n    };\n  };\n  Y = function(f) {\n    return (function(x) {\n      return x(x);\n    })((function(x) {\n      return f((function(y) {\n        return (x(x))(y);\n      }));\n    }));\n  };\n  memoize = function(f, get_key) {\n    var cache;\n    if (get_key == null) {\n      get_key = (function() {\n        var args;\n        args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        return json(args);\n      });\n    }\n    cache = {};\n    return function() {\n      var args, cached, key, r;\n      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      key = get_key.apply(null, args);\n      cached = cache[key];\n      if (cached != null) {\n        return cached;\n      } else {\n        r = f.apply(null, args);\n        cache[key] = r;\n        return r;\n      }\n    };\n  };\n  fix = Y;\n  memoFix = function(ff) {\n    var f;\n    f = memoize(ff((function() {\n      var args;\n      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      return f.apply(null, args);\n    })));\n    return f;\n  };\n  return {\n    church: church,\n    Y: Y,\n    memoize: memoize,\n    fix: fix,\n    memoFix: memoFix\n  };\n};\n\nmodule.exports = this_module();\n\n\n},{}],7:[function(require,module,exports){\nvar this_module;\n\nthis_module = function() {\n  var uri_decoder, uri_encoder;\n  uri_encoder = function(component_packer) {\n    if (component_packer == null) {\n      component_packer = str;\n    }\n    return function(obj) {\n      var k, v;\n      return ((function() {\n        var results;\n        results = [];\n        for (k in obj) {\n          v = obj[k];\n          results.push((encodeURIComponent(k)) + \"=\" + (encodeURIComponent(component_packer(v))));\n        }\n        return results;\n      })()).join('&');\n    };\n  };\n  uri_decoder = function(component_unpacker) {\n    if (component_unpacker == null) {\n      component_unpacker = (function(s) {\n        return s;\n      });\n    }\n    return function(str) {\n      var d, i, j, k, len, ref, ref1, ref2, s, v;\n      d = {};\n      ref1 = (ref = str.match(/[^?=&]+=[^&]*/g)) != null ? ref : [];\n      for (i = 0, len = ref1.length; i < len; i++) {\n        s = ref1[i];\n        ref2 = s.match(/([^=]+)=(.*)/), j = ref2.length - 2, k = ref2[j++], v = ref2[j++];\n        d[decodeURIComponent(k)] = component_unpacker(decodeURIComponent(v));\n      }\n      return d;\n    };\n  };\n  return {\n    uri_encoder: uri_encoder,\n    uri_decoder: uri_decoder\n  };\n};\n\nmodule.exports = this_module();\n\n\n},{}],8:[function(require,module,exports){\n(function (process){\nvar this_module,\n  slice = [].slice;\n\nthis_module = function() {\n  var assert, assertEq, assertEqOn, copy, deepcopy, dict, extend, function_literal, log, overload, ref, securely, time_now, update;\n  function_literal = function(f) {\n    var expr;\n    expr = f.toString().replace(/^\\s*function\\s?\\(\\s?\\)\\s?{\\s*return\\s*([^]*?);?\\s*}$/, '$1');\n    if (expr.length <= 100) {\n      expr = expr.replace(/[\\r\\n]{1,2}\\s*/g, '');\n    }\n    return expr;\n  };\n  time_now = function() {\n    return (new Date).getTime();\n  };\n  log = (function() {\n    var dye, factory, got, histories, log_label;\n    dye = (function() {\n      var cavailable, palette;\n      cavailable = (typeof window === \"undefined\" || window === null) && (typeof process !== \"undefined\" && process !== null) && !process.env.NODE_DISABLE_COLORS;\n      palette = {\n        bold: '\\x1B[0;1m',\n        red: '\\x1B[0;31m',\n        green: '\\x1B[0;32m',\n        yellow: '\\x1B[0;33m',\n        blue: '\\x1B[0;34m',\n        bold_grey: '\\x1B[1;30m'\n      };\n      if (!cavailable) {\n        return function(color) {\n          return function(s) {\n            return s;\n          };\n        };\n      } else {\n        return function(color) {\n          return function(s) {\n            return \"\" + palette[color] + s + '\\x1B[0m';\n          };\n        };\n      }\n    })();\n    log_label = (function() {\n      var flag_palette, op_flag;\n      flag_palette = {\n        '#': 'bold_grey',\n        'I': 'green',\n        'E': 'red',\n        'W': 'yellow'\n      };\n      op_flag = function(op) {\n        if (op === 'log') {\n          return '#';\n        } else {\n          return op[0].toUpperCase();\n        }\n      };\n      return function(op) {\n        var flag;\n        flag = op_flag(op);\n        return dye(flag_palette[flag])(flag);\n      };\n    })();\n    histories = [];\n    factory = function(op) {\n      var prefix;\n      prefix = \"\" + (dye('bold_grey')('#')) + (log_label(op));\n      return function() {\n        var args, ball, eval_result, expr, f, i, len, start_time, time_used;\n        args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        ball = [];\n        for (i = 0, len = args.length; i < len; i++) {\n          f = args[i];\n          if (typeof f === 'function') {\n            expr = function_literal(f);\n            start_time = time_now();\n            eval_result = f();\n            time_used = time_now() - start_time;\n            ball.push(prefix + \" \" + (dye('green')(expr)) + \" \" + (dye('bold_grey')('==>')), eval_result);\n            if (time_used > 0) {\n              ball.push(dye('yellow')(\"[\" + time_used + \"ms]\"));\n            }\n          } else {\n            ball.push(\"\" + prefix, f);\n          }\n        }\n        console[op].apply(console, ball);\n        histories.push(ball);\n        if (histories.length >= 10) {\n          histories.shift();\n        }\n        return null;\n      };\n    };\n    got = factory('log');\n    got.histories = histories;\n    got.info = factory('info');\n    got.warn = factory('warn');\n    got.error = got.err = factory('error');\n    return got;\n  })();\n  assert = function(f, msg) {\n    var e, r, ref;\n    if (!(f instanceof Function)) {\n      ref = [msg, f], f = ref[0], msg = ref[1];\n    }\n    try {\n      r = f();\n    } catch (_error) {\n      e = _error;\n      throw Error(\"Assertion \" + (msg != null ? msg : function_literal(f)) + \" Unknown:\\n\" + e);\n    }\n    if (!r) {\n      throw Error(\"Assertion \" + (msg != null ? msg : function_literal(f)) + \" Failed!\");\n    }\n  };\n  assertEq = function(l, r) {\n    var e, lv, rv;\n    try {\n      lv = l();\n      rv = r();\n    } catch (_error) {\n      e = _error;\n      throw Error(\"Equation Between \" + (function_literal(l)) + \" And \" + (function_literal(r)) + \" Unknown:\\n\" + e);\n    }\n    if (lv !== rv) {\n      throw Error(\"Equation Failed:\\n\\t\" + (function_literal(l)) + \" IS \" + lv + \" BUT\\n\\t\" + (function_literal(r)) + \" IS \" + rv + \".\");\n    }\n  };\n  assertEqOn = function(f) {\n    return function(l, r) {\n      var e, flv, frv, lv, rv;\n      try {\n        lv = l();\n        rv = r();\n        flv = f(lv);\n        frv = f(rv);\n      } catch (_error) {\n        e = _error;\n        throw Error(\"MAPPED Equation Between \" + (function_literal(l)) + \" And \" + (function_literal(r)) + \" Unknown:\\n\" + e);\n      }\n      if (flv !== frv) {\n        throw Error(\"Equation Failed:\\n\\t\" + (function_literal(l)) + \" IS \" + lv + \" AND MAPPED TO \" + flv + \" BUT\\n\\t\" + (function_literal(r)) + \" IS \" + rv + \" AND MAPPED TO \" + frv + \".\");\n      }\n    };\n  };\n  securely = function(f) {\n    return function() {\n      var args;\n      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      args = deepcopy(args);\n      return f.apply(null, args);\n    };\n  };\n  dict = function(pairs) {\n    var d, i, k, len, ref, v;\n    d = {};\n    for (i = 0, len = pairs.length; i < len; i++) {\n      ref = pairs[i], k = ref[0], v = ref[1];\n      d[k] = v;\n    }\n    return d;\n  };\n  ref = (function() {\n    var cp;\n    cp = function(root, dep) {\n      var k, r, v;\n      if (dep === 0 || (root == null) || typeof root !== 'object') {\n        return root;\n      }\n      if (root instanceof Array) {\n        r = (function() {\n          var i, len, results;\n          results = [];\n          for (i = 0, len = root.length; i < len; i++) {\n            v = root[i];\n            results.push(cp(v, dep - 1));\n          }\n          return results;\n        })();\n      } else {\n        r = {};\n        for (k in root) {\n          v = root[k];\n          r[k] = cp(v, dep - 1);\n        }\n      }\n      return r;\n    };\n    return {\n      copy: function(obj, depth) {\n        if (depth == null) {\n          depth = 1;\n        }\n        return cp(obj, depth);\n      },\n      deepcopy: function(obj, depth) {\n        if (depth == null) {\n          depth = Infinity;\n        }\n        return cp(obj, depth);\n      }\n    };\n  })(), copy = ref.copy, deepcopy = ref.deepcopy;\n  extend = function(base) {\n    return function() {\n      var d, defaults, i, k, len, v;\n      defaults = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      for (i = 0, len = defaults.length; i < len; i++) {\n        d = defaults[i];\n        if (d != null) {\n          for (k in d) {\n            v = d[k];\n            if (base[k] == null) {\n              base[k] = v;\n            }\n          }\n        }\n      }\n      return base;\n    };\n  };\n  update = function(base) {\n    return function() {\n      var d, i, k, len, updates, v;\n      updates = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      for (i = 0, len = updates.length; i < len; i++) {\n        d = updates[i];\n        if (d != null) {\n          for (k in d) {\n            v = d[k];\n            base[k] = v;\n          }\n        }\n      }\n      return base;\n    };\n  };\n  overload = function(_d) {\n    var d, fallback;\n    d = copy(_d);\n    fallback = d['_'];\n    if (fallback != null) {\n      return function() {\n        var args, ref1;\n        args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        return ((ref1 = d[args.length]) != null ? ref1 : fallback).apply(null, args);\n      };\n    } else {\n      return function() {\n        var args, f;\n        args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        f = d[args.length];\n        if (f == null) {\n          throw Error(\"This Function Can't Accept \" + args.length + \" Args\");\n        } else {\n          return f.apply(null, args);\n        }\n      };\n    }\n  };\n  return {\n    log: log,\n    assert: assert,\n    assertEq: assertEq,\n    assertEqOn: assertEqOn,\n    dict: dict,\n    copy: copy,\n    deepcopy: deepcopy,\n    securely: securely,\n    extend: extend,\n    update: update,\n    overload: overload\n  };\n};\n\nmodule.exports = this_module();\n\n\n\n}).call(this,require('_process'))\n\n},{\"_process\":2}]},{},[1])(1)\n});\n\n\n//# sourceMappingURL=coffee-mate.js.map","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            currentQueue[queueIndex].run();\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (!draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.lazy = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nvar this_module,\n  slice = [].slice;\n\nthis_module = function(arg) {\n  var Iterator, LazyList, Symbol, all, any, best, brk, cartProd, concat, cons, drop, dropWhile, enumerate, filter, foldl, foreach, group, groupBy, groupOn, head, iterate, last, lazy, length, list, map, naturals, nil, partition, permutations, primes, randoms, range, ref, repeat, reverse, scanl, sort, sortOn, streak, take, takeWhile, zip, zipWith;\n  Symbol = arg.Symbol;\n  LazyList = function(f) {\n    f[Symbol.iterator] = function() {\n      return f();\n    };\n    f.toString = function() {\n      return \"LazyList\";\n    };\n    return f;\n  };\n  nil = LazyList(function() {\n    return nil;\n  });\n  nil.toString = function() {\n    return 'nil';\n  };\n  Iterator = function(it) {\n    it.next = function() {\n      var r;\n      r = it();\n      return {\n        value: r,\n        done: r === nil\n      };\n    };\n    it.toString = function() {\n      return \"Iterator\";\n    };\n    return it;\n  };\n  naturals = LazyList(function() {\n    var i;\n    i = -1;\n    return Iterator(function() {\n      return ++i;\n    });\n  });\n  range = function() {\n    var args;\n    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    if (args.length === 0) {\n      return naturals;\n    } else if (args.length === 1) {\n      return LazyList(function() {\n        var i, stop;\n        stop = args[0];\n        i = -1;\n        return Iterator(function() {\n          if (++i < stop) {\n            return i;\n          } else {\n            return nil;\n          }\n        });\n      });\n    } else if (args.length === 2) {\n      return LazyList(function() {\n        var i, start, stop;\n        start = args[0], stop = args[1];\n        if (start < stop) {\n          i = start - 1;\n          return Iterator(function() {\n            if (++i < stop) {\n              return i;\n            } else {\n              return nil;\n            }\n          });\n        } else {\n          i = start + 1;\n          return Iterator(function() {\n            if (--i > stop) {\n              return i;\n            } else {\n              return nil;\n            }\n          });\n        }\n      });\n    } else {\n      return LazyList(function() {\n        var i, start, step, stop;\n        start = args[0], stop = args[1], step = args[2];\n        if (stop !== start && (stop - start) * step < 0) {\n          throw 'ERR IN range(): YOU ARE CREATING AN UNLIMITTED RANGE';\n        }\n        i = start - step;\n        if (start < stop) {\n          return Iterator(function() {\n            if ((i += step) < stop) {\n              return i;\n            } else {\n              return nil;\n            }\n          });\n        } else {\n          return Iterator(function() {\n            if ((i += step) > stop) {\n              return i;\n            } else {\n              return nil;\n            }\n          });\n        }\n      });\n    }\n  };\n  primes = LazyList(function() {\n    return filter(function(x) {\n      return all(function(p) {\n        return x % p !== 0;\n      })(takeWhile(function(p) {\n        return p * p <= x;\n      })(range(2, Infinity)));\n    })(range(2, Infinity))();\n  });\n  lazy = function(xs) {\n    var ref;\n    if (typeof xs === 'function') {\n      if (xs[Symbol.iterator] != null) {\n        return xs;\n      } else {\n        return LazyList(xs);\n      }\n    } else if ((ref = xs.constructor) === Array || ref === String) {\n      return LazyList(function() {\n        var i;\n        i = -1;\n        return Iterator(function() {\n          if ((++i) < xs.length) {\n            return xs[i];\n          } else {\n            return nil;\n          }\n        });\n      });\n    } else if (xs[Symbol.iterator] != null) {\n      return LazyList(function() {\n        var it;\n        it = xs[Symbol.iterator]();\n        return Iterator(function() {\n          var r;\n          r = it.next();\n          if (r.done) {\n            return nil;\n          } else {\n            return r.value;\n          }\n        });\n      });\n    } else {\n      throw Error('lazy(xs): xs is neither Array nor Iterable');\n    }\n  };\n  enumerate = function(it) {\n    if ((it[Symbol.iterator] != null) || it instanceof Array) {\n      return zip(naturals, it);\n    } else {\n      return LazyList(function() {\n        var i, keys;\n        keys = Object.keys(it);\n        i = -1;\n        return Iterator(function() {\n          var k;\n          if (++i < keys.length) {\n            return [(k = keys[i]), it[k]];\n          } else {\n            return nil;\n          }\n        });\n      });\n    }\n  };\n  repeat = function(x) {\n    return LazyList(function() {\n      return Iterator(function() {\n        return x;\n      });\n    });\n  };\n  iterate = function(next, init) {\n    return LazyList(function() {\n      var st;\n      st = init;\n      return Iterator(function() {\n        var r;\n        r = st;\n        st = next(st);\n        return r;\n      });\n    });\n  };\n  randoms = (function() {\n    var hash, normal, salt;\n    salt = Math.PI / 3.0;\n    hash = function(x) {\n      x = Math.sin(x + salt) * 1e4;\n      return x - Math.floor(x);\n    };\n    normal = function(seed) {\n      return iterate(hash, hash(seed));\n    };\n    return function(opts) {\n      var k, ref, ref1, rg, s, seed;\n      if (opts == null) {\n        return normal(0);\n      } else if (typeof opts === 'number') {\n        return normal(opts);\n      } else {\n        seed = (ref = opts.seed) != null ? ref : 0;\n        rg = opts.range;\n        if (rg != null) {\n          if (typeof rg === 'number') {\n            return map(function(x) {\n              return Math.floor(x * rg);\n            })(normal(seed));\n          } else {\n            ref1 = [rg[0], rg[1] - rg[0] + 1], s = ref1[0], k = ref1[1];\n            return map(function(x) {\n              return s + Math.floor(x * k);\n            })(normal(seed));\n          }\n        } else {\n          return normal(seed);\n        }\n      }\n    };\n  })();\n  permutations = (function() {\n    var next_permutation;\n    next_permutation = function(x) {\n      var l, m, r, ref, ref1;\n      x = x.slice(0);\n      l = x.length - 1;\n      while (l >= 1 && x[l] <= x[l - 1]) {\n        --l;\n      }\n      if (l !== 0) {\n        m = x.length - 1;\n        while (m > l - 1 && x[m] <= x[l - 1]) {\n          --m;\n        }\n        ref = [x[l - 1], x[m]], x[m] = ref[0], x[l - 1] = ref[1];\n      }\n      r = x.length - 1;\n      while (l < r) {\n        ref1 = [x[r], x[l]], x[l] = ref1[0], x[r] = ref1[1];\n        ++l;\n        --r;\n      }\n      return x;\n    };\n    return function(xs) {\n      var arr;\n      arr = list(xs);\n      if (arr.length === 0) {\n        return nil;\n      } else {\n        return cons(arr.slice(0))(takeWhile(function(ls) {\n          return json(ls) !== json(arr);\n        })(drop(1)(iterate(next_permutation, arr))));\n      }\n    };\n  })();\n  take = function(n) {\n    return function(xs) {\n      return LazyList(function() {\n        var c, iter;\n        iter = lazy(xs)[Symbol.iterator]();\n        c = -1;\n        return Iterator(function() {\n          if (++c < n) {\n            return iter();\n          } else {\n            return nil;\n          }\n        });\n      });\n    };\n  };\n  takeWhile = function(ok) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter;\n        iter = lazy(xs)[Symbol.iterator]();\n        return Iterator(function() {\n          var x;\n          if ((x = iter()) !== nil && ok(x)) {\n            return x;\n          } else {\n            return nil;\n          }\n        });\n      });\n    };\n  };\n  drop = function(n) {\n    return function(xs) {\n      return LazyList(function() {\n        var finished, i, iter, j, ref;\n        iter = lazy(xs)[Symbol.iterator]();\n        finished = false;\n        for (i = j = 0, ref = n; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n          finished || (finished = iter() === nil);\n          if (finished) {\n            break;\n          }\n        }\n        if (finished) {\n          return function() {\n            return nil;\n          };\n        } else {\n          return iter;\n        }\n      });\n    };\n  };\n  dropWhile = function(ok) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter, x;\n        iter = lazy(xs)[Symbol.iterator]();\n        while (ok(x = iter()) && x !== nil) {\n          null;\n        }\n        return Iterator(function() {\n          var prevx, ref;\n          ref = [x, iter()], prevx = ref[0], x = ref[1];\n          return prevx;\n        });\n      });\n    };\n  };\n  cons = function(x) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter;\n        iter = null;\n        return Iterator(function() {\n          if (iter === null) {\n            iter = lazy(xs)[Symbol.iterator]();\n            return x;\n          } else {\n            return iter();\n          }\n        });\n      });\n    };\n  };\n  map = function(f) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter;\n        iter = lazy(xs)[Symbol.iterator]();\n        return Iterator(function() {\n          var x;\n          if ((x = iter()) !== nil) {\n            return f(x);\n          } else {\n            return nil;\n          }\n        });\n      });\n    };\n  };\n  filter = function(ok) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter;\n        iter = lazy(xs)[Symbol.iterator]();\n        return Iterator(function() {\n          var x;\n          while (!ok(x = iter()) && x !== nil) {\n            null;\n          }\n          return x;\n        });\n      });\n    };\n  };\n  scanl = function(f, r) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter;\n        iter = lazy(xs)[Symbol.iterator]();\n        return Iterator(function() {\n          var got, x;\n          got = r;\n          r = (x = iter()) !== nil ? f(r, x) : nil;\n          return got;\n        });\n      });\n    };\n  };\n  streak = function(n) {\n    if (n < 1) {\n      return nil;\n    } else {\n      return function(xs) {\n        return drop(n - 1)(LazyList(function() {\n          var buf, iter;\n          iter = lazy(xs)[Symbol.iterator]();\n          buf = [];\n          return Iterator(function() {\n            var x;\n            if ((x = iter()) === nil) {\n              return nil;\n            }\n            buf.push(x);\n            if (buf.length > n) {\n              buf.shift(1);\n            }\n            return buf.slice(0);\n          });\n        }));\n      };\n    }\n  };\n  reverse = function(xs) {\n    var ref;\n    if ((ref = xs.constructor) === Array || ref === String) {\n      return LazyList(function() {\n        var i;\n        i = xs.length;\n        return Iterator(function() {\n          if ((--i) >= 0) {\n            return xs[i];\n          } else {\n            return nil;\n          }\n        });\n      });\n    } else {\n      return list(lazy(xs)).reverse();\n    }\n  };\n  sort = function(xs) {\n    var arr;\n    arr = list(lazy(xs));\n    return arr.sort();\n  };\n  sortOn = function(f) {\n    return function(xs) {\n      var arr;\n      arr = list(lazy(xs));\n      return arr.sort(function(a, b) {\n        var fa, fb;\n        return ((fa = f(a)) > (fb = f(b))) - (fa < fb);\n      });\n    };\n  };\n  group = function(xs) {\n    return LazyList(function() {\n      var iter, t, x;\n      iter = lazy(xs)[Symbol.iterator]();\n      t = nil;\n      x = iter();\n      return Iterator(function() {\n        if (x === nil) {\n          return nil;\n        } else if (x !== t) {\n          t = x;\n          return LazyList(function() {\n            return Iterator(function() {\n              var r;\n              if ((r = x) === t) {\n                x = iter();\n                return r;\n              } else {\n                return nil;\n              }\n            });\n          });\n        }\n      });\n    });\n  };\n  groupBy = function(eq) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter, t, x;\n        iter = lazy(xs)[Symbol.iterator]();\n        t = nil;\n        x = iter();\n        return Iterator(function() {\n          if (x === nil) {\n            return nil;\n          } else if (!eq(x, t)) {\n            t = x;\n            return LazyList(function() {\n              return Iterator(function() {\n                var r;\n                if (eq((r = x), t)) {\n                  x = iter();\n                  return r;\n                } else {\n                  return nil;\n                }\n              });\n            });\n          }\n        });\n      });\n    };\n  };\n  groupOn = function(f) {\n    return function(xs) {\n      var k, memo, v;\n      memo = {};\n      foreach(xs, function(x) {\n        var y;\n        y = f(x);\n        if (memo[y] == null) {\n          memo[y] = [];\n        }\n        return memo[y].push(x);\n      });\n      return (function() {\n        var results;\n        results = [];\n        for (k in memo) {\n          v = memo[k];\n          results.push(v);\n        }\n        return results;\n      })();\n    };\n  };\n  partition = function(f) {\n    return function(xs) {\n      var memo;\n      memo = [[], []];\n      foreach(xs, function(x) {\n        var y;\n        y = !f(x) + 0;\n        return memo[y].push(x);\n      });\n      return memo;\n    };\n  };\n  concat = function(xss) {\n    return LazyList(function() {\n      var iter, xs, xs_iter;\n      xs_iter = lazy(xss)[Symbol.iterator]();\n      xs = xs_iter();\n      iter = lazy(xs)[Symbol.iterator]();\n      return Iterator(function() {\n        var x;\n        if ((x = iter()) !== nil) {\n          return x;\n        } else if ((xs = xs_iter()) !== nil) {\n          iter = lazy(xs)[Symbol.iterator]();\n          return iter();\n        } else {\n          return nil;\n        }\n      });\n    });\n  };\n  ref = (function() {\n    var finished, zip, zipWith;\n    finished = function(arr) {\n      var j, len1, x;\n      for (j = 0, len1 = arr.length; j < len1; j++) {\n        x = arr[j];\n        if (x === nil) {\n          return true;\n        }\n      }\n      return false;\n    };\n    zip = function() {\n      var xss;\n      xss = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      return LazyList(function() {\n        var iters, xs;\n        iters = (function() {\n          var j, len1, results;\n          results = [];\n          for (j = 0, len1 = xss.length; j < len1; j++) {\n            xs = xss[j];\n            results.push(lazy(xs)[Symbol.iterator]());\n          }\n          return results;\n        })();\n        return Iterator(function() {\n          var iter, next;\n          next = (function() {\n            var j, len1, results;\n            results = [];\n            for (j = 0, len1 = iters.length; j < len1; j++) {\n              iter = iters[j];\n              results.push(iter());\n            }\n            return results;\n          })();\n          if (finished(next)) {\n            return nil;\n          } else {\n            return next;\n          }\n        });\n      });\n    };\n    zipWith = function(f) {\n      return function() {\n        var xss;\n        xss = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        return LazyList(function() {\n          var iters, xs;\n          iters = (function() {\n            var j, len1, results;\n            results = [];\n            for (j = 0, len1 = xss.length; j < len1; j++) {\n              xs = xss[j];\n              results.push(lazy(xs)[Symbol.iterator]());\n            }\n            return results;\n          })();\n          return Iterator(function() {\n            var iter, next;\n            next = (function() {\n              var j, len1, results;\n              results = [];\n              for (j = 0, len1 = iters.length; j < len1; j++) {\n                iter = iters[j];\n                results.push(iter());\n              }\n              return results;\n            })();\n            if (finished(next)) {\n              return nil;\n            } else {\n              return f.apply(null, next);\n            }\n          });\n        });\n      };\n    };\n    return {\n      zip: zip,\n      zipWith: zipWith\n    };\n  })(), zip = ref.zip, zipWith = ref.zipWith;\n  cartProd = (function() {\n    var apply_vector, inc_vector;\n    inc_vector = function(limits) {\n      var len_minus_1;\n      len_minus_1 = limits.length - 1;\n      return function(vec) {\n        var i;\n        i = len_minus_1;\n        while (!(++vec[i] < limits[i] || i <= 0)) {\n          vec[i--] = 0;\n        }\n        return vec;\n      };\n    };\n    apply_vector = function(space) {\n      var len;\n      len = space.length;\n      return function(vec) {\n        var i, j, ref1, results;\n        results = [];\n        for (i = j = 0, ref1 = len; 0 <= ref1 ? j < ref1 : j > ref1; i = 0 <= ref1 ? ++j : --j) {\n          results.push(space[i][vec[i]]);\n        }\n        return results;\n      };\n    };\n    return function() {\n      var xss;\n      xss = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      return LazyList(function() {\n        var get_value, i, inc, j, len, len1, limits, v, xs;\n        xss = (function() {\n          var j, len1, results;\n          results = [];\n          for (j = 0, len1 = xss.length; j < len1; j++) {\n            xs = xss[j];\n            results.push(list(xs));\n          }\n          return results;\n        })();\n        limits = (function() {\n          var j, ref1, results;\n          results = [];\n          for (i = j = 0, ref1 = xss.length; 0 <= ref1 ? j < ref1 : j > ref1; i = 0 <= ref1 ? ++j : --j) {\n            results.push(xss[i].length);\n          }\n          return results;\n        })();\n        for (j = 0, len1 = limits.length; j < len1; j++) {\n          len = limits[j];\n          if (len === 0) {\n            return nil;\n          }\n        }\n        inc = inc_vector(limits);\n        get_value = apply_vector(xss);\n        v = (function() {\n          var o, ref1, results;\n          results = [];\n          for (i = o = 0, ref1 = xss.length; 0 <= ref1 ? o < ref1 : o > ref1; i = 0 <= ref1 ? ++o : --o) {\n            results.push(0);\n          }\n          return results;\n        })();\n        return Iterator(function() {\n          var r;\n          if (v[0] < limits[0]) {\n            r = get_value(v);\n            inc(v);\n            return r;\n          } else {\n            return nil;\n          }\n        });\n      });\n    };\n  })();\n  list = function(xs) {\n    var it, n, results, results1, x;\n    if (xs instanceof Array) {\n      return xs;\n    } else if (typeof xs === 'function') {\n      it = xs[Symbol.iterator]();\n      results = [];\n      while ((x = it()) !== nil) {\n        results.push(x);\n      }\n      return results;\n    } else if (xs[Symbol.iterator] != null) {\n      it = lazy(xs)[Symbol.iterator]();\n      results1 = [];\n      while ((x = it()) !== nil) {\n        results1.push(x);\n      }\n      return results1;\n    } else if (typeof xs === 'number') {\n      n = xs;\n      return function(xs) {\n        return list(take(n)(xs));\n      };\n    } else {\n      throw Error('list(xs): xs is neither Array nor Iterable');\n    }\n  };\n  head = function(xs) {\n    var iter, ref1, ref2;\n    if ((ref1 = xs.constructor) === Array || ref1 === String) {\n      return (ref2 = xs[0]) != null ? ref2 : nil;\n    } else {\n      iter = lazy(xs)[Symbol.iterator]();\n      return iter();\n    }\n  };\n  last = function(xs) {\n    var iter, r, ref1, ref2, x;\n    if ((ref1 = xs.constructor) === Array || ref1 === String) {\n      return (ref2 = xs[xs.length - 1]) != null ? ref2 : nil;\n    } else {\n      iter = lazy(xs)[Symbol.iterator]();\n      r = nil;\n      while ((x = iter()) !== nil) {\n        r = x;\n      }\n      return r;\n    }\n  };\n  length = function(xs) {\n    var iter, r, ref1, x;\n    if ((ref1 = xs.constructor) === Array || ref1 === String) {\n      return xs.length;\n    } else {\n      iter = lazy(xs)[Symbol.iterator]();\n      r = 0;\n      while ((x = iter()) !== nil) {\n        ++r;\n      }\n      return r;\n    }\n  };\n  foldl = function(f, init) {\n    return function(xs) {\n      var iter, r, x;\n      r = init;\n      iter = lazy(xs)[Symbol.iterator]();\n      while ((x = iter()) !== nil) {\n        r = f(r, x);\n      }\n      return r;\n    };\n  };\n  best = function(better) {\n    return function(xs) {\n      var it, iter, r;\n      iter = lazy(xs)[Symbol.iterator]();\n      if ((r = iter()) === nil) {\n        return null;\n      }\n      while ((it = iter()) !== nil) {\n        r = better(it, r) ? it : r;\n      }\n      return r;\n    };\n  };\n  all = function(f) {\n    if (typeof f !== 'function') {\n      f = (function(x) {\n        return x === f;\n      });\n    }\n    return function(xs) {\n      var iter, x;\n      iter = lazy(xs)[Symbol.iterator]();\n      while ((x = iter()) !== nil) {\n        if (!f(x)) {\n          return false;\n        }\n      }\n      return true;\n    };\n  };\n  any = function(f) {\n    var all_not;\n    all_not = all(function(x) {\n      return !f(x);\n    });\n    return function(xs) {\n      return !(all_not(xs));\n    };\n  };\n  brk = function() {\n    return brk;\n  };\n  brk.toString = function() {\n    return 'foreach.break';\n  };\n  foreach = function(xs, callback, fruit) {\n    var iter, x;\n    iter = lazy(xs)[Symbol.iterator]();\n    while ((x = iter()) !== nil) {\n      if (callback(x, fruit) === brk) {\n        break;\n      }\n    }\n    return fruit;\n  };\n  Object.defineProperties(foreach, {\n    \"break\": {\n      writable: false,\n      configurable: false,\n      enumerable: false,\n      value: brk\n    }\n  });\n  return {\n    nil: nil,\n    LazyList: LazyList,\n    Iterator: Iterator,\n    Symbol: Symbol,\n    naturals: naturals,\n    range: range,\n    primes: primes,\n    lazy: lazy,\n    enumerate: enumerate,\n    repeat: repeat,\n    iterate: iterate,\n    randoms: randoms,\n    permutations: permutations,\n    cons: cons,\n    map: map,\n    filter: filter,\n    take: take,\n    takeWhile: takeWhile,\n    drop: drop,\n    dropWhile: dropWhile,\n    scanl: scanl,\n    streak: streak,\n    reverse: reverse,\n    sort: sort,\n    sortOn: sortOn,\n    group: group,\n    groupBy: groupBy,\n    groupOn: groupOn,\n    partition: partition,\n    concat: concat,\n    zip: zip,\n    zipWith: zipWith,\n    cartProd: cartProd,\n    list: list,\n    head: head,\n    last: last,\n    length: length,\n    foldl: foldl,\n    best: best,\n    all: all,\n    any: any,\n    foreach: foreach\n  };\n};\n\nmodule.exports = this_module({\n  Symbol: typeof Symbol !== \"undefined\" && Symbol !== null ? Symbol : {\n    iterator: 'iter'\n  }\n});\n\n\n},{}]},{},[1])(1)\n});\n\n\n//# sourceMappingURL=lazy.js.map","this_module = ({best}) ->\n\t# transformers\n\tflip = (f) ->\n\t\t(x) -> (y) -> f(y)(x)\n\n\tcombine = (f) -> (g) ->\n\t\t(x) -> f g(x)\n\n\tcurry2 = (f) ->\n\t\t(a) -> (b) -> f(a, b)\n\n\tcurry3 = (f) ->\n\t\t(a) -> (b) -> (c) -> f(a, b, c)\n\n\tuncurry2 = (f) ->\n\t\t(a, b) -> f(a)(b)\n\n\tuncurry3 = (f) ->\n\t\t(a, b, c) -> f(a)(b)(c)\n\n\tpack = (f) ->\n\t\t(arr) -> f(arr...)\n\n\tunpack = (f) ->\n\t\t(arr...) -> f(arr)\n\n\t# seek & pluck in Array or Object\n\tseek = (arr) ->\n\t\t(i) -> arr[i]\n\n\tpluck = (attr) ->\n\t\t(d) -> d[attr]\n\n\t# compare\n\tequal = (it) ->\n\t\t(x) -> x == it\n\n\tnotEqual = (it) ->\n\t\t(x) -> x != it\n\n\tlessThan = (it) ->\n\t\t(x) -> x < it\n\n\tgreaterThan = (it) ->\n\t\t(x) -> x > it\n\n\tlessEqual = (it) ->\n\t\t(x) -> x <= it\n\n\tgreaterEqual = (it) ->\n\t\t(x) -> x >= it\n\n\t# math\n\tplus = (it) ->\n\t\t(x) -> x + it\n\n\tminus = (it) ->\n\t\t(x) -> x - it\n\n\tabs = Math.abs\n\tfloor = Math.floor\n\tceil = Math.ceil\n\n\tprecise = (n) ->\n\t\t(x) -> parseFloat x.toPrecision(n)\n\n\taccept_multi_or_array = (f) ->\n\t\t(arr...) ->\n\t\t\tf(if arr.length == 1 and arr.first instanceof Array then arr.first else arr)\n\n\tsum = accept_multi_or_array (arr) ->\n\t\tarr = arr.first if arr.length == 1 and arr.first instanceof Array\n\t\tr = 0\n\t\tr += x for x in arr\n\t\tr\n\n\tmax = accept_multi_or_array (arr) ->\n\t\tbest((a, b) -> a > b) arr\n\n\tmin = accept_multi_or_array (arr) ->\n\t\tbest((a, b) -> a < b) arr\n\n\tmax_index = accept_multi_or_array (arr) ->\n\t\tbest((i, j) -> arr[i] > arr[j]) [0...arr.length]\n\n\tmin_index = accept_multi_or_array (arr) ->\n\t\tbest((i, j) -> arr[i] < arr[j]) [0...arr.length]\n\n\treturn {\n\t\tflip, combine,\n\t\tcurry2, curry3, uncurry2, uncurry3, pack, unpack,\n\t\tseek, pluck,\n\t\tequal, notEqual, lessThan, lessEqual, greaterThan, greaterEqual,\n\t\tplus, minus, abs, floor, ceil, precise,\n\t\tsum, max, min, max_index, min_index,\n\t}\n\nmodule.exports = this_module\n\tbest: require('lazy.coffee').best\n\n","this_module = () ->\n\tint = (s, base) -> if typeof(s) == 'string' then (r = parseInt(s, base); unless s.slice? and r == parseInt(s.slice(0,-1), base) then r else null) else parseInt(0 + s)\n\tfloat = (s) -> if /^-?[0-9]*(\\.[0-9]+)?([eE]-?[0-9]+)?$/.test(s) then parseFloat(s) else null\n\tstr = (x, base) -> x.toString(base)\n\tbool = (x) -> if x in [true, false] then x else null\n\thex = (x) -> x.toString(16)\n\tord = (c) -> c.charCodeAt()\n\tchr = (x) -> String.fromCharCode(x)\n\tjson = (it, indent) -> JSON.stringify(it, null, indent)\n\tobj = (s) -> JSON.parse(s)\n\n\treturn {\n\t\tint, float, bool, str, hex, ord, chr, json, obj,\n\t}\n\nmodule.exports = this_module()\n\n","this_module = () ->\n\tchurch = (n) -> #the nth church number\n\t\titer = (f, n, r) ->\n\t\t\tif n == 0 then r else iter(f, n - 1, f(r))\n\t\t(f) ->\n\t\t\t(x) -> iter(f, n + 0, x)\n\n\tY = (f) -> #the Y combinator\n\t\t((x) -> (x x)) ((x) -> (f ((y) -> ((x x) y))))\n\n\tmemoize = (f, get_key = ((args...) -> json(args))) ->\n\t\tcache = {}\n\t\t(args...) ->\n\t\t\tkey = get_key(args...)\n\t\t\tcached = cache[key]\n\t\t\tif cached?\n\t\t\t\tcached\n\t\t\telse\n\t\t\t\tr = f(args...)\n\t\t\t\tcache[key] = r\n\t\t\t\tr\n\n\tfix = Y\n\n\tmemoFix = (ff) ->\n\t\tf = memoize (ff ((args...) -> f(args...)))\n\t\treturn f\n\n\treturn {\n\t\tchurch, Y, memoize, fix, memoFix,\n\t}\n\nmodule.exports = this_module()\n\n","this_module = () ->\n\turi_encoder = (component_packer = str) ->\n\t\t(obj) ->\n\t\t\t(\"#{encodeURIComponent(k)}=#{encodeURIComponent component_packer v}\" for k, v of obj).join('&')\n\n\turi_decoder = (component_unpacker = ((s) -> s)) ->\n\t\t(str) ->\n\t\t\td = {}\n\t\t\tfor s in (str.match /[^?=&]+=[^&]*/g) ? []\n\t\t\t\t[..., k, v] = s.match /([^=]+)=(.*)/\n\t\t\t\td[decodeURIComponent(k)] = (component_unpacker decodeURIComponent v)\n\t\t\treturn d\n\n\treturn {\n\t\turi_encoder, uri_decoder,\n\t}\n\nmodule.exports = this_module()\n\n","this_module = () ->\n\tfunction_literal = (f) ->\n\t\texpr = f.toString().replace(/^\\s*function\\s?\\(\\s?\\)\\s?{\\s*return\\s*([^]*?);?\\s*}$/, '$1')\n\t\texpr = expr.replace(/[\\r\\n]{1,2}\\s*/g, '') if expr.length <= 100\n\t\treturn expr\n\n\ttime_now = ->\n\t\t(new Date).getTime()\n\n\tlog = do -> #log an expression with it's literal and time used\n\t\tdye = do ->\n\t\t\t# ANSI Terminal Colors.\n\t\t\tcavailable = (not window?) and process? and not process.env.NODE_DISABLE_COLORS\n\t\t\tpalette =\n\t\t\t\tbold: '\\x1B[0;1m'\n\t\t\t\tred: '\\x1B[0;31m'\n\t\t\t\tgreen: '\\x1B[0;32m'\n\t\t\t\tyellow: '\\x1B[0;33m'\n\t\t\t\tblue: '\\x1B[0;34m'\n\t\t\t\tbold_grey: '\\x1B[1;30m'\n\t\t\tif not cavailable\n\t\t\t\t(color) -> (s) -> s\n\t\t\telse\n\t\t\t\t(color) ->\n\t\t\t\t\t(s) -> \"#{palette[color]}#{s}#{'\\x1B[0m'}\"\n\n\t\tlog_label = do ->\n\t\t\tflag_palette =\n\t\t\t\t'#': 'bold_grey'\n\t\t\t\t'I': 'green'\n\t\t\t\t'E': 'red'\n\t\t\t\t'W': 'yellow'\n\t\t\top_flag = (op) ->\n\t\t\t\tif op == 'log' then '#' else op[0].toUpperCase()\n\t\t\t(op) ->\n\t\t\t\tflag = op_flag(op)\n\t\t\t\tdye(flag_palette[flag]) flag\n\n\t\thistories = []\n\t\tfactory = (op) ->\n\t\t\tprefix = \"#{dye('bold_grey') '#'}#{log_label op}\"\n\t\t\t(args...) ->\n\t\t\t\tball = []\n\t\t\t\tfor f in args\n\t\t\t\t\tif typeof f == 'function'\n\t\t\t\t\t\texpr = function_literal(f)\n\t\t\t\t\t\tstart_time = time_now()\n\t\t\t\t\t\teval_result = f()\n\t\t\t\t\t\ttime_used = time_now() - start_time\n\t\t\t\t\t\tball.push(\"#{prefix} #{dye('green') expr} #{dye('bold_grey') '==>'}\", eval_result)\n\t\t\t\t\t\tball.push(dye('yellow') \"[#{time_used}ms]\") if time_used > 0\n\t\t\t\t\telse\n\t\t\t\t\t\tball.push(\"#{prefix}\", f)\n\t\t\t\tconsole[op] ball...\n\t\t\t\thistories.push(ball)\n\t\t\t\thistories.shift() if histories.length >= 10\n\t\t\t\treturn null\n\t\tgot = factory('log')\n\t\tgot.histories = histories\n\t\tgot.info = factory('info')\n\t\tgot.warn = factory('warn')\n\t\tgot.error = got.err = factory('error')\n\t\treturn got\n\n\tassert = (f, msg) ->\n\t\t[f, msg] = [msg, f] if f not instanceof Function\n\t\ttry\n\t\t\tr = f()\n\t\tcatch e\n\t\t\tthrow Error \"Assertion #{msg ? function_literal(f)} Unknown:\\n#{e}\"\n\t\tif not r\n\t\t\tthrow Error \"Assertion #{msg ? function_literal(f)} Failed!\"\n\n\tassertEq = (l, r) ->\n\t\ttry\n\t\t\tlv = l()\n\t\t\trv = r()\n\t\tcatch e\n\t\t\tthrow Error \"Equation Between #{function_literal(l)} And #{function_literal(r)} Unknown:\\n#{e}\"\n\t\tif lv isnt rv\n\t\t\tthrow Error \"Equation Failed:\\n\\t#{function_literal(l)} IS #{lv} BUT\\n\\t#{function_literal(r)} IS #{rv}.\"\n\n\tassertEqOn = (f) -> (l, r) ->\n\t\ttry\n\t\t\tlv = l()\n\t\t\trv = r()\n\t\t\tflv = f(lv)\n\t\t\tfrv = f(rv)\n\t\tcatch e\n\t\t\tthrow Error \"MAPPED Equation Between #{function_literal(l)} And #{function_literal(r)} Unknown:\\n#{e}\"\n\t\tif flv isnt frv\n\t\t\tthrow Error \"Equation Failed:\\n\\t#{function_literal(l)} IS #{lv} AND MAPPED TO #{flv} BUT\\n\\t#{function_literal(r)} IS #{rv} AND MAPPED TO #{frv}.\"\n\n\tsecurely = (f) -> # ensure a function not to modify it's arguments\n\t\t(args...) ->\n\t\t\targs = deepcopy args\n\t\t\tf(args...)\n\n\tdict = (pairs) -> #for dict comprehensions\n\t\td = {}\n\t\td[k] = v for [k, v] in pairs\n\t\treturn d\n\n\t{copy, deepcopy} = do ->\n\t\tcp = (root, dep) ->\n\t\t\treturn root if dep == 0 or not root? or typeof(root) != 'object'\n\t\t\tif root instanceof Array\n\t\t\t\tr = (cp(v, dep-1) for v in root)\n\t\t\telse\n\t\t\t\tr = {}\n\t\t\t\tr[k] = cp(v, dep-1) for k, v of root\n\t\t\treturn r\n\t\tcopy: (obj, depth=1) -> cp(obj, depth)\n\t\tdeepcopy: (obj, depth=Infinity) -> cp(obj, depth)\n\n\textend = (base) -> (defaults...) -> #NOTE: modified inplace, use copy() to protect it.\n\t\tfor d in defaults when d?\n\t\t\tbase[k] ?= v for k, v of d #NOTE: null values will be replaced if a default value exists.\n\t\treturn base\n\n\tupdate = (base) -> (updates...) -> #NOTE: modified inplace, use copy() to protect it.\n\t\tfor d in updates when d?\n\t\t\tbase[k] = v for k, v of d\n\t\treturn base\n\n\toverload = (_d) ->\n\t\td = copy _d\n\t\tfallback = d['_']\n\t\tif fallback?\n\t\t\t(args...) ->\n\t\t\t\t(d[args.length] ? fallback) args...\n\t\telse\n\t\t\t(args...) ->\n\t\t\t\tf = d[args.length]\n\t\t\t\tif not f?\n\t\t\t\t\tthrow Error \"This Function Can't Accept #{args.length} Args\"\n\t\t\t\telse\n\t\t\t\t\treturn f args...\n\n\treturn {\n\t\tlog, assert, assertEq, assertEqOn, dict, copy, deepcopy, securely, extend, update, overload,\n\t}\n\nmodule.exports = this_module()\n\n"],"sourceRoot":"/source/"}