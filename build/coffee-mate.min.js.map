{"version":3,"sources":["/source/node_modules/browserify/node_modules/browser-pack/_prelude.js","/source/src/coffee-mate.coffee","coffee-mate.js","/source/node_modules/browserify/node_modules/process/browser.js","/source/node_modules/lazy.coffee/build/lazy.js","/source/src/basics.coffee","/source/src/convertors.coffee","/source/src/funny.coffee","/source/src/url-helpers.coffee","/source/src/utils.coffee"],"names":["f","exports","module","define","amd","g","window","global","self","this","CoffeeMate","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"basics","convertors","funny","lazy","url_helpers","utils","extend","./basics","./convertors","./funny","./url-helpers","./utils","lazy.coffee",2,"cleanUpNextTick","draining","currentQueue","queue","concat","queueIndex","drainQueue","timeout","setTimeout","len","run","clearTimeout","Item","fun","array","noop","process","nextTick","args","Array","arguments","push","prototype","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","name","cwd","chdir","dir","umask",3,"this_module","slice","arg","Iterator","LazyList","Symbol","all","any","best","brk","cartProd","cons","drop","dropWhile","enumerate","filter","foldl","foreach","iterate","join","last","list","map","naturals","nil","permutation_gen","primes","random_gen","range","ranged_random_gen","ref","repeat","reverse","scanl","streak","take","takeWhile","zip","zipWith","iterator","toString","it","next","value","done","stop","start","step","x","p","Infinity","arr","keys","Object","k","init","status","hash","Math","sin","floor","opts","seed","random","next_permutation","m","ref1","ls","json","xs","c","iter","ok","finished","j","prevx","ws","xs_unused","got","buf","shift","xss","xs_iter","len1","iters","results","apply_vector","inc_vector","limits","len_minus_1","vec","space","get_value","inc","v","results1","better","all_not","callback","fruit","defineProperties","break","writable","configurable","enumerable",4,"abs","accept_multi_or_array","ceil","combine","curry2","curry3","equal","flip","greaterEqual","greaterThan","lessEqual","lessThan","max","max_index","min","min_index","minus","notEqual","pack","pluck","plus","precise","seek","sum","uncurry2","uncurry3","unpack","y","b","attr","d","parseFloat","toPrecision","first",5,"bool","chr","float","hex","int","obj","ord","str","base","parseInt","test","charCodeAt","String","fromCharCode","indent","JSON","stringify","parse",6,"Y","church","memoize","get_key","cache","cached","key",7,"uri_decoder","uri_encoder","component_packer","encodeURIComponent","component_unpacker","ref2","match","decodeURIComponent",8,"assert","assertEq","assertEqOn","copy","deepcopy","dict","function_literal","log","override","securely","time_now","update","expr","replace","Date","getTime","dye","factory","histories","log_label","cavailable","palette","NODE_DISABLE_COLORS","bold","red","green","yellow","blue","bold_grey","color","flag_palette","op_flag","#","I","E","W","op","toUpperCase","flag","prefix","ball","eval_result","start_time","time_used","console","info","warn","error","err","msg","Function","_error","lv","rv","flv","frv","pairs","cp","root","dep","depth","defaults","updates","_d","fallback","_process"],"mappings":"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","file":"coffee-mate.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","utils = require './utils'\nbasics = require './basics'\nlazy = require 'lazy.coffee'\nfunny = require './funny'\nconvertors = require './convertors'\nurl_helpers = require './url-helpers'\n\nmodule.exports = utils.extend({}) utils, basics, lazy, funny, convertors, url_helpers\n\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.CoffeeMate = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nvar basics, convertors, funny, lazy, url_helpers, utils;\n\nutils = require('./utils');\n\nbasics = require('./basics');\n\nlazy = require('lazy.coffee');\n\nfunny = require('./funny');\n\nconvertors = require('./convertors');\n\nurl_helpers = require('./url-helpers');\n\nmodule.exports = utils.extend({})(utils, basics, lazy, funny, convertors, url_helpers);\n\n\n},{\"./basics\":4,\"./convertors\":5,\"./funny\":6,\"./url-helpers\":7,\"./utils\":8,\"lazy.coffee\":3}],2:[function(require,module,exports){\n// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            currentQueue[queueIndex].run();\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (!draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],3:[function(require,module,exports){\n(function (global){\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.lazy = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nvar this_module,\n  slice = [].slice;\n\nthis_module = function(arg) {\n  var Iterator, LazyList, Symbol, all, any, best, brk, cartProd, concat, cons, drop, dropWhile, enumerate, filter, foldl, foreach, iterate, join, last, lazy, length, list, map, naturals, nil, permutation_gen, primes, random_gen, range, ranged_random_gen, ref, repeat, reverse, scanl, streak, take, takeWhile, zip, zipWith;\n  Symbol = arg.Symbol;\n  LazyList = function(f) {\n    f[Symbol.iterator] = function() {\n      return f();\n    };\n    f.toString = function() {\n      return \"LazyList\";\n    };\n    return f;\n  };\n  nil = LazyList(function() {\n    return nil;\n  });\n  nil.toString = function() {\n    return 'nil';\n  };\n  Iterator = function(it) {\n    it.next = function() {\n      var r;\n      r = it();\n      return {\n        value: r,\n        done: r === nil\n      };\n    };\n    it.toString = function() {\n      return \"Iterator\";\n    };\n    return it;\n  };\n  naturals = LazyList(function() {\n    var i;\n    i = -1;\n    return Iterator(function() {\n      return ++i;\n    });\n  });\n  range = function() {\n    var args;\n    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    if (args.length === 0) {\n      return naturals;\n    } else if (args.length === 1) {\n      return LazyList(function() {\n        var i, stop;\n        stop = args[0];\n        i = -1;\n        return Iterator(function() {\n          if (++i < stop) {\n            return i;\n          } else {\n            return nil;\n          }\n        });\n      });\n    } else if (args.length === 2) {\n      return LazyList(function() {\n        var i, start, stop;\n        start = args[0], stop = args[1];\n        if (start < stop) {\n          i = start - 1;\n          return Iterator(function() {\n            if (++i < stop) {\n              return i;\n            } else {\n              return nil;\n            }\n          });\n        } else {\n          i = start + 1;\n          return Iterator(function() {\n            if (--i > stop) {\n              return i;\n            } else {\n              return nil;\n            }\n          });\n        }\n      });\n    } else {\n      return LazyList(function() {\n        var i, start, step, stop;\n        start = args[0], stop = args[1], step = args[2];\n        if (stop !== start && (stop - start) * step < 0) {\n          throw 'ERR IN range(): YOU ARE CREATING AN UNLIMITTED RANGE';\n        }\n        i = start - step;\n        if (start < stop) {\n          return Iterator(function() {\n            if ((i += step) < stop) {\n              return i;\n            } else {\n              return nil;\n            }\n          });\n        } else {\n          return Iterator(function() {\n            if ((i += step) > stop) {\n              return i;\n            } else {\n              return nil;\n            }\n          });\n        }\n      });\n    }\n  };\n  primes = LazyList(function() {\n    return filter(function(x) {\n      return all(function(p) {\n        return x % p !== 0;\n      })(takeWhile(function(p) {\n        return p * p <= x;\n      })(range(2, Infinity)));\n    })(range(2, Infinity))();\n  });\n  lazy = function(arr) {\n    if (typeof arr === 'function') {\n      if (arr[Symbol.iterator] != null) {\n        return arr;\n      } else {\n        return LazyList(arr);\n      }\n    } else if (arr[Symbol.iterator] != null) {\n      return LazyList(function() {\n        var it;\n        it = arr[Symbol.iterator]();\n        return Iterator(function() {\n          var r;\n          r = it.next();\n          if (r.done) {\n            return nil;\n          } else {\n            return r.value;\n          }\n        });\n      });\n    } else {\n      return LazyList(function() {\n        var i;\n        i = -1;\n        return Iterator(function() {\n          i += 1;\n          if (i < arr.length) {\n            return arr[i];\n          } else {\n            return nil;\n          }\n        });\n      });\n    }\n  };\n  enumerate = function(it) {\n    if ((it[Symbol.iterator] != null) || it instanceof Array) {\n      return zip(naturals, it);\n    } else {\n      return LazyList(function() {\n        var i, keys;\n        keys = Object.keys(it);\n        i = -1;\n        return Iterator(function() {\n          var k;\n          if (++i < keys.length) {\n            return [(k = keys[i]), it[k]];\n          } else {\n            return nil;\n          }\n        });\n      });\n    }\n  };\n  repeat = function(x) {\n    return LazyList(function() {\n      return Iterator(function() {\n        return x;\n      });\n    });\n  };\n  iterate = function(next, init) {\n    return LazyList(function() {\n      var status;\n      status = init;\n      return Iterator(function() {\n        var last;\n        last = status;\n        status = next(status);\n        return last;\n      });\n    });\n  };\n  random_gen = (function() {\n    var hash;\n    hash = function(x) {\n      x = Math.sin(x) * 1e4;\n      return x - Math.floor(x);\n    };\n    return function(opts) {\n      var ref, seed;\n      seed = hash((ref = opts != null ? opts.seed : void 0) != null ? ref : Math.random());\n      return iterate(hash, seed);\n    };\n  })();\n  ranged_random_gen = function(range, opts) {\n    var ref, seed;\n    seed = (ref = opts != null ? opts.seed : void 0) != null ? ref : Math.random();\n    return map(function(x) {\n      return Math.floor(x * range);\n    })(random_gen({\n      seed: seed\n    }));\n  };\n  permutation_gen = (function() {\n    var next_permutation;\n    next_permutation = function(x) {\n      var l, m, r, ref, ref1;\n      x = x.slice(0);\n      l = x.length - 1;\n      while (l >= 1 && x[l] <= x[l - 1]) {\n        --l;\n      }\n      if (l !== 0) {\n        m = x.length - 1;\n        while (m > l - 1 && x[m] <= x[l - 1]) {\n          --m;\n        }\n        ref = [x[l - 1], x[m]], x[m] = ref[0], x[l - 1] = ref[1];\n      }\n      r = x.length - 1;\n      while (l < r) {\n        ref1 = [x[r], x[l]], x[l] = ref1[0], x[r] = ref1[1];\n        ++l;\n        --r;\n      }\n      return x;\n    };\n    return function(arr) {\n      if (arr.length === 0) {\n        return nil;\n      } else {\n        return cons(arr.slice(0))(takeWhile(function(ls) {\n          return json(ls) !== json(arr);\n        })(drop(1)(iterate(next_permutation, arr))));\n      }\n    };\n  })();\n  take = function(n) {\n    return function(xs) {\n      return LazyList(function() {\n        var c, iter;\n        iter = lazy(xs)[Symbol.iterator]();\n        c = -1;\n        return Iterator(function() {\n          if (++c < n) {\n            return iter();\n          } else {\n            return nil;\n          }\n        });\n      });\n    };\n  };\n  takeWhile = function(ok) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter;\n        iter = lazy(xs)[Symbol.iterator]();\n        return Iterator(function() {\n          var x;\n          if ((x = iter()) !== nil && ok(x)) {\n            return x;\n          } else {\n            return nil;\n          }\n        });\n      });\n    };\n  };\n  drop = function(n) {\n    return function(xs) {\n      return LazyList(function() {\n        var finished, i, iter, j, ref;\n        iter = lazy(xs)[Symbol.iterator]();\n        finished = false;\n        for (i = j = 0, ref = n; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n          finished || (finished = iter() === nil);\n          if (finished) {\n            break;\n          }\n        }\n        if (finished) {\n          return function() {\n            return nil;\n          };\n        } else {\n          return iter;\n        }\n      });\n    };\n  };\n  dropWhile = function(ok) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter, x;\n        iter = lazy(xs)[Symbol.iterator]();\n        while (ok(x = iter()) && x !== nil) {\n          null;\n        }\n        return Iterator(function() {\n          var prevx, ref;\n          ref = [x, iter()], prevx = ref[0], x = ref[1];\n          return prevx;\n        });\n      });\n    };\n  };\n  cons = function(x) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter;\n        iter = null;\n        return Iterator(function() {\n          if (iter === null) {\n            iter = lazy(xs)[Symbol.iterator]();\n            return x;\n          } else {\n            return iter();\n          }\n        });\n      });\n    };\n  };\n  concat = function(ws) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter, xs_unused;\n        xs_unused = true;\n        iter = lazy(ws)[Symbol.iterator]();\n        return Iterator(function() {\n          var x;\n          if (xs_unused) {\n            if ((x = iter()) !== nil) {\n              return x;\n            } else {\n              iter = lazy(xs)[Symbol.iterator]();\n              xs_unused = false;\n              return iter();\n            }\n          } else {\n            return iter();\n          }\n        });\n      });\n    };\n  };\n  map = function(f) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter;\n        iter = lazy(xs)[Symbol.iterator]();\n        return Iterator(function() {\n          var x;\n          if ((x = iter()) !== nil) {\n            return f(x);\n          } else {\n            return nil;\n          }\n        });\n      });\n    };\n  };\n  filter = function(ok) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter;\n        iter = lazy(xs)[Symbol.iterator]();\n        return Iterator(function() {\n          var x;\n          while (!ok(x = iter()) && x !== nil) {\n            null;\n          }\n          return x;\n        });\n      });\n    };\n  };\n  scanl = function(f, r) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter;\n        iter = lazy(xs)[Symbol.iterator]();\n        return Iterator(function() {\n          var got, x;\n          got = r;\n          r = (x = iter()) !== nil ? f(r, x) : nil;\n          return got;\n        });\n      });\n    };\n  };\n  streak = function(n) {\n    return function(xs) {\n      return LazyList(function() {\n        var buf, iter;\n        iter = lazy(xs)[Symbol.iterator]();\n        buf = [];\n        return Iterator(function() {\n          var x;\n          if ((x = iter()) === nil) {\n            return nil;\n          }\n          buf.push(x);\n          if (buf.length > n) {\n            buf.shift(1);\n          }\n          return buf.slice(0);\n        });\n      });\n    };\n  };\n  reverse = function(xs) {\n    var arr;\n    arr = list(lazy(xs));\n    return lazy(arr.reverse());\n  };\n  join = function(xss) {\n    return LazyList(function() {\n      var iter, xs, xs_iter;\n      xs_iter = lazy(xss)[Symbol.iterator]();\n      xs = xs_iter();\n      iter = lazy(xs)[Symbol.iterator]();\n      return Iterator(function() {\n        var x;\n        if ((x = iter()) !== nil) {\n          return x;\n        } else if ((xs = xs_iter()) !== nil) {\n          iter = lazy(xs)[Symbol.iterator]();\n          return iter();\n        } else {\n          return nil;\n        }\n      });\n    });\n  };\n  ref = (function() {\n    var finished, zip, zipWith;\n    finished = function(arr) {\n      var j, len1, x;\n      for (j = 0, len1 = arr.length; j < len1; j++) {\n        x = arr[j];\n        if (x === nil) {\n          return true;\n        }\n      }\n      return false;\n    };\n    zip = function() {\n      var xss;\n      xss = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      return LazyList(function() {\n        var iters, xs;\n        iters = (function() {\n          var j, len1, results;\n          results = [];\n          for (j = 0, len1 = xss.length; j < len1; j++) {\n            xs = xss[j];\n            results.push(lazy(xs)[Symbol.iterator]());\n          }\n          return results;\n        })();\n        return Iterator(function() {\n          var iter, next;\n          next = (function() {\n            var j, len1, results;\n            results = [];\n            for (j = 0, len1 = iters.length; j < len1; j++) {\n              iter = iters[j];\n              results.push(iter());\n            }\n            return results;\n          })();\n          if (finished(next)) {\n            return nil;\n          } else {\n            return next;\n          }\n        });\n      });\n    };\n    zipWith = function(f) {\n      return function() {\n        var xss;\n        xss = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        return LazyList(function() {\n          var iters, xs;\n          iters = (function() {\n            var j, len1, results;\n            results = [];\n            for (j = 0, len1 = xss.length; j < len1; j++) {\n              xs = xss[j];\n              results.push(lazy(xs)[Symbol.iterator]());\n            }\n            return results;\n          })();\n          return Iterator(function() {\n            var iter, next;\n            next = (function() {\n              var j, len1, results;\n              results = [];\n              for (j = 0, len1 = iters.length; j < len1; j++) {\n                iter = iters[j];\n                results.push(iter());\n              }\n              return results;\n            })();\n            if (finished(next)) {\n              return nil;\n            } else {\n              return f.apply(null, next);\n            }\n          });\n        });\n      };\n    };\n    return {\n      zip: zip,\n      zipWith: zipWith\n    };\n  })(), zip = ref.zip, zipWith = ref.zipWith;\n  cartProd = (function() {\n    var apply_vector, inc_vector;\n    inc_vector = function(limits) {\n      var len_minus_1;\n      len_minus_1 = limits.length - 1;\n      return function(vec) {\n        var i;\n        i = len_minus_1;\n        while (!(++vec[i] < limits[i] || i <= 0)) {\n          vec[i--] = 0;\n        }\n        return vec;\n      };\n    };\n    apply_vector = function(space) {\n      var len;\n      len = space.length;\n      return function(vec) {\n        var i, j, ref1, results;\n        results = [];\n        for (i = j = 0, ref1 = len; 0 <= ref1 ? j < ref1 : j > ref1; i = 0 <= ref1 ? ++j : --j) {\n          results.push(space[i][vec[i]]);\n        }\n        return results;\n      };\n    };\n    return function() {\n      var xss;\n      xss = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      return LazyList(function() {\n        var get_value, i, inc, j, len, len1, limits, v, xs;\n        xss = (function() {\n          var j, len1, results;\n          results = [];\n          for (j = 0, len1 = xss.length; j < len1; j++) {\n            xs = xss[j];\n            results.push(list(xs));\n          }\n          return results;\n        })();\n        limits = (function() {\n          var j, ref1, results;\n          results = [];\n          for (i = j = 0, ref1 = xss.length; 0 <= ref1 ? j < ref1 : j > ref1; i = 0 <= ref1 ? ++j : --j) {\n            results.push(xss[i].length);\n          }\n          return results;\n        })();\n        for (j = 0, len1 = limits.length; j < len1; j++) {\n          len = limits[j];\n          if (len === 0) {\n            return nil;\n          }\n        }\n        inc = inc_vector(limits);\n        get_value = apply_vector(xss);\n        v = (function() {\n          var o, ref1, results;\n          results = [];\n          for (i = o = 0, ref1 = xss.length; 0 <= ref1 ? o < ref1 : o > ref1; i = 0 <= ref1 ? ++o : --o) {\n            results.push(0);\n          }\n          return results;\n        })();\n        return Iterator(function() {\n          var r;\n          if (v[0] < limits[0]) {\n            r = get_value(v);\n            inc(v);\n            return r;\n          } else {\n            return nil;\n          }\n        });\n      });\n    };\n  })();\n  list = function(xs) {\n    var it, n, results, results1, x;\n    if (xs instanceof Array) {\n      return xs;\n    } else if (typeof xs === 'function') {\n      it = xs[Symbol.iterator]();\n      results = [];\n      while ((x = it()) !== nil) {\n        results.push(x);\n      }\n      return results;\n    } else if (xs[Symbol.iterator] != null) {\n      it = lazy(xs)[Symbol.iterator]();\n      results1 = [];\n      while ((x = it()) !== nil) {\n        results1.push(x);\n      }\n      return results1;\n    } else if (typeof xs === 'number') {\n      n = xs;\n      return function(xs) {\n        return list(take(n)(xs));\n      };\n    } else {\n      throw Error('list(xs): xs is neither LazyList nor Array');\n    }\n  };\n  last = function(xs) {\n    var iter, r, ref1, x;\n    if (xs[Symbol.iterator] == null) {\n      return (ref1 = xs[xs.length - 1]) != null ? ref1 : nil;\n    } else {\n      iter = lazy(xs)[Symbol.iterator]();\n      r = nil;\n      while ((x = iter()) !== nil) {\n        r = x;\n      }\n      return r;\n    }\n  };\n  length = function(xs) {\n    var iter, r, x;\n    if (xs[Symbol.iterator] == null) {\n      return xs.length;\n    } else {\n      iter = lazy(xs)[Symbol.iterator]();\n      r = 0;\n      while ((x = iter()) !== nil) {\n        ++r;\n      }\n      return r;\n    }\n  };\n  foldl = function(f, init) {\n    return function(xs) {\n      var iter, r, x;\n      r = init;\n      iter = lazy(xs)[Symbol.iterator]();\n      while ((x = iter()) !== nil) {\n        r = f(r, x);\n      }\n      return r;\n    };\n  };\n  best = function(better) {\n    return function(xs) {\n      var it, iter, r;\n      iter = lazy(xs)[Symbol.iterator]();\n      if ((r = iter()) === nil) {\n        return null;\n      }\n      while ((it = iter()) !== nil) {\n        r = better(it, r) ? it : r;\n      }\n      return r;\n    };\n  };\n  all = function(f) {\n    if (typeof f !== 'function') {\n      f = (function(x) {\n        return x === f;\n      });\n    }\n    return function(xs) {\n      var iter, x;\n      iter = lazy(xs)[Symbol.iterator]();\n      while ((x = iter()) !== nil) {\n        if (!f(x)) {\n          return false;\n        }\n      }\n      return true;\n    };\n  };\n  any = function(f) {\n    var all_not;\n    all_not = all(function(x) {\n      return !f(x);\n    });\n    return function(xs) {\n      return !(all_not(xs));\n    };\n  };\n  brk = function() {\n    return brk;\n  };\n  brk.toString = function() {\n    return 'foreach.break';\n  };\n  foreach = function(xs, callback, fruit) {\n    var iter, x;\n    iter = lazy(xs)[Symbol.iterator]();\n    while ((x = iter()) !== nil) {\n      if (callback(x, fruit) === brk) {\n        break;\n      }\n    }\n    return fruit;\n  };\n  Object.defineProperties(foreach, {\n    \"break\": {\n      writable: false,\n      configurable: false,\n      enumerable: false,\n      value: brk\n    }\n  });\n  return {\n    nil: nil,\n    LazyList: LazyList,\n    Iterator: Iterator,\n    Symbol: Symbol,\n    naturals: naturals,\n    range: range,\n    primes: primes,\n    lazy: lazy,\n    enumerate: enumerate,\n    repeat: repeat,\n    iterate: iterate,\n    random_gen: random_gen,\n    ranged_random_gen: ranged_random_gen,\n    permutation_gen: permutation_gen,\n    cons: cons,\n    concat: concat,\n    map: map,\n    filter: filter,\n    take: take,\n    takeWhile: takeWhile,\n    drop: drop,\n    dropWhile: dropWhile,\n    scanl: scanl,\n    streak: streak,\n    reverse: reverse,\n    join: join,\n    zip: zip,\n    zipWith: zipWith,\n    cartProd: cartProd,\n    list: list,\n    last: last,\n    length: length,\n    foldl: foldl,\n    best: best,\n    all: all,\n    any: any,\n    foreach: foreach\n  };\n};\n\nmodule.exports = this_module({\n  Symbol: typeof Symbol !== \"undefined\" && Symbol !== null ? Symbol : {\n    iterator: 'iter'\n  }\n});\n\n\n},{}]},{},[1])(1)\n});\n\n\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],4:[function(require,module,exports){\nvar this_module,\n  slice = [].slice;\n\nthis_module = function(arg) {\n  var abs, accept_multi_or_array, best, ceil, combine, curry2, curry3, equal, flip, floor, greaterEqual, greaterThan, lessEqual, lessThan, max, max_index, min, min_index, minus, notEqual, pack, pluck, plus, precise, seek, sum, uncurry2, uncurry3, unpack;\n  best = arg.best;\n  flip = function(f) {\n    return function(x) {\n      return function(y) {\n        return f(y)(x);\n      };\n    };\n  };\n  combine = function(f) {\n    return function(g) {\n      return function(x) {\n        return f(g(x));\n      };\n    };\n  };\n  curry2 = function(f) {\n    return function(a) {\n      return function(b) {\n        return f(a, b);\n      };\n    };\n  };\n  curry3 = function(f) {\n    return function(a) {\n      return function(b) {\n        return function(c) {\n          return f(a, b, c);\n        };\n      };\n    };\n  };\n  uncurry2 = function(f) {\n    return function(a, b) {\n      return f(a)(b);\n    };\n  };\n  uncurry3 = function(f) {\n    return function(a, b, c) {\n      return f(a)(b)(c);\n    };\n  };\n  pack = function(f) {\n    return function(arr) {\n      return f.apply(null, arr);\n    };\n  };\n  unpack = function(f) {\n    return function() {\n      var arr;\n      arr = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      return f(arr);\n    };\n  };\n  seek = function(arr) {\n    return function(i) {\n      return arr[i];\n    };\n  };\n  pluck = function(attr) {\n    return function(d) {\n      return d[attr];\n    };\n  };\n  equal = function(it) {\n    return function(x) {\n      return x === it;\n    };\n  };\n  notEqual = function(it) {\n    return function(x) {\n      return x !== it;\n    };\n  };\n  lessThan = function(it) {\n    return function(x) {\n      return x < it;\n    };\n  };\n  greaterThan = function(it) {\n    return function(x) {\n      return x > it;\n    };\n  };\n  lessEqual = function(it) {\n    return function(x) {\n      return x <= it;\n    };\n  };\n  greaterEqual = function(it) {\n    return function(x) {\n      return x >= it;\n    };\n  };\n  plus = function(it) {\n    return function(x) {\n      return x + it;\n    };\n  };\n  minus = function(it) {\n    return function(x) {\n      return x - it;\n    };\n  };\n  abs = Math.abs;\n  floor = Math.floor;\n  ceil = Math.ceil;\n  precise = function(n) {\n    return function(x) {\n      return parseFloat(x.toPrecision(n));\n    };\n  };\n  accept_multi_or_array = function(f) {\n    return function() {\n      var arr;\n      arr = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      return f(arr.length === 1 && arr.first instanceof Array ? arr.first : arr);\n    };\n  };\n  sum = accept_multi_or_array(function(arr) {\n    var k, len, r, x;\n    if (arr.length === 1 && arr.first instanceof Array) {\n      arr = arr.first;\n    }\n    r = 0;\n    for (k = 0, len = arr.length; k < len; k++) {\n      x = arr[k];\n      r += x;\n    }\n    return r;\n  });\n  max = accept_multi_or_array(function(arr) {\n    return best(function(a, b) {\n      return a > b;\n    })(arr);\n  });\n  min = accept_multi_or_array(function(arr) {\n    return best(function(a, b) {\n      return a < b;\n    })(arr);\n  });\n  max_index = accept_multi_or_array(function(arr) {\n    var k, ref, results;\n    return best(function(i, j) {\n      return arr[i] > arr[j];\n    })((function() {\n      results = [];\n      for (var k = 0, ref = arr.length; 0 <= ref ? k < ref : k > ref; 0 <= ref ? k++ : k--){ results.push(k); }\n      return results;\n    }).apply(this));\n  });\n  min_index = accept_multi_or_array(function(arr) {\n    var k, ref, results;\n    return best(function(i, j) {\n      return arr[i] < arr[j];\n    })((function() {\n      results = [];\n      for (var k = 0, ref = arr.length; 0 <= ref ? k < ref : k > ref; 0 <= ref ? k++ : k--){ results.push(k); }\n      return results;\n    }).apply(this));\n  });\n  return {\n    flip: flip,\n    combine: combine,\n    curry2: curry2,\n    curry3: curry3,\n    uncurry2: uncurry2,\n    uncurry3: uncurry3,\n    pack: pack,\n    unpack: unpack,\n    seek: seek,\n    pluck: pluck,\n    equal: equal,\n    notEqual: notEqual,\n    lessThan: lessThan,\n    lessEqual: lessEqual,\n    greaterThan: greaterThan,\n    greaterEqual: greaterEqual,\n    plus: plus,\n    minus: minus,\n    abs: abs,\n    floor: floor,\n    ceil: ceil,\n    precise: precise,\n    sum: sum,\n    max: max,\n    min: min,\n    max_index: max_index,\n    min_index: min_index\n  };\n};\n\nmodule.exports = this_module({\n  best: require('lazy.coffee').best\n});\n\n\n},{\"lazy.coffee\":3}],5:[function(require,module,exports){\nvar this_module;\n\nthis_module = function() {\n  var bool, chr, float, hex, int, json, obj, ord, str;\n  int = function(s, base) {\n    var r;\n    if (typeof s === 'string') {\n      r = parseInt(s, base);\n      if (!((s.slice != null) && r === parseInt(s.slice(0, -1), base))) {\n        return r;\n      } else {\n        return null;\n      }\n    } else {\n      return parseInt(0 + s);\n    }\n  };\n  float = function(s) {\n    if (/^-?[0-9]*(\\.[0-9]+)?([eE]-?[0-9]+)?$/.test(s)) {\n      return parseFloat(s);\n    } else {\n      return null;\n    }\n  };\n  str = function(x, base) {\n    return x.toString(base);\n  };\n  bool = function(x) {\n    if (x === true || x === false) {\n      return x;\n    } else {\n      return null;\n    }\n  };\n  hex = function(x) {\n    return x.toString(16);\n  };\n  ord = function(c) {\n    return c.charCodeAt();\n  };\n  chr = function(x) {\n    return String.fromCharCode(x);\n  };\n  json = function(it, indent) {\n    return JSON.stringify(it, null, indent);\n  };\n  obj = function(s) {\n    return JSON.parse(s);\n  };\n  return {\n    int: int,\n    float: float,\n    bool: bool,\n    str: str,\n    hex: hex,\n    ord: ord,\n    chr: chr,\n    json: json,\n    obj: obj\n  };\n};\n\nmodule.exports = this_module();\n\n\n},{}],6:[function(require,module,exports){\nvar this_module,\n  slice = [].slice;\n\nthis_module = function() {\n  var Y, church, memoize;\n  church = function(n) {\n    var iter;\n    iter = function(f, n, r) {\n      if (n === 0) {\n        return r;\n      } else {\n        return iter(f, n - 1, f(r));\n      }\n    };\n    return function(f) {\n      return function(x) {\n        return iter(f, n + 0, x);\n      };\n    };\n  };\n  Y = function(f) {\n    return (function(x) {\n      return x(x);\n    })((function(x) {\n      return f((function(y) {\n        return (x(x))(y);\n      }));\n    }));\n  };\n  memoize = function(f, get_key) {\n    var cache;\n    if (get_key == null) {\n      get_key = (function() {\n        var args;\n        args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        return json(args);\n      });\n    }\n    cache = {};\n    return function() {\n      var args, cached, key, r;\n      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      key = get_key.apply(null, args);\n      cached = cache[key];\n      if (cached != null) {\n        return cached;\n      } else {\n        r = f.apply(null, args);\n        cache[key] = r;\n        return r;\n      }\n    };\n  };\n  return {\n    church: church,\n    Y: Y,\n    memoize: memoize\n  };\n};\n\nmodule.exports = this_module();\n\n\n},{}],7:[function(require,module,exports){\nvar this_module;\n\nthis_module = function() {\n  var uri_decoder, uri_encoder;\n  uri_encoder = function(component_packer) {\n    if (component_packer == null) {\n      component_packer = str;\n    }\n    return function(obj) {\n      var k, v;\n      return ((function() {\n        var results;\n        results = [];\n        for (k in obj) {\n          v = obj[k];\n          results.push((encodeURIComponent(k)) + \"=\" + (encodeURIComponent(component_packer(v))));\n        }\n        return results;\n      })()).join('&');\n    };\n  };\n  uri_decoder = function(component_unpacker) {\n    if (component_unpacker == null) {\n      component_unpacker = (function(s) {\n        return s;\n      });\n    }\n    return function(str) {\n      var d, i, j, k, len, ref, ref1, ref2, s, v;\n      d = {};\n      ref1 = (ref = str.match(/[^?=&]+=[^&]*/g)) != null ? ref : [];\n      for (i = 0, len = ref1.length; i < len; i++) {\n        s = ref1[i];\n        ref2 = s.match(/([^=]+)=(.*)/), j = ref2.length - 2, k = ref2[j++], v = ref2[j++];\n        d[decodeURIComponent(k)] = component_unpacker(decodeURIComponent(v));\n      }\n      return d;\n    };\n  };\n  return {\n    uri_encoder: uri_encoder,\n    uri_decoder: uri_decoder\n  };\n};\n\nmodule.exports = this_module();\n\n\n},{}],8:[function(require,module,exports){\n(function (process){\nvar this_module,\n  slice = [].slice;\n\nthis_module = function() {\n  var assert, assertEq, assertEqOn, copy, deepcopy, dict, extend, function_literal, log, override, ref, securely, time_now, update;\n  function_literal = function(f) {\n    var expr;\n    expr = f.toString().replace(/^\\s*function\\s?\\(\\s?\\)\\s?{\\s*return\\s*([^]*?);?\\s*}$/, '$1');\n    if (expr.length <= 100) {\n      expr = expr.replace(/[\\r\\n]{1,2}\\s*/g, '');\n    }\n    return expr;\n  };\n  time_now = function() {\n    return (new Date).getTime();\n  };\n  log = (function() {\n    var dye, factory, got, histories, log_label;\n    dye = (function() {\n      var cavailable, palette;\n      cavailable = (typeof window === \"undefined\" || window === null) && (typeof process !== \"undefined\" && process !== null) && !process.env.NODE_DISABLE_COLORS;\n      palette = {\n        bold: '\\x1B[0;1m',\n        red: '\\x1B[0;31m',\n        green: '\\x1B[0;32m',\n        yellow: '\\x1B[0;33m',\n        blue: '\\x1B[0;34m',\n        bold_grey: '\\x1B[1;30m'\n      };\n      if (!cavailable) {\n        return function(color) {\n          return function(s) {\n            return s;\n          };\n        };\n      } else {\n        return function(color) {\n          return function(s) {\n            return \"\" + palette[color] + s + '\\x1B[0m';\n          };\n        };\n      }\n    })();\n    log_label = (function() {\n      var flag_palette, op_flag;\n      flag_palette = {\n        '#': 'bold_grey',\n        'I': 'green',\n        'E': 'red',\n        'W': 'yellow'\n      };\n      op_flag = function(op) {\n        if (op === 'log') {\n          return '#';\n        } else {\n          return op[0].toUpperCase();\n        }\n      };\n      return function(op) {\n        var flag;\n        flag = op_flag(op);\n        return dye(flag_palette[flag])(flag);\n      };\n    })();\n    histories = [];\n    factory = function(op) {\n      var prefix;\n      prefix = \"\" + (dye('bold_grey')('#')) + (log_label(op));\n      return function() {\n        var args, ball, eval_result, expr, f, i, len, start_time, time_used;\n        args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        ball = [];\n        for (i = 0, len = args.length; i < len; i++) {\n          f = args[i];\n          if (typeof f === 'function') {\n            expr = function_literal(f);\n            start_time = time_now();\n            eval_result = f();\n            time_used = time_now() - start_time;\n            ball.push(prefix + \" \" + (dye('green')(expr)) + \" \" + (dye('bold_grey')('==>')), eval_result);\n            if (time_used > 0) {\n              ball.push(dye('yellow')(\"[\" + time_used + \"ms]\"));\n            }\n          } else {\n            ball.push(\"\" + prefix, f);\n          }\n        }\n        console[op].apply(console, ball);\n        histories.push(ball);\n        if (histories.length >= 10) {\n          histories.shift();\n        }\n        return null;\n      };\n    };\n    got = factory('log');\n    got.histories = histories;\n    got.info = factory('info');\n    got.warn = factory('warn');\n    got.error = got.err = factory('error');\n    return got;\n  })();\n  assert = function(f, msg) {\n    var e, r, ref;\n    if (!(f instanceof Function)) {\n      ref = [msg, f], f = ref[0], msg = ref[1];\n    }\n    try {\n      r = f();\n    } catch (_error) {\n      e = _error;\n      throw Error(\"Assertion \" + (msg != null ? msg : function_literal(f)) + \" Unknown:\\n\" + e);\n    }\n    if (!r) {\n      throw Error(\"Assertion \" + (msg != null ? msg : function_literal(f)) + \" Failed!\");\n    }\n  };\n  assertEq = function(l, r) {\n    var e, lv, rv;\n    try {\n      lv = l();\n      rv = r();\n    } catch (_error) {\n      e = _error;\n      throw Error(\"Equation Between \" + (function_literal(l)) + \" And \" + (function_literal(r)) + \" Unknown:\\n\" + e);\n    }\n    if (lv !== rv) {\n      throw Error(\"Equation Failed:\\n\\t\" + (function_literal(l)) + \" IS \" + lv + \" BUT\\n\\t\" + (function_literal(r)) + \" IS \" + rv + \".\");\n    }\n  };\n  assertEqOn = function(f) {\n    return function(l, r) {\n      var e, flv, frv, lv, rv;\n      try {\n        lv = l();\n        rv = r();\n        flv = f(lv);\n        frv = f(rv);\n      } catch (_error) {\n        e = _error;\n        throw Error(\"MAPPED Equation Between \" + (function_literal(l)) + \" And \" + (function_literal(r)) + \" Unknown:\\n\" + e);\n      }\n      if (flv !== frv) {\n        throw Error(\"Equation Failed:\\n\\t\" + (function_literal(l)) + \" IS \" + lv + \" AND MAPPED TO \" + flv + \" BUT\\n\\t\" + (function_literal(r)) + \" IS \" + rv + \" AND MAPPED TO \" + frv + \".\");\n      }\n    };\n  };\n  securely = function(f) {\n    return function() {\n      var args;\n      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      args = deepcopy(args);\n      return f.apply(null, args);\n    };\n  };\n  dict = function(pairs) {\n    var d, i, k, len, ref, v;\n    d = {};\n    for (i = 0, len = pairs.length; i < len; i++) {\n      ref = pairs[i], k = ref[0], v = ref[1];\n      d[k] = v;\n    }\n    return d;\n  };\n  ref = (function() {\n    var cp;\n    cp = function(root, dep) {\n      var k, r, v;\n      if (dep === 0 || (root == null) || typeof root !== 'object') {\n        return root;\n      }\n      if (root instanceof Array) {\n        r = (function() {\n          var i, len, results;\n          results = [];\n          for (i = 0, len = root.length; i < len; i++) {\n            v = root[i];\n            results.push(cp(v, dep - 1));\n          }\n          return results;\n        })();\n      } else {\n        r = {};\n        for (k in root) {\n          v = root[k];\n          r[k] = cp(v, dep - 1);\n        }\n      }\n      return r;\n    };\n    return {\n      copy: function(obj, depth) {\n        if (depth == null) {\n          depth = 1;\n        }\n        return cp(obj, depth);\n      },\n      deepcopy: function(obj, depth) {\n        if (depth == null) {\n          depth = Infinity;\n        }\n        return cp(obj, depth);\n      }\n    };\n  })(), copy = ref.copy, deepcopy = ref.deepcopy;\n  extend = function(base) {\n    return function() {\n      var d, defaults, i, k, len, v;\n      defaults = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      for (i = 0, len = defaults.length; i < len; i++) {\n        d = defaults[i];\n        if (d != null) {\n          for (k in d) {\n            v = d[k];\n            if (base[k] == null) {\n              base[k] = v;\n            }\n          }\n        }\n      }\n      return base;\n    };\n  };\n  update = function(base) {\n    return function() {\n      var d, i, k, len, updates, v;\n      updates = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      for (i = 0, len = updates.length; i < len; i++) {\n        d = updates[i];\n        if (d != null) {\n          for (k in d) {\n            v = d[k];\n            base[k] = v;\n          }\n        }\n      }\n      return base;\n    };\n  };\n  override = function(_d) {\n    var d, fallback;\n    d = copy(_d);\n    fallback = d['_'];\n    if (fallback != null) {\n      return function() {\n        var args, ref1;\n        args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        return ((ref1 = d[args.length]) != null ? ref1 : fallback).apply(null, args);\n      };\n    } else {\n      return function() {\n        var args, f;\n        args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        f = d[args.length];\n        if (f == null) {\n          throw Error(\"This Function Can't Accept \" + args.length + \" Args\");\n        } else {\n          return f.apply(null, args);\n        }\n      };\n    }\n  };\n  return {\n    log: log,\n    assert: assert,\n    assertEq: assertEq,\n    assertEqOn: assertEqOn,\n    dict: dict,\n    copy: copy,\n    deepcopy: deepcopy,\n    securely: securely,\n    extend: extend,\n    update: update,\n    override: override\n  };\n};\n\nmodule.exports = this_module();\n\n\n\n}).call(this,require('_process'))\n\n},{\"_process\":2}]},{},[1])(1)\n});\n\n\n//# sourceMappingURL=coffee-mate.js.map","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            currentQueue[queueIndex].run();\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (!draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.lazy = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nvar this_module,\n  slice = [].slice;\n\nthis_module = function(arg) {\n  var Iterator, LazyList, Symbol, all, any, best, brk, cartProd, concat, cons, drop, dropWhile, enumerate, filter, foldl, foreach, iterate, join, last, lazy, length, list, map, naturals, nil, permutation_gen, primes, random_gen, range, ranged_random_gen, ref, repeat, reverse, scanl, streak, take, takeWhile, zip, zipWith;\n  Symbol = arg.Symbol;\n  LazyList = function(f) {\n    f[Symbol.iterator] = function() {\n      return f();\n    };\n    f.toString = function() {\n      return \"LazyList\";\n    };\n    return f;\n  };\n  nil = LazyList(function() {\n    return nil;\n  });\n  nil.toString = function() {\n    return 'nil';\n  };\n  Iterator = function(it) {\n    it.next = function() {\n      var r;\n      r = it();\n      return {\n        value: r,\n        done: r === nil\n      };\n    };\n    it.toString = function() {\n      return \"Iterator\";\n    };\n    return it;\n  };\n  naturals = LazyList(function() {\n    var i;\n    i = -1;\n    return Iterator(function() {\n      return ++i;\n    });\n  });\n  range = function() {\n    var args;\n    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    if (args.length === 0) {\n      return naturals;\n    } else if (args.length === 1) {\n      return LazyList(function() {\n        var i, stop;\n        stop = args[0];\n        i = -1;\n        return Iterator(function() {\n          if (++i < stop) {\n            return i;\n          } else {\n            return nil;\n          }\n        });\n      });\n    } else if (args.length === 2) {\n      return LazyList(function() {\n        var i, start, stop;\n        start = args[0], stop = args[1];\n        if (start < stop) {\n          i = start - 1;\n          return Iterator(function() {\n            if (++i < stop) {\n              return i;\n            } else {\n              return nil;\n            }\n          });\n        } else {\n          i = start + 1;\n          return Iterator(function() {\n            if (--i > stop) {\n              return i;\n            } else {\n              return nil;\n            }\n          });\n        }\n      });\n    } else {\n      return LazyList(function() {\n        var i, start, step, stop;\n        start = args[0], stop = args[1], step = args[2];\n        if (stop !== start && (stop - start) * step < 0) {\n          throw 'ERR IN range(): YOU ARE CREATING AN UNLIMITTED RANGE';\n        }\n        i = start - step;\n        if (start < stop) {\n          return Iterator(function() {\n            if ((i += step) < stop) {\n              return i;\n            } else {\n              return nil;\n            }\n          });\n        } else {\n          return Iterator(function() {\n            if ((i += step) > stop) {\n              return i;\n            } else {\n              return nil;\n            }\n          });\n        }\n      });\n    }\n  };\n  primes = LazyList(function() {\n    return filter(function(x) {\n      return all(function(p) {\n        return x % p !== 0;\n      })(takeWhile(function(p) {\n        return p * p <= x;\n      })(range(2, Infinity)));\n    })(range(2, Infinity))();\n  });\n  lazy = function(arr) {\n    if (typeof arr === 'function') {\n      if (arr[Symbol.iterator] != null) {\n        return arr;\n      } else {\n        return LazyList(arr);\n      }\n    } else if (arr[Symbol.iterator] != null) {\n      return LazyList(function() {\n        var it;\n        it = arr[Symbol.iterator]();\n        return Iterator(function() {\n          var r;\n          r = it.next();\n          if (r.done) {\n            return nil;\n          } else {\n            return r.value;\n          }\n        });\n      });\n    } else {\n      return LazyList(function() {\n        var i;\n        i = -1;\n        return Iterator(function() {\n          i += 1;\n          if (i < arr.length) {\n            return arr[i];\n          } else {\n            return nil;\n          }\n        });\n      });\n    }\n  };\n  enumerate = function(it) {\n    if ((it[Symbol.iterator] != null) || it instanceof Array) {\n      return zip(naturals, it);\n    } else {\n      return LazyList(function() {\n        var i, keys;\n        keys = Object.keys(it);\n        i = -1;\n        return Iterator(function() {\n          var k;\n          if (++i < keys.length) {\n            return [(k = keys[i]), it[k]];\n          } else {\n            return nil;\n          }\n        });\n      });\n    }\n  };\n  repeat = function(x) {\n    return LazyList(function() {\n      return Iterator(function() {\n        return x;\n      });\n    });\n  };\n  iterate = function(next, init) {\n    return LazyList(function() {\n      var status;\n      status = init;\n      return Iterator(function() {\n        var last;\n        last = status;\n        status = next(status);\n        return last;\n      });\n    });\n  };\n  random_gen = (function() {\n    var hash;\n    hash = function(x) {\n      x = Math.sin(x) * 1e4;\n      return x - Math.floor(x);\n    };\n    return function(opts) {\n      var ref, seed;\n      seed = hash((ref = opts != null ? opts.seed : void 0) != null ? ref : Math.random());\n      return iterate(hash, seed);\n    };\n  })();\n  ranged_random_gen = function(range, opts) {\n    var ref, seed;\n    seed = (ref = opts != null ? opts.seed : void 0) != null ? ref : Math.random();\n    return map(function(x) {\n      return Math.floor(x * range);\n    })(random_gen({\n      seed: seed\n    }));\n  };\n  permutation_gen = (function() {\n    var next_permutation;\n    next_permutation = function(x) {\n      var l, m, r, ref, ref1;\n      x = x.slice(0);\n      l = x.length - 1;\n      while (l >= 1 && x[l] <= x[l - 1]) {\n        --l;\n      }\n      if (l !== 0) {\n        m = x.length - 1;\n        while (m > l - 1 && x[m] <= x[l - 1]) {\n          --m;\n        }\n        ref = [x[l - 1], x[m]], x[m] = ref[0], x[l - 1] = ref[1];\n      }\n      r = x.length - 1;\n      while (l < r) {\n        ref1 = [x[r], x[l]], x[l] = ref1[0], x[r] = ref1[1];\n        ++l;\n        --r;\n      }\n      return x;\n    };\n    return function(arr) {\n      if (arr.length === 0) {\n        return nil;\n      } else {\n        return cons(arr.slice(0))(takeWhile(function(ls) {\n          return json(ls) !== json(arr);\n        })(drop(1)(iterate(next_permutation, arr))));\n      }\n    };\n  })();\n  take = function(n) {\n    return function(xs) {\n      return LazyList(function() {\n        var c, iter;\n        iter = lazy(xs)[Symbol.iterator]();\n        c = -1;\n        return Iterator(function() {\n          if (++c < n) {\n            return iter();\n          } else {\n            return nil;\n          }\n        });\n      });\n    };\n  };\n  takeWhile = function(ok) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter;\n        iter = lazy(xs)[Symbol.iterator]();\n        return Iterator(function() {\n          var x;\n          if ((x = iter()) !== nil && ok(x)) {\n            return x;\n          } else {\n            return nil;\n          }\n        });\n      });\n    };\n  };\n  drop = function(n) {\n    return function(xs) {\n      return LazyList(function() {\n        var finished, i, iter, j, ref;\n        iter = lazy(xs)[Symbol.iterator]();\n        finished = false;\n        for (i = j = 0, ref = n; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n          finished || (finished = iter() === nil);\n          if (finished) {\n            break;\n          }\n        }\n        if (finished) {\n          return function() {\n            return nil;\n          };\n        } else {\n          return iter;\n        }\n      });\n    };\n  };\n  dropWhile = function(ok) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter, x;\n        iter = lazy(xs)[Symbol.iterator]();\n        while (ok(x = iter()) && x !== nil) {\n          null;\n        }\n        return Iterator(function() {\n          var prevx, ref;\n          ref = [x, iter()], prevx = ref[0], x = ref[1];\n          return prevx;\n        });\n      });\n    };\n  };\n  cons = function(x) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter;\n        iter = null;\n        return Iterator(function() {\n          if (iter === null) {\n            iter = lazy(xs)[Symbol.iterator]();\n            return x;\n          } else {\n            return iter();\n          }\n        });\n      });\n    };\n  };\n  concat = function(ws) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter, xs_unused;\n        xs_unused = true;\n        iter = lazy(ws)[Symbol.iterator]();\n        return Iterator(function() {\n          var x;\n          if (xs_unused) {\n            if ((x = iter()) !== nil) {\n              return x;\n            } else {\n              iter = lazy(xs)[Symbol.iterator]();\n              xs_unused = false;\n              return iter();\n            }\n          } else {\n            return iter();\n          }\n        });\n      });\n    };\n  };\n  map = function(f) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter;\n        iter = lazy(xs)[Symbol.iterator]();\n        return Iterator(function() {\n          var x;\n          if ((x = iter()) !== nil) {\n            return f(x);\n          } else {\n            return nil;\n          }\n        });\n      });\n    };\n  };\n  filter = function(ok) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter;\n        iter = lazy(xs)[Symbol.iterator]();\n        return Iterator(function() {\n          var x;\n          while (!ok(x = iter()) && x !== nil) {\n            null;\n          }\n          return x;\n        });\n      });\n    };\n  };\n  scanl = function(f, r) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter;\n        iter = lazy(xs)[Symbol.iterator]();\n        return Iterator(function() {\n          var got, x;\n          got = r;\n          r = (x = iter()) !== nil ? f(r, x) : nil;\n          return got;\n        });\n      });\n    };\n  };\n  streak = function(n) {\n    return function(xs) {\n      return LazyList(function() {\n        var buf, iter;\n        iter = lazy(xs)[Symbol.iterator]();\n        buf = [];\n        return Iterator(function() {\n          var x;\n          if ((x = iter()) === nil) {\n            return nil;\n          }\n          buf.push(x);\n          if (buf.length > n) {\n            buf.shift(1);\n          }\n          return buf.slice(0);\n        });\n      });\n    };\n  };\n  reverse = function(xs) {\n    var arr;\n    arr = list(lazy(xs));\n    return lazy(arr.reverse());\n  };\n  join = function(xss) {\n    return LazyList(function() {\n      var iter, xs, xs_iter;\n      xs_iter = lazy(xss)[Symbol.iterator]();\n      xs = xs_iter();\n      iter = lazy(xs)[Symbol.iterator]();\n      return Iterator(function() {\n        var x;\n        if ((x = iter()) !== nil) {\n          return x;\n        } else if ((xs = xs_iter()) !== nil) {\n          iter = lazy(xs)[Symbol.iterator]();\n          return iter();\n        } else {\n          return nil;\n        }\n      });\n    });\n  };\n  ref = (function() {\n    var finished, zip, zipWith;\n    finished = function(arr) {\n      var j, len1, x;\n      for (j = 0, len1 = arr.length; j < len1; j++) {\n        x = arr[j];\n        if (x === nil) {\n          return true;\n        }\n      }\n      return false;\n    };\n    zip = function() {\n      var xss;\n      xss = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      return LazyList(function() {\n        var iters, xs;\n        iters = (function() {\n          var j, len1, results;\n          results = [];\n          for (j = 0, len1 = xss.length; j < len1; j++) {\n            xs = xss[j];\n            results.push(lazy(xs)[Symbol.iterator]());\n          }\n          return results;\n        })();\n        return Iterator(function() {\n          var iter, next;\n          next = (function() {\n            var j, len1, results;\n            results = [];\n            for (j = 0, len1 = iters.length; j < len1; j++) {\n              iter = iters[j];\n              results.push(iter());\n            }\n            return results;\n          })();\n          if (finished(next)) {\n            return nil;\n          } else {\n            return next;\n          }\n        });\n      });\n    };\n    zipWith = function(f) {\n      return function() {\n        var xss;\n        xss = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        return LazyList(function() {\n          var iters, xs;\n          iters = (function() {\n            var j, len1, results;\n            results = [];\n            for (j = 0, len1 = xss.length; j < len1; j++) {\n              xs = xss[j];\n              results.push(lazy(xs)[Symbol.iterator]());\n            }\n            return results;\n          })();\n          return Iterator(function() {\n            var iter, next;\n            next = (function() {\n              var j, len1, results;\n              results = [];\n              for (j = 0, len1 = iters.length; j < len1; j++) {\n                iter = iters[j];\n                results.push(iter());\n              }\n              return results;\n            })();\n            if (finished(next)) {\n              return nil;\n            } else {\n              return f.apply(null, next);\n            }\n          });\n        });\n      };\n    };\n    return {\n      zip: zip,\n      zipWith: zipWith\n    };\n  })(), zip = ref.zip, zipWith = ref.zipWith;\n  cartProd = (function() {\n    var apply_vector, inc_vector;\n    inc_vector = function(limits) {\n      var len_minus_1;\n      len_minus_1 = limits.length - 1;\n      return function(vec) {\n        var i;\n        i = len_minus_1;\n        while (!(++vec[i] < limits[i] || i <= 0)) {\n          vec[i--] = 0;\n        }\n        return vec;\n      };\n    };\n    apply_vector = function(space) {\n      var len;\n      len = space.length;\n      return function(vec) {\n        var i, j, ref1, results;\n        results = [];\n        for (i = j = 0, ref1 = len; 0 <= ref1 ? j < ref1 : j > ref1; i = 0 <= ref1 ? ++j : --j) {\n          results.push(space[i][vec[i]]);\n        }\n        return results;\n      };\n    };\n    return function() {\n      var xss;\n      xss = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      return LazyList(function() {\n        var get_value, i, inc, j, len, len1, limits, v, xs;\n        xss = (function() {\n          var j, len1, results;\n          results = [];\n          for (j = 0, len1 = xss.length; j < len1; j++) {\n            xs = xss[j];\n            results.push(list(xs));\n          }\n          return results;\n        })();\n        limits = (function() {\n          var j, ref1, results;\n          results = [];\n          for (i = j = 0, ref1 = xss.length; 0 <= ref1 ? j < ref1 : j > ref1; i = 0 <= ref1 ? ++j : --j) {\n            results.push(xss[i].length);\n          }\n          return results;\n        })();\n        for (j = 0, len1 = limits.length; j < len1; j++) {\n          len = limits[j];\n          if (len === 0) {\n            return nil;\n          }\n        }\n        inc = inc_vector(limits);\n        get_value = apply_vector(xss);\n        v = (function() {\n          var o, ref1, results;\n          results = [];\n          for (i = o = 0, ref1 = xss.length; 0 <= ref1 ? o < ref1 : o > ref1; i = 0 <= ref1 ? ++o : --o) {\n            results.push(0);\n          }\n          return results;\n        })();\n        return Iterator(function() {\n          var r;\n          if (v[0] < limits[0]) {\n            r = get_value(v);\n            inc(v);\n            return r;\n          } else {\n            return nil;\n          }\n        });\n      });\n    };\n  })();\n  list = function(xs) {\n    var it, n, results, results1, x;\n    if (xs instanceof Array) {\n      return xs;\n    } else if (typeof xs === 'function') {\n      it = xs[Symbol.iterator]();\n      results = [];\n      while ((x = it()) !== nil) {\n        results.push(x);\n      }\n      return results;\n    } else if (xs[Symbol.iterator] != null) {\n      it = lazy(xs)[Symbol.iterator]();\n      results1 = [];\n      while ((x = it()) !== nil) {\n        results1.push(x);\n      }\n      return results1;\n    } else if (typeof xs === 'number') {\n      n = xs;\n      return function(xs) {\n        return list(take(n)(xs));\n      };\n    } else {\n      throw Error('list(xs): xs is neither LazyList nor Array');\n    }\n  };\n  last = function(xs) {\n    var iter, r, ref1, x;\n    if (xs[Symbol.iterator] == null) {\n      return (ref1 = xs[xs.length - 1]) != null ? ref1 : nil;\n    } else {\n      iter = lazy(xs)[Symbol.iterator]();\n      r = nil;\n      while ((x = iter()) !== nil) {\n        r = x;\n      }\n      return r;\n    }\n  };\n  length = function(xs) {\n    var iter, r, x;\n    if (xs[Symbol.iterator] == null) {\n      return xs.length;\n    } else {\n      iter = lazy(xs)[Symbol.iterator]();\n      r = 0;\n      while ((x = iter()) !== nil) {\n        ++r;\n      }\n      return r;\n    }\n  };\n  foldl = function(f, init) {\n    return function(xs) {\n      var iter, r, x;\n      r = init;\n      iter = lazy(xs)[Symbol.iterator]();\n      while ((x = iter()) !== nil) {\n        r = f(r, x);\n      }\n      return r;\n    };\n  };\n  best = function(better) {\n    return function(xs) {\n      var it, iter, r;\n      iter = lazy(xs)[Symbol.iterator]();\n      if ((r = iter()) === nil) {\n        return null;\n      }\n      while ((it = iter()) !== nil) {\n        r = better(it, r) ? it : r;\n      }\n      return r;\n    };\n  };\n  all = function(f) {\n    if (typeof f !== 'function') {\n      f = (function(x) {\n        return x === f;\n      });\n    }\n    return function(xs) {\n      var iter, x;\n      iter = lazy(xs)[Symbol.iterator]();\n      while ((x = iter()) !== nil) {\n        if (!f(x)) {\n          return false;\n        }\n      }\n      return true;\n    };\n  };\n  any = function(f) {\n    var all_not;\n    all_not = all(function(x) {\n      return !f(x);\n    });\n    return function(xs) {\n      return !(all_not(xs));\n    };\n  };\n  brk = function() {\n    return brk;\n  };\n  brk.toString = function() {\n    return 'foreach.break';\n  };\n  foreach = function(xs, callback, fruit) {\n    var iter, x;\n    iter = lazy(xs)[Symbol.iterator]();\n    while ((x = iter()) !== nil) {\n      if (callback(x, fruit) === brk) {\n        break;\n      }\n    }\n    return fruit;\n  };\n  Object.defineProperties(foreach, {\n    \"break\": {\n      writable: false,\n      configurable: false,\n      enumerable: false,\n      value: brk\n    }\n  });\n  return {\n    nil: nil,\n    LazyList: LazyList,\n    Iterator: Iterator,\n    Symbol: Symbol,\n    naturals: naturals,\n    range: range,\n    primes: primes,\n    lazy: lazy,\n    enumerate: enumerate,\n    repeat: repeat,\n    iterate: iterate,\n    random_gen: random_gen,\n    ranged_random_gen: ranged_random_gen,\n    permutation_gen: permutation_gen,\n    cons: cons,\n    concat: concat,\n    map: map,\n    filter: filter,\n    take: take,\n    takeWhile: takeWhile,\n    drop: drop,\n    dropWhile: dropWhile,\n    scanl: scanl,\n    streak: streak,\n    reverse: reverse,\n    join: join,\n    zip: zip,\n    zipWith: zipWith,\n    cartProd: cartProd,\n    list: list,\n    last: last,\n    length: length,\n    foldl: foldl,\n    best: best,\n    all: all,\n    any: any,\n    foreach: foreach\n  };\n};\n\nmodule.exports = this_module({\n  Symbol: typeof Symbol !== \"undefined\" && Symbol !== null ? Symbol : {\n    iterator: 'iter'\n  }\n});\n\n\n},{}]},{},[1])(1)\n});\n\n\n//# sourceMappingURL=lazy.js.map","this_module = ({best}) ->\n\t# transformers\n\tflip = (f) ->\n\t\t(x) -> (y) -> f(y)(x)\n\n\tcombine = (f) -> (g) ->\n\t\t(x) -> f g(x)\n\n\tcurry2 = (f) ->\n\t\t(a) -> (b) -> f(a, b)\n\n\tcurry3 = (f) ->\n\t\t(a) -> (b) -> (c) -> f(a, b, c)\n\n\tuncurry2 = (f) ->\n\t\t(a, b) -> f(a)(b)\n\n\tuncurry3 = (f) ->\n\t\t(a, b, c) -> f(a)(b)(c)\n\n\tpack = (f) ->\n\t\t(arr) -> f(arr...)\n\n\tunpack = (f) ->\n\t\t(arr...) -> f(arr)\n\n\t# seek & pluck in Array or Object\n\tseek = (arr) ->\n\t\t(i) -> arr[i]\n\n\tpluck = (attr) ->\n\t\t(d) -> d[attr]\n\n\t# compare\n\tequal = (it) ->\n\t\t(x) -> x == it\n\n\tnotEqual = (it) ->\n\t\t(x) -> x != it\n\n\tlessThan = (it) ->\n\t\t(x) -> x < it\n\n\tgreaterThan = (it) ->\n\t\t(x) -> x > it\n\n\tlessEqual = (it) ->\n\t\t(x) -> x <= it\n\n\tgreaterEqual = (it) ->\n\t\t(x) -> x >= it\n\n\t# math\n\tplus = (it) ->\n\t\t(x) -> x + it\n\n\tminus = (it) ->\n\t\t(x) -> x - it\n\n\tabs = Math.abs\n\tfloor = Math.floor\n\tceil = Math.ceil\n\n\tprecise = (n) ->\n\t\t(x) -> parseFloat x.toPrecision(n)\n\n\taccept_multi_or_array = (f) ->\n\t\t(arr...) ->\n\t\t\tf(if arr.length == 1 and arr.first instanceof Array then arr.first else arr)\n\n\tsum = accept_multi_or_array (arr) ->\n\t\tarr = arr.first if arr.length == 1 and arr.first instanceof Array\n\t\tr = 0\n\t\tr += x for x in arr\n\t\tr\n\n\tmax = accept_multi_or_array (arr) ->\n\t\tbest((a, b) -> a > b) arr\n\n\tmin = accept_multi_or_array (arr) ->\n\t\tbest((a, b) -> a < b) arr\n\n\tmax_index = accept_multi_or_array (arr) ->\n\t\tbest((i, j) -> arr[i] > arr[j]) [0...arr.length]\n\n\tmin_index = accept_multi_or_array (arr) ->\n\t\tbest((i, j) -> arr[i] < arr[j]) [0...arr.length]\n\n\treturn {\n\t\tflip, combine,\n\t\tcurry2, curry3, uncurry2, uncurry3, pack, unpack,\n\t\tseek, pluck,\n\t\tequal, notEqual, lessThan, lessEqual, greaterThan, greaterEqual,\n\t\tplus, minus, abs, floor, ceil, precise,\n\t\tsum, max, min, max_index, min_index,\n\t}\n\nmodule.exports = this_module\n\tbest: require('lazy.coffee').best\n\n","this_module = () ->\n\tint = (s, base) -> if typeof(s) == 'string' then (r = parseInt(s, base); unless s.slice? and r == parseInt(s.slice(0,-1), base) then r else null) else parseInt(0 + s)\n\tfloat = (s) -> if /^-?[0-9]*(\\.[0-9]+)?([eE]-?[0-9]+)?$/.test(s) then parseFloat(s) else null\n\tstr = (x, base) -> x.toString(base)\n\tbool = (x) -> if x in [true, false] then x else null\n\thex = (x) -> x.toString(16)\n\tord = (c) -> c.charCodeAt()\n\tchr = (x) -> String.fromCharCode(x)\n\tjson = (it, indent) -> JSON.stringify(it, null, indent)\n\tobj = (s) -> JSON.parse(s)\n\n\treturn {\n\t\tint, float, bool, str, hex, ord, chr, json, obj,\n\t}\n\nmodule.exports = this_module()\n\n","this_module = () ->\n\tchurch = (n) -> #the nth church number\n\t\titer = (f, n, r) ->\n\t\t\tif n == 0 then r else iter(f, n - 1, f(r))\n\t\t(f) ->\n\t\t\t(x) -> iter(f, n + 0, x)\n\n\tY = (f) -> #the Y combinator\n\t\t((x) -> (x x)) ((x) -> (f ((y) -> ((x x) y))))\n\n\tmemoize = (f, get_key = ((args...) -> json(args))) ->\n\t\tcache = {}\n\t\t(args...) ->\n\t\t\tkey = get_key(args...)\n\t\t\tcached = cache[key]\n\t\t\tif cached?\n\t\t\t\tcached\n\t\t\telse\n\t\t\t\tr = f(args...)\n\t\t\t\tcache[key] = r\n\t\t\t\tr\n\n\treturn {\n\t\tchurch, Y, memoize,\n\t}\n\nmodule.exports = this_module()\n\n","this_module = () ->\n\turi_encoder = (component_packer = str) ->\n\t\t(obj) ->\n\t\t\t(\"#{encodeURIComponent(k)}=#{encodeURIComponent component_packer v}\" for k, v of obj).join('&')\n\n\turi_decoder = (component_unpacker = ((s) -> s)) ->\n\t\t(str) ->\n\t\t\td = {}\n\t\t\tfor s in (str.match /[^?=&]+=[^&]*/g) ? []\n\t\t\t\t[..., k, v] = s.match /([^=]+)=(.*)/\n\t\t\t\td[decodeURIComponent(k)] = (component_unpacker decodeURIComponent v)\n\t\t\treturn d\n\n\treturn {\n\t\turi_encoder, uri_decoder,\n\t}\n\nmodule.exports = this_module()\n\n","this_module = () ->\n\tfunction_literal = (f) ->\n\t\texpr = f.toString().replace(/^\\s*function\\s?\\(\\s?\\)\\s?{\\s*return\\s*([^]*?);?\\s*}$/, '$1')\n\t\texpr = expr.replace(/[\\r\\n]{1,2}\\s*/g, '') if expr.length <= 100\n\t\treturn expr\n\n\ttime_now = ->\n\t\t(new Date).getTime()\n\n\tlog = do -> #log an expression with it's literal and time used\n\t\tdye = do ->\n\t\t\t# ANSI Terminal Colors.\n\t\t\tcavailable = (not window?) and process? and not process.env.NODE_DISABLE_COLORS\n\t\t\tpalette =\n\t\t\t\tbold: '\\x1B[0;1m'\n\t\t\t\tred: '\\x1B[0;31m'\n\t\t\t\tgreen: '\\x1B[0;32m'\n\t\t\t\tyellow: '\\x1B[0;33m'\n\t\t\t\tblue: '\\x1B[0;34m'\n\t\t\t\tbold_grey: '\\x1B[1;30m'\n\t\t\tif not cavailable\n\t\t\t\t(color) -> (s) -> s\n\t\t\telse\n\t\t\t\t(color) ->\n\t\t\t\t\t(s) -> \"#{palette[color]}#{s}#{'\\x1B[0m'}\"\n\n\t\tlog_label = do ->\n\t\t\tflag_palette =\n\t\t\t\t'#': 'bold_grey'\n\t\t\t\t'I': 'green'\n\t\t\t\t'E': 'red'\n\t\t\t\t'W': 'yellow'\n\t\t\top_flag = (op) ->\n\t\t\t\tif op == 'log' then '#' else op[0].toUpperCase()\n\t\t\t(op) ->\n\t\t\t\tflag = op_flag(op)\n\t\t\t\tdye(flag_palette[flag]) flag\n\n\t\thistories = []\n\t\tfactory = (op) ->\n\t\t\tprefix = \"#{dye('bold_grey') '#'}#{log_label op}\"\n\t\t\t(args...) ->\n\t\t\t\tball = []\n\t\t\t\tfor f in args\n\t\t\t\t\tif typeof f == 'function'\n\t\t\t\t\t\texpr = function_literal(f)\n\t\t\t\t\t\tstart_time = time_now()\n\t\t\t\t\t\teval_result = f()\n\t\t\t\t\t\ttime_used = time_now() - start_time\n\t\t\t\t\t\tball.push(\"#{prefix} #{dye('green') expr} #{dye('bold_grey') '==>'}\", eval_result)\n\t\t\t\t\t\tball.push(dye('yellow') \"[#{time_used}ms]\") if time_used > 0\n\t\t\t\t\telse\n\t\t\t\t\t\tball.push(\"#{prefix}\", f)\n\t\t\t\tconsole[op] ball...\n\t\t\t\thistories.push(ball)\n\t\t\t\thistories.shift() if histories.length >= 10\n\t\t\t\treturn null\n\t\tgot = factory('log')\n\t\tgot.histories = histories\n\t\tgot.info = factory('info')\n\t\tgot.warn = factory('warn')\n\t\tgot.error = got.err = factory('error')\n\t\treturn got\n\n\tassert = (f, msg) ->\n\t\t[f, msg] = [msg, f] if f not instanceof Function\n\t\ttry\n\t\t\tr = f()\n\t\tcatch e\n\t\t\tthrow Error \"Assertion #{msg ? function_literal(f)} Unknown:\\n#{e}\"\n\t\tif not r\n\t\t\tthrow Error \"Assertion #{msg ? function_literal(f)} Failed!\"\n\n\tassertEq = (l, r) ->\n\t\ttry\n\t\t\tlv = l()\n\t\t\trv = r()\n\t\tcatch e\n\t\t\tthrow Error \"Equation Between #{function_literal(l)} And #{function_literal(r)} Unknown:\\n#{e}\"\n\t\tif lv isnt rv\n\t\t\tthrow Error \"Equation Failed:\\n\\t#{function_literal(l)} IS #{lv} BUT\\n\\t#{function_literal(r)} IS #{rv}.\"\n\n\tassertEqOn = (f) -> (l, r) ->\n\t\ttry\n\t\t\tlv = l()\n\t\t\trv = r()\n\t\t\tflv = f(lv)\n\t\t\tfrv = f(rv)\n\t\tcatch e\n\t\t\tthrow Error \"MAPPED Equation Between #{function_literal(l)} And #{function_literal(r)} Unknown:\\n#{e}\"\n\t\tif flv isnt frv\n\t\t\tthrow Error \"Equation Failed:\\n\\t#{function_literal(l)} IS #{lv} AND MAPPED TO #{flv} BUT\\n\\t#{function_literal(r)} IS #{rv} AND MAPPED TO #{frv}.\"\n\n\tsecurely = (f) -> # ensure a function not to modify it's arguments\n\t\t(args...) ->\n\t\t\targs = deepcopy args\n\t\t\tf(args...)\n\n\tdict = (pairs) -> #for dict comprehensions\n\t\td = {}\n\t\td[k] = v for [k, v] in pairs\n\t\treturn d\n\n\t{copy, deepcopy} = do ->\n\t\tcp = (root, dep) ->\n\t\t\treturn root if dep == 0 or not root? or typeof(root) != 'object'\n\t\t\tif root instanceof Array\n\t\t\t\tr = (cp(v, dep-1) for v in root)\n\t\t\telse\n\t\t\t\tr = {}\n\t\t\t\tr[k] = cp(v, dep-1) for k, v of root\n\t\t\treturn r\n\t\tcopy: (obj, depth=1) -> cp(obj, depth)\n\t\tdeepcopy: (obj, depth=Infinity) -> cp(obj, depth)\n\n\textend = (base) -> (defaults...) -> #NOTE: modified inplace, use copy() to protect it.\n\t\tfor d in defaults when d?\n\t\t\tbase[k] ?= v for k, v of d #NOTE: null values will be replaced if a default value exists.\n\t\treturn base\n\n\tupdate = (base) -> (updates...) -> #NOTE: modified inplace, use copy() to protect it.\n\t\tfor d in updates when d?\n\t\t\tbase[k] = v for k, v of d\n\t\treturn base\n\n\toverride = (_d) ->\n\t\td = copy _d\n\t\tfallback = d['_']\n\t\tif fallback?\n\t\t\t(args...) ->\n\t\t\t\t(d[args.length] ? fallback) args...\n\t\telse\n\t\t\t(args...) ->\n\t\t\t\tf = d[args.length]\n\t\t\t\tif not f?\n\t\t\t\t\tthrow Error \"This Function Can't Accept #{args.length} Args\"\n\t\t\t\telse\n\t\t\t\t\treturn f args...\n\n\treturn {\n\t\tlog, assert, assertEq, assertEqOn, dict, copy, deepcopy, securely, extend, update, override,\n\t}\n\nmodule.exports = this_module()\n\n"],"sourceRoot":"/source/"}