{"version":3,"sources":["/source/node_modules/browserify/node_modules/browser-pack/_prelude.js","/source/src/coffee-mate.coffee","coffee-mate.js","/source/node_modules/browserify/node_modules/process/browser.js","/source/node_modules/lazy.coffee/build/lazy.js","/source/src/basics.coffee","/source/src/convertors.coffee","/source/src/funny.coffee","/source/src/url-helpers.coffee","/source/src/utils.coffee"],"names":["f","exports","module","define","amd","g","window","global","self","this","CoffeeMate","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"basics","convertors","funny","lazy","url_helpers","utils","extend","./basics","./convertors","./funny","./url-helpers","./utils","lazy.coffee",2,"cleanUpNextTick","draining","currentQueue","queue","concat","queueIndex","drainQueue","timeout","setTimeout","len","run","clearTimeout","Item","fun","array","noop","process","nextTick","args","Array","arguments","push","prototype","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","name","cwd","chdir","dir","umask",3,"this_module","slice","arg","Iterator","LazyList","Symbol","all","any","best","brk","cartProd","cons","drop","dropWhile","enumerate","filter","foldl","foreach","group","groupBy","groupOn","head","iterate","last","list","map","naturals","nil","partition","permutation_gen","primes","random_gen","range","ranged_random_gen","ref","repeat","reverse","scanl","sort","sortOn","streak","take","takeWhile","zip","zipWith","iterator","toString","it","next","value","done","stop","start","step","x","p","Infinity","arr","keys","Object","k","init","st","hash","Math","sin","floor","opts","seed","random","next_permutation","m","ref1","ls","json","xs","c","iter","ok","finished","j","prevx","got","buf","shift","b","fa","fb","eq","memo","v","y","results","xss","xs_iter","len1","iters","apply_vector","inc_vector","limits","len_minus_1","vec","space","get_value","inc","results1","better","all_not","callback","fruit","defineProperties","break","writable","configurable","enumerable",4,"abs","accept_multi_or_array","ceil","combine","curry2","curry3","equal","flip","greaterEqual","greaterThan","lessEqual","lessThan","max","max_index","min","min_index","minus","notEqual","pack","pluck","plus","precise","seek","sum","uncurry2","uncurry3","unpack","attr","d","parseFloat","toPrecision","first",5,"bool","chr","float","hex","int","obj","ord","str","base","parseInt","test","charCodeAt","String","fromCharCode","indent","JSON","stringify","parse",6,"Y","church","memoize","get_key","cache","cached","key",7,"uri_decoder","uri_encoder","component_packer","encodeURIComponent","join","component_unpacker","ref2","match","decodeURIComponent",8,"assert","assertEq","assertEqOn","copy","deepcopy","dict","function_literal","log","override","securely","time_now","update","expr","replace","Date","getTime","dye","factory","histories","log_label","cavailable","palette","NODE_DISABLE_COLORS","bold","red","green","yellow","blue","bold_grey","color","flag_palette","op_flag","#","I","E","W","op","toUpperCase","flag","prefix","ball","eval_result","start_time","time_used","console","info","warn","error","err","msg","Function","_error","lv","rv","flv","frv","pairs","cp","root","dep","depth","defaults","updates","_d","fallback","_process"],"mappings":"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","file":"coffee-mate.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","utils = require './utils'\nbasics = require './basics'\nlazy = require 'lazy.coffee'\nfunny = require './funny'\nconvertors = require './convertors'\nurl_helpers = require './url-helpers'\n\nmodule.exports = utils.extend({}) utils, basics, lazy, funny, convertors, url_helpers\n\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.CoffeeMate = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nvar basics, convertors, funny, lazy, url_helpers, utils;\n\nutils = require('./utils');\n\nbasics = require('./basics');\n\nlazy = require('lazy.coffee');\n\nfunny = require('./funny');\n\nconvertors = require('./convertors');\n\nurl_helpers = require('./url-helpers');\n\nmodule.exports = utils.extend({})(utils, basics, lazy, funny, convertors, url_helpers);\n\n\n},{\"./basics\":4,\"./convertors\":5,\"./funny\":6,\"./url-helpers\":7,\"./utils\":8,\"lazy.coffee\":3}],2:[function(require,module,exports){\n// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            currentQueue[queueIndex].run();\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (!draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],3:[function(require,module,exports){\n(function (global){\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.lazy = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nvar this_module,\n  slice = [].slice;\n\nthis_module = function(arg) {\n  var Iterator, LazyList, Symbol, all, any, best, brk, cartProd, concat, cons, drop, dropWhile, enumerate, filter, foldl, foreach, group, groupBy, groupOn, head, iterate, last, lazy, length, list, map, naturals, nil, partition, permutation_gen, primes, random_gen, range, ranged_random_gen, ref, repeat, reverse, scanl, sort, sortOn, streak, take, takeWhile, zip, zipWith;\n  Symbol = arg.Symbol;\n  LazyList = function(f) {\n    f[Symbol.iterator] = function() {\n      return f();\n    };\n    f.toString = function() {\n      return \"LazyList\";\n    };\n    return f;\n  };\n  nil = LazyList(function() {\n    return nil;\n  });\n  nil.toString = function() {\n    return 'nil';\n  };\n  Iterator = function(it) {\n    it.next = function() {\n      var r;\n      r = it();\n      return {\n        value: r,\n        done: r === nil\n      };\n    };\n    it.toString = function() {\n      return \"Iterator\";\n    };\n    return it;\n  };\n  naturals = LazyList(function() {\n    var i;\n    i = -1;\n    return Iterator(function() {\n      return ++i;\n    });\n  });\n  range = function() {\n    var args;\n    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    if (args.length === 0) {\n      return naturals;\n    } else if (args.length === 1) {\n      return LazyList(function() {\n        var i, stop;\n        stop = args[0];\n        i = -1;\n        return Iterator(function() {\n          if (++i < stop) {\n            return i;\n          } else {\n            return nil;\n          }\n        });\n      });\n    } else if (args.length === 2) {\n      return LazyList(function() {\n        var i, start, stop;\n        start = args[0], stop = args[1];\n        if (start < stop) {\n          i = start - 1;\n          return Iterator(function() {\n            if (++i < stop) {\n              return i;\n            } else {\n              return nil;\n            }\n          });\n        } else {\n          i = start + 1;\n          return Iterator(function() {\n            if (--i > stop) {\n              return i;\n            } else {\n              return nil;\n            }\n          });\n        }\n      });\n    } else {\n      return LazyList(function() {\n        var i, start, step, stop;\n        start = args[0], stop = args[1], step = args[2];\n        if (stop !== start && (stop - start) * step < 0) {\n          throw 'ERR IN range(): YOU ARE CREATING AN UNLIMITTED RANGE';\n        }\n        i = start - step;\n        if (start < stop) {\n          return Iterator(function() {\n            if ((i += step) < stop) {\n              return i;\n            } else {\n              return nil;\n            }\n          });\n        } else {\n          return Iterator(function() {\n            if ((i += step) > stop) {\n              return i;\n            } else {\n              return nil;\n            }\n          });\n        }\n      });\n    }\n  };\n  primes = LazyList(function() {\n    return filter(function(x) {\n      return all(function(p) {\n        return x % p !== 0;\n      })(takeWhile(function(p) {\n        return p * p <= x;\n      })(range(2, Infinity)));\n    })(range(2, Infinity))();\n  });\n  lazy = function(arr) {\n    if (typeof arr === 'function') {\n      if (arr[Symbol.iterator] != null) {\n        return arr;\n      } else {\n        return LazyList(arr);\n      }\n    } else if (arr[Symbol.iterator] != null) {\n      return LazyList(function() {\n        var it;\n        it = arr[Symbol.iterator]();\n        return Iterator(function() {\n          var r;\n          r = it.next();\n          if (r.done) {\n            return nil;\n          } else {\n            return r.value;\n          }\n        });\n      });\n    } else {\n      return LazyList(function() {\n        var i;\n        i = -1;\n        return Iterator(function() {\n          i += 1;\n          if (i < arr.length) {\n            return arr[i];\n          } else {\n            return nil;\n          }\n        });\n      });\n    }\n  };\n  enumerate = function(it) {\n    if ((it[Symbol.iterator] != null) || it instanceof Array) {\n      return zip(naturals, it);\n    } else {\n      return LazyList(function() {\n        var i, keys;\n        keys = Object.keys(it);\n        i = -1;\n        return Iterator(function() {\n          var k;\n          if (++i < keys.length) {\n            return [(k = keys[i]), it[k]];\n          } else {\n            return nil;\n          }\n        });\n      });\n    }\n  };\n  repeat = function(x) {\n    return LazyList(function() {\n      return Iterator(function() {\n        return x;\n      });\n    });\n  };\n  iterate = function(next, init) {\n    return LazyList(function() {\n      var st;\n      st = init;\n      return Iterator(function() {\n        var r;\n        r = st;\n        st = next(st);\n        return r;\n      });\n    });\n  };\n  random_gen = (function() {\n    var hash;\n    hash = function(x) {\n      x = Math.sin(x) * 1e4;\n      return x - Math.floor(x);\n    };\n    return function(opts) {\n      var ref, seed;\n      seed = hash((ref = opts != null ? opts.seed : void 0) != null ? ref : Math.random());\n      return iterate(hash, seed);\n    };\n  })();\n  ranged_random_gen = function(range, opts) {\n    var ref, seed;\n    seed = (ref = opts != null ? opts.seed : void 0) != null ? ref : Math.random();\n    return map(function(x) {\n      return Math.floor(x * range);\n    })(random_gen({\n      seed: seed\n    }));\n  };\n  permutation_gen = (function() {\n    var next_permutation;\n    next_permutation = function(x) {\n      var l, m, r, ref, ref1;\n      x = x.slice(0);\n      l = x.length - 1;\n      while (l >= 1 && x[l] <= x[l - 1]) {\n        --l;\n      }\n      if (l !== 0) {\n        m = x.length - 1;\n        while (m > l - 1 && x[m] <= x[l - 1]) {\n          --m;\n        }\n        ref = [x[l - 1], x[m]], x[m] = ref[0], x[l - 1] = ref[1];\n      }\n      r = x.length - 1;\n      while (l < r) {\n        ref1 = [x[r], x[l]], x[l] = ref1[0], x[r] = ref1[1];\n        ++l;\n        --r;\n      }\n      return x;\n    };\n    return function(arr) {\n      if (arr.length === 0) {\n        return nil;\n      } else {\n        return cons(arr.slice(0))(takeWhile(function(ls) {\n          return json(ls) !== json(arr);\n        })(drop(1)(iterate(next_permutation, arr))));\n      }\n    };\n  })();\n  take = function(n) {\n    return function(xs) {\n      return LazyList(function() {\n        var c, iter;\n        iter = lazy(xs)[Symbol.iterator]();\n        c = -1;\n        return Iterator(function() {\n          if (++c < n) {\n            return iter();\n          } else {\n            return nil;\n          }\n        });\n      });\n    };\n  };\n  takeWhile = function(ok) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter;\n        iter = lazy(xs)[Symbol.iterator]();\n        return Iterator(function() {\n          var x;\n          if ((x = iter()) !== nil && ok(x)) {\n            return x;\n          } else {\n            return nil;\n          }\n        });\n      });\n    };\n  };\n  drop = function(n) {\n    return function(xs) {\n      return LazyList(function() {\n        var finished, i, iter, j, ref;\n        iter = lazy(xs)[Symbol.iterator]();\n        finished = false;\n        for (i = j = 0, ref = n; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n          finished || (finished = iter() === nil);\n          if (finished) {\n            break;\n          }\n        }\n        if (finished) {\n          return function() {\n            return nil;\n          };\n        } else {\n          return iter;\n        }\n      });\n    };\n  };\n  dropWhile = function(ok) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter, x;\n        iter = lazy(xs)[Symbol.iterator]();\n        while (ok(x = iter()) && x !== nil) {\n          null;\n        }\n        return Iterator(function() {\n          var prevx, ref;\n          ref = [x, iter()], prevx = ref[0], x = ref[1];\n          return prevx;\n        });\n      });\n    };\n  };\n  cons = function(x) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter;\n        iter = null;\n        return Iterator(function() {\n          if (iter === null) {\n            iter = lazy(xs)[Symbol.iterator]();\n            return x;\n          } else {\n            return iter();\n          }\n        });\n      });\n    };\n  };\n  map = function(f) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter;\n        iter = lazy(xs)[Symbol.iterator]();\n        return Iterator(function() {\n          var x;\n          if ((x = iter()) !== nil) {\n            return f(x);\n          } else {\n            return nil;\n          }\n        });\n      });\n    };\n  };\n  filter = function(ok) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter;\n        iter = lazy(xs)[Symbol.iterator]();\n        return Iterator(function() {\n          var x;\n          while (!ok(x = iter()) && x !== nil) {\n            null;\n          }\n          return x;\n        });\n      });\n    };\n  };\n  scanl = function(f, r) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter;\n        iter = lazy(xs)[Symbol.iterator]();\n        return Iterator(function() {\n          var got, x;\n          got = r;\n          r = (x = iter()) !== nil ? f(r, x) : nil;\n          return got;\n        });\n      });\n    };\n  };\n  streak = function(n) {\n    if (n < 1) {\n      return nil;\n    } else {\n      return function(xs) {\n        return drop(n - 1)(LazyList(function() {\n          var buf, iter;\n          iter = lazy(xs)[Symbol.iterator]();\n          buf = [];\n          return Iterator(function() {\n            var x;\n            if ((x = iter()) === nil) {\n              return nil;\n            }\n            buf.push(x);\n            if (buf.length > n) {\n              buf.shift(1);\n            }\n            return buf.slice(0);\n          });\n        }));\n      };\n    }\n  };\n  reverse = function(xs) {\n    var arr;\n    arr = list(lazy(xs));\n    return arr.reverse();\n  };\n  sort = function(xs) {\n    var arr;\n    arr = list(lazy(xs));\n    return arr.sort();\n  };\n  sortOn = function(f) {\n    return function(xs) {\n      var arr;\n      arr = list(lazy(xs));\n      return arr.sort(function(a, b) {\n        var fa, fb;\n        return ((fa = f(a)) > (fb = f(b))) - (fa < fb);\n      });\n    };\n  };\n  group = function(xs) {\n    return LazyList(function() {\n      var iter, t, x;\n      iter = lazy(xs)[Symbol.iterator]();\n      t = nil;\n      x = iter();\n      return Iterator(function() {\n        if (x === nil) {\n          return nil;\n        } else if (x !== t) {\n          t = x;\n          return LazyList(function() {\n            return Iterator(function() {\n              var r;\n              if ((r = x) === t) {\n                x = iter();\n                return r;\n              } else {\n                return nil;\n              }\n            });\n          });\n        }\n      });\n    });\n  };\n  groupBy = function(eq) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter, t, x;\n        iter = lazy(xs)[Symbol.iterator]();\n        t = nil;\n        x = iter();\n        return Iterator(function() {\n          if (x === nil) {\n            return nil;\n          } else if (!eq(x, t)) {\n            t = x;\n            return LazyList(function() {\n              return Iterator(function() {\n                var r;\n                if (eq((r = x), t)) {\n                  x = iter();\n                  return r;\n                } else {\n                  return nil;\n                }\n              });\n            });\n          }\n        });\n      });\n    };\n  };\n  groupOn = function(f) {\n    return function(xs) {\n      var k, memo, v;\n      memo = {};\n      foreach(xs, function(x) {\n        var y;\n        y = f(x);\n        if (memo[y] == null) {\n          memo[y] = [];\n        }\n        return memo[y].push(x);\n      });\n      return (function() {\n        var results;\n        results = [];\n        for (k in memo) {\n          v = memo[k];\n          results.push(v);\n        }\n        return results;\n      })();\n    };\n  };\n  partition = function(f) {\n    return function(xs) {\n      var memo;\n      memo = [[], []];\n      foreach(xs, function(x) {\n        var y;\n        y = !f(x) + 0;\n        return memo[y].push(x);\n      });\n      return memo;\n    };\n  };\n  concat = function(xss) {\n    return LazyList(function() {\n      var iter, xs, xs_iter;\n      xs_iter = lazy(xss)[Symbol.iterator]();\n      xs = xs_iter();\n      iter = lazy(xs)[Symbol.iterator]();\n      return Iterator(function() {\n        var x;\n        if ((x = iter()) !== nil) {\n          return x;\n        } else if ((xs = xs_iter()) !== nil) {\n          iter = lazy(xs)[Symbol.iterator]();\n          return iter();\n        } else {\n          return nil;\n        }\n      });\n    });\n  };\n  ref = (function() {\n    var finished, zip, zipWith;\n    finished = function(arr) {\n      var j, len1, x;\n      for (j = 0, len1 = arr.length; j < len1; j++) {\n        x = arr[j];\n        if (x === nil) {\n          return true;\n        }\n      }\n      return false;\n    };\n    zip = function() {\n      var xss;\n      xss = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      return LazyList(function() {\n        var iters, xs;\n        iters = (function() {\n          var j, len1, results;\n          results = [];\n          for (j = 0, len1 = xss.length; j < len1; j++) {\n            xs = xss[j];\n            results.push(lazy(xs)[Symbol.iterator]());\n          }\n          return results;\n        })();\n        return Iterator(function() {\n          var iter, next;\n          next = (function() {\n            var j, len1, results;\n            results = [];\n            for (j = 0, len1 = iters.length; j < len1; j++) {\n              iter = iters[j];\n              results.push(iter());\n            }\n            return results;\n          })();\n          if (finished(next)) {\n            return nil;\n          } else {\n            return next;\n          }\n        });\n      });\n    };\n    zipWith = function(f) {\n      return function() {\n        var xss;\n        xss = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        return LazyList(function() {\n          var iters, xs;\n          iters = (function() {\n            var j, len1, results;\n            results = [];\n            for (j = 0, len1 = xss.length; j < len1; j++) {\n              xs = xss[j];\n              results.push(lazy(xs)[Symbol.iterator]());\n            }\n            return results;\n          })();\n          return Iterator(function() {\n            var iter, next;\n            next = (function() {\n              var j, len1, results;\n              results = [];\n              for (j = 0, len1 = iters.length; j < len1; j++) {\n                iter = iters[j];\n                results.push(iter());\n              }\n              return results;\n            })();\n            if (finished(next)) {\n              return nil;\n            } else {\n              return f.apply(null, next);\n            }\n          });\n        });\n      };\n    };\n    return {\n      zip: zip,\n      zipWith: zipWith\n    };\n  })(), zip = ref.zip, zipWith = ref.zipWith;\n  cartProd = (function() {\n    var apply_vector, inc_vector;\n    inc_vector = function(limits) {\n      var len_minus_1;\n      len_minus_1 = limits.length - 1;\n      return function(vec) {\n        var i;\n        i = len_minus_1;\n        while (!(++vec[i] < limits[i] || i <= 0)) {\n          vec[i--] = 0;\n        }\n        return vec;\n      };\n    };\n    apply_vector = function(space) {\n      var len;\n      len = space.length;\n      return function(vec) {\n        var i, j, ref1, results;\n        results = [];\n        for (i = j = 0, ref1 = len; 0 <= ref1 ? j < ref1 : j > ref1; i = 0 <= ref1 ? ++j : --j) {\n          results.push(space[i][vec[i]]);\n        }\n        return results;\n      };\n    };\n    return function() {\n      var xss;\n      xss = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      return LazyList(function() {\n        var get_value, i, inc, j, len, len1, limits, v, xs;\n        xss = (function() {\n          var j, len1, results;\n          results = [];\n          for (j = 0, len1 = xss.length; j < len1; j++) {\n            xs = xss[j];\n            results.push(list(xs));\n          }\n          return results;\n        })();\n        limits = (function() {\n          var j, ref1, results;\n          results = [];\n          for (i = j = 0, ref1 = xss.length; 0 <= ref1 ? j < ref1 : j > ref1; i = 0 <= ref1 ? ++j : --j) {\n            results.push(xss[i].length);\n          }\n          return results;\n        })();\n        for (j = 0, len1 = limits.length; j < len1; j++) {\n          len = limits[j];\n          if (len === 0) {\n            return nil;\n          }\n        }\n        inc = inc_vector(limits);\n        get_value = apply_vector(xss);\n        v = (function() {\n          var o, ref1, results;\n          results = [];\n          for (i = o = 0, ref1 = xss.length; 0 <= ref1 ? o < ref1 : o > ref1; i = 0 <= ref1 ? ++o : --o) {\n            results.push(0);\n          }\n          return results;\n        })();\n        return Iterator(function() {\n          var r;\n          if (v[0] < limits[0]) {\n            r = get_value(v);\n            inc(v);\n            return r;\n          } else {\n            return nil;\n          }\n        });\n      });\n    };\n  })();\n  list = function(xs) {\n    var it, n, results, results1, x;\n    if (xs instanceof Array) {\n      return xs;\n    } else if (typeof xs === 'function') {\n      it = xs[Symbol.iterator]();\n      results = [];\n      while ((x = it()) !== nil) {\n        results.push(x);\n      }\n      return results;\n    } else if (xs[Symbol.iterator] != null) {\n      it = lazy(xs)[Symbol.iterator]();\n      results1 = [];\n      while ((x = it()) !== nil) {\n        results1.push(x);\n      }\n      return results1;\n    } else if (typeof xs === 'number') {\n      n = xs;\n      return function(xs) {\n        return list(take(n)(xs));\n      };\n    } else {\n      throw Error('list(xs): xs is neither LazyList nor Array');\n    }\n  };\n  head = function(xs) {\n    var iter, ref1;\n    if (xs[Symbol.iterator] == null) {\n      return (ref1 = xs[0]) != null ? ref1 : nil;\n    } else {\n      iter = lazy(xs)[Symbol.iterator]();\n      return iter();\n    }\n  };\n  last = function(xs) {\n    var iter, r, ref1, x;\n    if (xs[Symbol.iterator] == null) {\n      return (ref1 = xs[xs.length - 1]) != null ? ref1 : nil;\n    } else {\n      iter = lazy(xs)[Symbol.iterator]();\n      r = nil;\n      while ((x = iter()) !== nil) {\n        r = x;\n      }\n      return r;\n    }\n  };\n  length = function(xs) {\n    var iter, r, x;\n    if (xs[Symbol.iterator] == null) {\n      return xs.length;\n    } else {\n      iter = lazy(xs)[Symbol.iterator]();\n      r = 0;\n      while ((x = iter()) !== nil) {\n        ++r;\n      }\n      return r;\n    }\n  };\n  foldl = function(f, init) {\n    return function(xs) {\n      var iter, r, x;\n      r = init;\n      iter = lazy(xs)[Symbol.iterator]();\n      while ((x = iter()) !== nil) {\n        r = f(r, x);\n      }\n      return r;\n    };\n  };\n  best = function(better) {\n    return function(xs) {\n      var it, iter, r;\n      iter = lazy(xs)[Symbol.iterator]();\n      if ((r = iter()) === nil) {\n        return null;\n      }\n      while ((it = iter()) !== nil) {\n        r = better(it, r) ? it : r;\n      }\n      return r;\n    };\n  };\n  all = function(f) {\n    if (typeof f !== 'function') {\n      f = (function(x) {\n        return x === f;\n      });\n    }\n    return function(xs) {\n      var iter, x;\n      iter = lazy(xs)[Symbol.iterator]();\n      while ((x = iter()) !== nil) {\n        if (!f(x)) {\n          return false;\n        }\n      }\n      return true;\n    };\n  };\n  any = function(f) {\n    var all_not;\n    all_not = all(function(x) {\n      return !f(x);\n    });\n    return function(xs) {\n      return !(all_not(xs));\n    };\n  };\n  brk = function() {\n    return brk;\n  };\n  brk.toString = function() {\n    return 'foreach.break';\n  };\n  foreach = function(xs, callback, fruit) {\n    var iter, x;\n    iter = lazy(xs)[Symbol.iterator]();\n    while ((x = iter()) !== nil) {\n      if (callback(x, fruit) === brk) {\n        break;\n      }\n    }\n    return fruit;\n  };\n  Object.defineProperties(foreach, {\n    \"break\": {\n      writable: false,\n      configurable: false,\n      enumerable: false,\n      value: brk\n    }\n  });\n  return {\n    nil: nil,\n    LazyList: LazyList,\n    Iterator: Iterator,\n    Symbol: Symbol,\n    naturals: naturals,\n    range: range,\n    primes: primes,\n    lazy: lazy,\n    enumerate: enumerate,\n    repeat: repeat,\n    iterate: iterate,\n    random_gen: random_gen,\n    ranged_random_gen: ranged_random_gen,\n    permutation_gen: permutation_gen,\n    cons: cons,\n    map: map,\n    filter: filter,\n    take: take,\n    takeWhile: takeWhile,\n    drop: drop,\n    dropWhile: dropWhile,\n    scanl: scanl,\n    streak: streak,\n    reverse: reverse,\n    sort: sort,\n    sortOn: sortOn,\n    group: group,\n    groupBy: groupBy,\n    groupOn: groupOn,\n    partition: partition,\n    concat: concat,\n    zip: zip,\n    zipWith: zipWith,\n    cartProd: cartProd,\n    list: list,\n    head: head,\n    last: last,\n    length: length,\n    foldl: foldl,\n    best: best,\n    all: all,\n    any: any,\n    foreach: foreach\n  };\n};\n\nmodule.exports = this_module({\n  Symbol: typeof Symbol !== \"undefined\" && Symbol !== null ? Symbol : {\n    iterator: 'iter'\n  }\n});\n\n\n},{}]},{},[1])(1)\n});\n\n\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],4:[function(require,module,exports){\nvar this_module,\n  slice = [].slice;\n\nthis_module = function(arg) {\n  var abs, accept_multi_or_array, best, ceil, combine, curry2, curry3, equal, flip, floor, greaterEqual, greaterThan, lessEqual, lessThan, max, max_index, min, min_index, minus, notEqual, pack, pluck, plus, precise, seek, sum, uncurry2, uncurry3, unpack;\n  best = arg.best;\n  flip = function(f) {\n    return function(x) {\n      return function(y) {\n        return f(y)(x);\n      };\n    };\n  };\n  combine = function(f) {\n    return function(g) {\n      return function(x) {\n        return f(g(x));\n      };\n    };\n  };\n  curry2 = function(f) {\n    return function(a) {\n      return function(b) {\n        return f(a, b);\n      };\n    };\n  };\n  curry3 = function(f) {\n    return function(a) {\n      return function(b) {\n        return function(c) {\n          return f(a, b, c);\n        };\n      };\n    };\n  };\n  uncurry2 = function(f) {\n    return function(a, b) {\n      return f(a)(b);\n    };\n  };\n  uncurry3 = function(f) {\n    return function(a, b, c) {\n      return f(a)(b)(c);\n    };\n  };\n  pack = function(f) {\n    return function(arr) {\n      return f.apply(null, arr);\n    };\n  };\n  unpack = function(f) {\n    return function() {\n      var arr;\n      arr = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      return f(arr);\n    };\n  };\n  seek = function(arr) {\n    return function(i) {\n      return arr[i];\n    };\n  };\n  pluck = function(attr) {\n    return function(d) {\n      return d[attr];\n    };\n  };\n  equal = function(it) {\n    return function(x) {\n      return x === it;\n    };\n  };\n  notEqual = function(it) {\n    return function(x) {\n      return x !== it;\n    };\n  };\n  lessThan = function(it) {\n    return function(x) {\n      return x < it;\n    };\n  };\n  greaterThan = function(it) {\n    return function(x) {\n      return x > it;\n    };\n  };\n  lessEqual = function(it) {\n    return function(x) {\n      return x <= it;\n    };\n  };\n  greaterEqual = function(it) {\n    return function(x) {\n      return x >= it;\n    };\n  };\n  plus = function(it) {\n    return function(x) {\n      return x + it;\n    };\n  };\n  minus = function(it) {\n    return function(x) {\n      return x - it;\n    };\n  };\n  abs = Math.abs;\n  floor = Math.floor;\n  ceil = Math.ceil;\n  precise = function(n) {\n    return function(x) {\n      return parseFloat(x.toPrecision(n));\n    };\n  };\n  accept_multi_or_array = function(f) {\n    return function() {\n      var arr;\n      arr = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      return f(arr.length === 1 && arr.first instanceof Array ? arr.first : arr);\n    };\n  };\n  sum = accept_multi_or_array(function(arr) {\n    var k, len, r, x;\n    if (arr.length === 1 && arr.first instanceof Array) {\n      arr = arr.first;\n    }\n    r = 0;\n    for (k = 0, len = arr.length; k < len; k++) {\n      x = arr[k];\n      r += x;\n    }\n    return r;\n  });\n  max = accept_multi_or_array(function(arr) {\n    return best(function(a, b) {\n      return a > b;\n    })(arr);\n  });\n  min = accept_multi_or_array(function(arr) {\n    return best(function(a, b) {\n      return a < b;\n    })(arr);\n  });\n  max_index = accept_multi_or_array(function(arr) {\n    var k, ref, results;\n    return best(function(i, j) {\n      return arr[i] > arr[j];\n    })((function() {\n      results = [];\n      for (var k = 0, ref = arr.length; 0 <= ref ? k < ref : k > ref; 0 <= ref ? k++ : k--){ results.push(k); }\n      return results;\n    }).apply(this));\n  });\n  min_index = accept_multi_or_array(function(arr) {\n    var k, ref, results;\n    return best(function(i, j) {\n      return arr[i] < arr[j];\n    })((function() {\n      results = [];\n      for (var k = 0, ref = arr.length; 0 <= ref ? k < ref : k > ref; 0 <= ref ? k++ : k--){ results.push(k); }\n      return results;\n    }).apply(this));\n  });\n  return {\n    flip: flip,\n    combine: combine,\n    curry2: curry2,\n    curry3: curry3,\n    uncurry2: uncurry2,\n    uncurry3: uncurry3,\n    pack: pack,\n    unpack: unpack,\n    seek: seek,\n    pluck: pluck,\n    equal: equal,\n    notEqual: notEqual,\n    lessThan: lessThan,\n    lessEqual: lessEqual,\n    greaterThan: greaterThan,\n    greaterEqual: greaterEqual,\n    plus: plus,\n    minus: minus,\n    abs: abs,\n    floor: floor,\n    ceil: ceil,\n    precise: precise,\n    sum: sum,\n    max: max,\n    min: min,\n    max_index: max_index,\n    min_index: min_index\n  };\n};\n\nmodule.exports = this_module({\n  best: require('lazy.coffee').best\n});\n\n\n},{\"lazy.coffee\":3}],5:[function(require,module,exports){\nvar this_module;\n\nthis_module = function() {\n  var bool, chr, float, hex, int, json, obj, ord, str;\n  int = function(s, base) {\n    var r;\n    if (typeof s === 'string') {\n      r = parseInt(s, base);\n      if (!((s.slice != null) && r === parseInt(s.slice(0, -1), base))) {\n        return r;\n      } else {\n        return null;\n      }\n    } else {\n      return parseInt(0 + s);\n    }\n  };\n  float = function(s) {\n    if (/^-?[0-9]*(\\.[0-9]+)?([eE]-?[0-9]+)?$/.test(s)) {\n      return parseFloat(s);\n    } else {\n      return null;\n    }\n  };\n  str = function(x, base) {\n    return x.toString(base);\n  };\n  bool = function(x) {\n    if (x === true || x === false) {\n      return x;\n    } else {\n      return null;\n    }\n  };\n  hex = function(x) {\n    return x.toString(16);\n  };\n  ord = function(c) {\n    return c.charCodeAt();\n  };\n  chr = function(x) {\n    return String.fromCharCode(x);\n  };\n  json = function(it, indent) {\n    return JSON.stringify(it, null, indent);\n  };\n  obj = function(s) {\n    return JSON.parse(s);\n  };\n  return {\n    int: int,\n    float: float,\n    bool: bool,\n    str: str,\n    hex: hex,\n    ord: ord,\n    chr: chr,\n    json: json,\n    obj: obj\n  };\n};\n\nmodule.exports = this_module();\n\n\n},{}],6:[function(require,module,exports){\nvar this_module,\n  slice = [].slice;\n\nthis_module = function() {\n  var Y, church, memoize;\n  church = function(n) {\n    var iter;\n    iter = function(f, n, r) {\n      if (n === 0) {\n        return r;\n      } else {\n        return iter(f, n - 1, f(r));\n      }\n    };\n    return function(f) {\n      return function(x) {\n        return iter(f, n + 0, x);\n      };\n    };\n  };\n  Y = function(f) {\n    return (function(x) {\n      return x(x);\n    })((function(x) {\n      return f((function(y) {\n        return (x(x))(y);\n      }));\n    }));\n  };\n  memoize = function(f, get_key) {\n    var cache;\n    if (get_key == null) {\n      get_key = (function() {\n        var args;\n        args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        return json(args);\n      });\n    }\n    cache = {};\n    return function() {\n      var args, cached, key, r;\n      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      key = get_key.apply(null, args);\n      cached = cache[key];\n      if (cached != null) {\n        return cached;\n      } else {\n        r = f.apply(null, args);\n        cache[key] = r;\n        return r;\n      }\n    };\n  };\n  return {\n    church: church,\n    Y: Y,\n    memoize: memoize\n  };\n};\n\nmodule.exports = this_module();\n\n\n},{}],7:[function(require,module,exports){\nvar this_module;\n\nthis_module = function() {\n  var uri_decoder, uri_encoder;\n  uri_encoder = function(component_packer) {\n    if (component_packer == null) {\n      component_packer = str;\n    }\n    return function(obj) {\n      var k, v;\n      return ((function() {\n        var results;\n        results = [];\n        for (k in obj) {\n          v = obj[k];\n          results.push((encodeURIComponent(k)) + \"=\" + (encodeURIComponent(component_packer(v))));\n        }\n        return results;\n      })()).join('&');\n    };\n  };\n  uri_decoder = function(component_unpacker) {\n    if (component_unpacker == null) {\n      component_unpacker = (function(s) {\n        return s;\n      });\n    }\n    return function(str) {\n      var d, i, j, k, len, ref, ref1, ref2, s, v;\n      d = {};\n      ref1 = (ref = str.match(/[^?=&]+=[^&]*/g)) != null ? ref : [];\n      for (i = 0, len = ref1.length; i < len; i++) {\n        s = ref1[i];\n        ref2 = s.match(/([^=]+)=(.*)/), j = ref2.length - 2, k = ref2[j++], v = ref2[j++];\n        d[decodeURIComponent(k)] = component_unpacker(decodeURIComponent(v));\n      }\n      return d;\n    };\n  };\n  return {\n    uri_encoder: uri_encoder,\n    uri_decoder: uri_decoder\n  };\n};\n\nmodule.exports = this_module();\n\n\n},{}],8:[function(require,module,exports){\n(function (process){\nvar this_module,\n  slice = [].slice;\n\nthis_module = function() {\n  var assert, assertEq, assertEqOn, copy, deepcopy, dict, extend, function_literal, log, override, ref, securely, time_now, update;\n  function_literal = function(f) {\n    var expr;\n    expr = f.toString().replace(/^\\s*function\\s?\\(\\s?\\)\\s?{\\s*return\\s*([^]*?);?\\s*}$/, '$1');\n    if (expr.length <= 100) {\n      expr = expr.replace(/[\\r\\n]{1,2}\\s*/g, '');\n    }\n    return expr;\n  };\n  time_now = function() {\n    return (new Date).getTime();\n  };\n  log = (function() {\n    var dye, factory, got, histories, log_label;\n    dye = (function() {\n      var cavailable, palette;\n      cavailable = (typeof window === \"undefined\" || window === null) && (typeof process !== \"undefined\" && process !== null) && !process.env.NODE_DISABLE_COLORS;\n      palette = {\n        bold: '\\x1B[0;1m',\n        red: '\\x1B[0;31m',\n        green: '\\x1B[0;32m',\n        yellow: '\\x1B[0;33m',\n        blue: '\\x1B[0;34m',\n        bold_grey: '\\x1B[1;30m'\n      };\n      if (!cavailable) {\n        return function(color) {\n          return function(s) {\n            return s;\n          };\n        };\n      } else {\n        return function(color) {\n          return function(s) {\n            return \"\" + palette[color] + s + '\\x1B[0m';\n          };\n        };\n      }\n    })();\n    log_label = (function() {\n      var flag_palette, op_flag;\n      flag_palette = {\n        '#': 'bold_grey',\n        'I': 'green',\n        'E': 'red',\n        'W': 'yellow'\n      };\n      op_flag = function(op) {\n        if (op === 'log') {\n          return '#';\n        } else {\n          return op[0].toUpperCase();\n        }\n      };\n      return function(op) {\n        var flag;\n        flag = op_flag(op);\n        return dye(flag_palette[flag])(flag);\n      };\n    })();\n    histories = [];\n    factory = function(op) {\n      var prefix;\n      prefix = \"\" + (dye('bold_grey')('#')) + (log_label(op));\n      return function() {\n        var args, ball, eval_result, expr, f, i, len, start_time, time_used;\n        args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        ball = [];\n        for (i = 0, len = args.length; i < len; i++) {\n          f = args[i];\n          if (typeof f === 'function') {\n            expr = function_literal(f);\n            start_time = time_now();\n            eval_result = f();\n            time_used = time_now() - start_time;\n            ball.push(prefix + \" \" + (dye('green')(expr)) + \" \" + (dye('bold_grey')('==>')), eval_result);\n            if (time_used > 0) {\n              ball.push(dye('yellow')(\"[\" + time_used + \"ms]\"));\n            }\n          } else {\n            ball.push(\"\" + prefix, f);\n          }\n        }\n        console[op].apply(console, ball);\n        histories.push(ball);\n        if (histories.length >= 10) {\n          histories.shift();\n        }\n        return null;\n      };\n    };\n    got = factory('log');\n    got.histories = histories;\n    got.info = factory('info');\n    got.warn = factory('warn');\n    got.error = got.err = factory('error');\n    return got;\n  })();\n  assert = function(f, msg) {\n    var e, r, ref;\n    if (!(f instanceof Function)) {\n      ref = [msg, f], f = ref[0], msg = ref[1];\n    }\n    try {\n      r = f();\n    } catch (_error) {\n      e = _error;\n      throw Error(\"Assertion \" + (msg != null ? msg : function_literal(f)) + \" Unknown:\\n\" + e);\n    }\n    if (!r) {\n      throw Error(\"Assertion \" + (msg != null ? msg : function_literal(f)) + \" Failed!\");\n    }\n  };\n  assertEq = function(l, r) {\n    var e, lv, rv;\n    try {\n      lv = l();\n      rv = r();\n    } catch (_error) {\n      e = _error;\n      throw Error(\"Equation Between \" + (function_literal(l)) + \" And \" + (function_literal(r)) + \" Unknown:\\n\" + e);\n    }\n    if (lv !== rv) {\n      throw Error(\"Equation Failed:\\n\\t\" + (function_literal(l)) + \" IS \" + lv + \" BUT\\n\\t\" + (function_literal(r)) + \" IS \" + rv + \".\");\n    }\n  };\n  assertEqOn = function(f) {\n    return function(l, r) {\n      var e, flv, frv, lv, rv;\n      try {\n        lv = l();\n        rv = r();\n        flv = f(lv);\n        frv = f(rv);\n      } catch (_error) {\n        e = _error;\n        throw Error(\"MAPPED Equation Between \" + (function_literal(l)) + \" And \" + (function_literal(r)) + \" Unknown:\\n\" + e);\n      }\n      if (flv !== frv) {\n        throw Error(\"Equation Failed:\\n\\t\" + (function_literal(l)) + \" IS \" + lv + \" AND MAPPED TO \" + flv + \" BUT\\n\\t\" + (function_literal(r)) + \" IS \" + rv + \" AND MAPPED TO \" + frv + \".\");\n      }\n    };\n  };\n  securely = function(f) {\n    return function() {\n      var args;\n      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      args = deepcopy(args);\n      return f.apply(null, args);\n    };\n  };\n  dict = function(pairs) {\n    var d, i, k, len, ref, v;\n    d = {};\n    for (i = 0, len = pairs.length; i < len; i++) {\n      ref = pairs[i], k = ref[0], v = ref[1];\n      d[k] = v;\n    }\n    return d;\n  };\n  ref = (function() {\n    var cp;\n    cp = function(root, dep) {\n      var k, r, v;\n      if (dep === 0 || (root == null) || typeof root !== 'object') {\n        return root;\n      }\n      if (root instanceof Array) {\n        r = (function() {\n          var i, len, results;\n          results = [];\n          for (i = 0, len = root.length; i < len; i++) {\n            v = root[i];\n            results.push(cp(v, dep - 1));\n          }\n          return results;\n        })();\n      } else {\n        r = {};\n        for (k in root) {\n          v = root[k];\n          r[k] = cp(v, dep - 1);\n        }\n      }\n      return r;\n    };\n    return {\n      copy: function(obj, depth) {\n        if (depth == null) {\n          depth = 1;\n        }\n        return cp(obj, depth);\n      },\n      deepcopy: function(obj, depth) {\n        if (depth == null) {\n          depth = Infinity;\n        }\n        return cp(obj, depth);\n      }\n    };\n  })(), copy = ref.copy, deepcopy = ref.deepcopy;\n  extend = function(base) {\n    return function() {\n      var d, defaults, i, k, len, v;\n      defaults = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      for (i = 0, len = defaults.length; i < len; i++) {\n        d = defaults[i];\n        if (d != null) {\n          for (k in d) {\n            v = d[k];\n            if (base[k] == null) {\n              base[k] = v;\n            }\n          }\n        }\n      }\n      return base;\n    };\n  };\n  update = function(base) {\n    return function() {\n      var d, i, k, len, updates, v;\n      updates = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      for (i = 0, len = updates.length; i < len; i++) {\n        d = updates[i];\n        if (d != null) {\n          for (k in d) {\n            v = d[k];\n            base[k] = v;\n          }\n        }\n      }\n      return base;\n    };\n  };\n  override = function(_d) {\n    var d, fallback;\n    d = copy(_d);\n    fallback = d['_'];\n    if (fallback != null) {\n      return function() {\n        var args, ref1;\n        args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        return ((ref1 = d[args.length]) != null ? ref1 : fallback).apply(null, args);\n      };\n    } else {\n      return function() {\n        var args, f;\n        args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        f = d[args.length];\n        if (f == null) {\n          throw Error(\"This Function Can't Accept \" + args.length + \" Args\");\n        } else {\n          return f.apply(null, args);\n        }\n      };\n    }\n  };\n  return {\n    log: log,\n    assert: assert,\n    assertEq: assertEq,\n    assertEqOn: assertEqOn,\n    dict: dict,\n    copy: copy,\n    deepcopy: deepcopy,\n    securely: securely,\n    extend: extend,\n    update: update,\n    override: override\n  };\n};\n\nmodule.exports = this_module();\n\n\n\n}).call(this,require('_process'))\n\n},{\"_process\":2}]},{},[1])(1)\n});\n\n\n//# sourceMappingURL=coffee-mate.js.map","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            currentQueue[queueIndex].run();\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (!draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.lazy = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nvar this_module,\n  slice = [].slice;\n\nthis_module = function(arg) {\n  var Iterator, LazyList, Symbol, all, any, best, brk, cartProd, concat, cons, drop, dropWhile, enumerate, filter, foldl, foreach, group, groupBy, groupOn, head, iterate, last, lazy, length, list, map, naturals, nil, partition, permutation_gen, primes, random_gen, range, ranged_random_gen, ref, repeat, reverse, scanl, sort, sortOn, streak, take, takeWhile, zip, zipWith;\n  Symbol = arg.Symbol;\n  LazyList = function(f) {\n    f[Symbol.iterator] = function() {\n      return f();\n    };\n    f.toString = function() {\n      return \"LazyList\";\n    };\n    return f;\n  };\n  nil = LazyList(function() {\n    return nil;\n  });\n  nil.toString = function() {\n    return 'nil';\n  };\n  Iterator = function(it) {\n    it.next = function() {\n      var r;\n      r = it();\n      return {\n        value: r,\n        done: r === nil\n      };\n    };\n    it.toString = function() {\n      return \"Iterator\";\n    };\n    return it;\n  };\n  naturals = LazyList(function() {\n    var i;\n    i = -1;\n    return Iterator(function() {\n      return ++i;\n    });\n  });\n  range = function() {\n    var args;\n    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    if (args.length === 0) {\n      return naturals;\n    } else if (args.length === 1) {\n      return LazyList(function() {\n        var i, stop;\n        stop = args[0];\n        i = -1;\n        return Iterator(function() {\n          if (++i < stop) {\n            return i;\n          } else {\n            return nil;\n          }\n        });\n      });\n    } else if (args.length === 2) {\n      return LazyList(function() {\n        var i, start, stop;\n        start = args[0], stop = args[1];\n        if (start < stop) {\n          i = start - 1;\n          return Iterator(function() {\n            if (++i < stop) {\n              return i;\n            } else {\n              return nil;\n            }\n          });\n        } else {\n          i = start + 1;\n          return Iterator(function() {\n            if (--i > stop) {\n              return i;\n            } else {\n              return nil;\n            }\n          });\n        }\n      });\n    } else {\n      return LazyList(function() {\n        var i, start, step, stop;\n        start = args[0], stop = args[1], step = args[2];\n        if (stop !== start && (stop - start) * step < 0) {\n          throw 'ERR IN range(): YOU ARE CREATING AN UNLIMITTED RANGE';\n        }\n        i = start - step;\n        if (start < stop) {\n          return Iterator(function() {\n            if ((i += step) < stop) {\n              return i;\n            } else {\n              return nil;\n            }\n          });\n        } else {\n          return Iterator(function() {\n            if ((i += step) > stop) {\n              return i;\n            } else {\n              return nil;\n            }\n          });\n        }\n      });\n    }\n  };\n  primes = LazyList(function() {\n    return filter(function(x) {\n      return all(function(p) {\n        return x % p !== 0;\n      })(takeWhile(function(p) {\n        return p * p <= x;\n      })(range(2, Infinity)));\n    })(range(2, Infinity))();\n  });\n  lazy = function(arr) {\n    if (typeof arr === 'function') {\n      if (arr[Symbol.iterator] != null) {\n        return arr;\n      } else {\n        return LazyList(arr);\n      }\n    } else if (arr[Symbol.iterator] != null) {\n      return LazyList(function() {\n        var it;\n        it = arr[Symbol.iterator]();\n        return Iterator(function() {\n          var r;\n          r = it.next();\n          if (r.done) {\n            return nil;\n          } else {\n            return r.value;\n          }\n        });\n      });\n    } else {\n      return LazyList(function() {\n        var i;\n        i = -1;\n        return Iterator(function() {\n          i += 1;\n          if (i < arr.length) {\n            return arr[i];\n          } else {\n            return nil;\n          }\n        });\n      });\n    }\n  };\n  enumerate = function(it) {\n    if ((it[Symbol.iterator] != null) || it instanceof Array) {\n      return zip(naturals, it);\n    } else {\n      return LazyList(function() {\n        var i, keys;\n        keys = Object.keys(it);\n        i = -1;\n        return Iterator(function() {\n          var k;\n          if (++i < keys.length) {\n            return [(k = keys[i]), it[k]];\n          } else {\n            return nil;\n          }\n        });\n      });\n    }\n  };\n  repeat = function(x) {\n    return LazyList(function() {\n      return Iterator(function() {\n        return x;\n      });\n    });\n  };\n  iterate = function(next, init) {\n    return LazyList(function() {\n      var st;\n      st = init;\n      return Iterator(function() {\n        var r;\n        r = st;\n        st = next(st);\n        return r;\n      });\n    });\n  };\n  random_gen = (function() {\n    var hash;\n    hash = function(x) {\n      x = Math.sin(x) * 1e4;\n      return x - Math.floor(x);\n    };\n    return function(opts) {\n      var ref, seed;\n      seed = hash((ref = opts != null ? opts.seed : void 0) != null ? ref : Math.random());\n      return iterate(hash, seed);\n    };\n  })();\n  ranged_random_gen = function(range, opts) {\n    var ref, seed;\n    seed = (ref = opts != null ? opts.seed : void 0) != null ? ref : Math.random();\n    return map(function(x) {\n      return Math.floor(x * range);\n    })(random_gen({\n      seed: seed\n    }));\n  };\n  permutation_gen = (function() {\n    var next_permutation;\n    next_permutation = function(x) {\n      var l, m, r, ref, ref1;\n      x = x.slice(0);\n      l = x.length - 1;\n      while (l >= 1 && x[l] <= x[l - 1]) {\n        --l;\n      }\n      if (l !== 0) {\n        m = x.length - 1;\n        while (m > l - 1 && x[m] <= x[l - 1]) {\n          --m;\n        }\n        ref = [x[l - 1], x[m]], x[m] = ref[0], x[l - 1] = ref[1];\n      }\n      r = x.length - 1;\n      while (l < r) {\n        ref1 = [x[r], x[l]], x[l] = ref1[0], x[r] = ref1[1];\n        ++l;\n        --r;\n      }\n      return x;\n    };\n    return function(arr) {\n      if (arr.length === 0) {\n        return nil;\n      } else {\n        return cons(arr.slice(0))(takeWhile(function(ls) {\n          return json(ls) !== json(arr);\n        })(drop(1)(iterate(next_permutation, arr))));\n      }\n    };\n  })();\n  take = function(n) {\n    return function(xs) {\n      return LazyList(function() {\n        var c, iter;\n        iter = lazy(xs)[Symbol.iterator]();\n        c = -1;\n        return Iterator(function() {\n          if (++c < n) {\n            return iter();\n          } else {\n            return nil;\n          }\n        });\n      });\n    };\n  };\n  takeWhile = function(ok) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter;\n        iter = lazy(xs)[Symbol.iterator]();\n        return Iterator(function() {\n          var x;\n          if ((x = iter()) !== nil && ok(x)) {\n            return x;\n          } else {\n            return nil;\n          }\n        });\n      });\n    };\n  };\n  drop = function(n) {\n    return function(xs) {\n      return LazyList(function() {\n        var finished, i, iter, j, ref;\n        iter = lazy(xs)[Symbol.iterator]();\n        finished = false;\n        for (i = j = 0, ref = n; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n          finished || (finished = iter() === nil);\n          if (finished) {\n            break;\n          }\n        }\n        if (finished) {\n          return function() {\n            return nil;\n          };\n        } else {\n          return iter;\n        }\n      });\n    };\n  };\n  dropWhile = function(ok) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter, x;\n        iter = lazy(xs)[Symbol.iterator]();\n        while (ok(x = iter()) && x !== nil) {\n          null;\n        }\n        return Iterator(function() {\n          var prevx, ref;\n          ref = [x, iter()], prevx = ref[0], x = ref[1];\n          return prevx;\n        });\n      });\n    };\n  };\n  cons = function(x) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter;\n        iter = null;\n        return Iterator(function() {\n          if (iter === null) {\n            iter = lazy(xs)[Symbol.iterator]();\n            return x;\n          } else {\n            return iter();\n          }\n        });\n      });\n    };\n  };\n  map = function(f) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter;\n        iter = lazy(xs)[Symbol.iterator]();\n        return Iterator(function() {\n          var x;\n          if ((x = iter()) !== nil) {\n            return f(x);\n          } else {\n            return nil;\n          }\n        });\n      });\n    };\n  };\n  filter = function(ok) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter;\n        iter = lazy(xs)[Symbol.iterator]();\n        return Iterator(function() {\n          var x;\n          while (!ok(x = iter()) && x !== nil) {\n            null;\n          }\n          return x;\n        });\n      });\n    };\n  };\n  scanl = function(f, r) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter;\n        iter = lazy(xs)[Symbol.iterator]();\n        return Iterator(function() {\n          var got, x;\n          got = r;\n          r = (x = iter()) !== nil ? f(r, x) : nil;\n          return got;\n        });\n      });\n    };\n  };\n  streak = function(n) {\n    if (n < 1) {\n      return nil;\n    } else {\n      return function(xs) {\n        return drop(n - 1)(LazyList(function() {\n          var buf, iter;\n          iter = lazy(xs)[Symbol.iterator]();\n          buf = [];\n          return Iterator(function() {\n            var x;\n            if ((x = iter()) === nil) {\n              return nil;\n            }\n            buf.push(x);\n            if (buf.length > n) {\n              buf.shift(1);\n            }\n            return buf.slice(0);\n          });\n        }));\n      };\n    }\n  };\n  reverse = function(xs) {\n    var arr;\n    arr = list(lazy(xs));\n    return arr.reverse();\n  };\n  sort = function(xs) {\n    var arr;\n    arr = list(lazy(xs));\n    return arr.sort();\n  };\n  sortOn = function(f) {\n    return function(xs) {\n      var arr;\n      arr = list(lazy(xs));\n      return arr.sort(function(a, b) {\n        var fa, fb;\n        return ((fa = f(a)) > (fb = f(b))) - (fa < fb);\n      });\n    };\n  };\n  group = function(xs) {\n    return LazyList(function() {\n      var iter, t, x;\n      iter = lazy(xs)[Symbol.iterator]();\n      t = nil;\n      x = iter();\n      return Iterator(function() {\n        if (x === nil) {\n          return nil;\n        } else if (x !== t) {\n          t = x;\n          return LazyList(function() {\n            return Iterator(function() {\n              var r;\n              if ((r = x) === t) {\n                x = iter();\n                return r;\n              } else {\n                return nil;\n              }\n            });\n          });\n        }\n      });\n    });\n  };\n  groupBy = function(eq) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter, t, x;\n        iter = lazy(xs)[Symbol.iterator]();\n        t = nil;\n        x = iter();\n        return Iterator(function() {\n          if (x === nil) {\n            return nil;\n          } else if (!eq(x, t)) {\n            t = x;\n            return LazyList(function() {\n              return Iterator(function() {\n                var r;\n                if (eq((r = x), t)) {\n                  x = iter();\n                  return r;\n                } else {\n                  return nil;\n                }\n              });\n            });\n          }\n        });\n      });\n    };\n  };\n  groupOn = function(f) {\n    return function(xs) {\n      var k, memo, v;\n      memo = {};\n      foreach(xs, function(x) {\n        var y;\n        y = f(x);\n        if (memo[y] == null) {\n          memo[y] = [];\n        }\n        return memo[y].push(x);\n      });\n      return (function() {\n        var results;\n        results = [];\n        for (k in memo) {\n          v = memo[k];\n          results.push(v);\n        }\n        return results;\n      })();\n    };\n  };\n  partition = function(f) {\n    return function(xs) {\n      var memo;\n      memo = [[], []];\n      foreach(xs, function(x) {\n        var y;\n        y = !f(x) + 0;\n        return memo[y].push(x);\n      });\n      return memo;\n    };\n  };\n  concat = function(xss) {\n    return LazyList(function() {\n      var iter, xs, xs_iter;\n      xs_iter = lazy(xss)[Symbol.iterator]();\n      xs = xs_iter();\n      iter = lazy(xs)[Symbol.iterator]();\n      return Iterator(function() {\n        var x;\n        if ((x = iter()) !== nil) {\n          return x;\n        } else if ((xs = xs_iter()) !== nil) {\n          iter = lazy(xs)[Symbol.iterator]();\n          return iter();\n        } else {\n          return nil;\n        }\n      });\n    });\n  };\n  ref = (function() {\n    var finished, zip, zipWith;\n    finished = function(arr) {\n      var j, len1, x;\n      for (j = 0, len1 = arr.length; j < len1; j++) {\n        x = arr[j];\n        if (x === nil) {\n          return true;\n        }\n      }\n      return false;\n    };\n    zip = function() {\n      var xss;\n      xss = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      return LazyList(function() {\n        var iters, xs;\n        iters = (function() {\n          var j, len1, results;\n          results = [];\n          for (j = 0, len1 = xss.length; j < len1; j++) {\n            xs = xss[j];\n            results.push(lazy(xs)[Symbol.iterator]());\n          }\n          return results;\n        })();\n        return Iterator(function() {\n          var iter, next;\n          next = (function() {\n            var j, len1, results;\n            results = [];\n            for (j = 0, len1 = iters.length; j < len1; j++) {\n              iter = iters[j];\n              results.push(iter());\n            }\n            return results;\n          })();\n          if (finished(next)) {\n            return nil;\n          } else {\n            return next;\n          }\n        });\n      });\n    };\n    zipWith = function(f) {\n      return function() {\n        var xss;\n        xss = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        return LazyList(function() {\n          var iters, xs;\n          iters = (function() {\n            var j, len1, results;\n            results = [];\n            for (j = 0, len1 = xss.length; j < len1; j++) {\n              xs = xss[j];\n              results.push(lazy(xs)[Symbol.iterator]());\n            }\n            return results;\n          })();\n          return Iterator(function() {\n            var iter, next;\n            next = (function() {\n              var j, len1, results;\n              results = [];\n              for (j = 0, len1 = iters.length; j < len1; j++) {\n                iter = iters[j];\n                results.push(iter());\n              }\n              return results;\n            })();\n            if (finished(next)) {\n              return nil;\n            } else {\n              return f.apply(null, next);\n            }\n          });\n        });\n      };\n    };\n    return {\n      zip: zip,\n      zipWith: zipWith\n    };\n  })(), zip = ref.zip, zipWith = ref.zipWith;\n  cartProd = (function() {\n    var apply_vector, inc_vector;\n    inc_vector = function(limits) {\n      var len_minus_1;\n      len_minus_1 = limits.length - 1;\n      return function(vec) {\n        var i;\n        i = len_minus_1;\n        while (!(++vec[i] < limits[i] || i <= 0)) {\n          vec[i--] = 0;\n        }\n        return vec;\n      };\n    };\n    apply_vector = function(space) {\n      var len;\n      len = space.length;\n      return function(vec) {\n        var i, j, ref1, results;\n        results = [];\n        for (i = j = 0, ref1 = len; 0 <= ref1 ? j < ref1 : j > ref1; i = 0 <= ref1 ? ++j : --j) {\n          results.push(space[i][vec[i]]);\n        }\n        return results;\n      };\n    };\n    return function() {\n      var xss;\n      xss = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      return LazyList(function() {\n        var get_value, i, inc, j, len, len1, limits, v, xs;\n        xss = (function() {\n          var j, len1, results;\n          results = [];\n          for (j = 0, len1 = xss.length; j < len1; j++) {\n            xs = xss[j];\n            results.push(list(xs));\n          }\n          return results;\n        })();\n        limits = (function() {\n          var j, ref1, results;\n          results = [];\n          for (i = j = 0, ref1 = xss.length; 0 <= ref1 ? j < ref1 : j > ref1; i = 0 <= ref1 ? ++j : --j) {\n            results.push(xss[i].length);\n          }\n          return results;\n        })();\n        for (j = 0, len1 = limits.length; j < len1; j++) {\n          len = limits[j];\n          if (len === 0) {\n            return nil;\n          }\n        }\n        inc = inc_vector(limits);\n        get_value = apply_vector(xss);\n        v = (function() {\n          var o, ref1, results;\n          results = [];\n          for (i = o = 0, ref1 = xss.length; 0 <= ref1 ? o < ref1 : o > ref1; i = 0 <= ref1 ? ++o : --o) {\n            results.push(0);\n          }\n          return results;\n        })();\n        return Iterator(function() {\n          var r;\n          if (v[0] < limits[0]) {\n            r = get_value(v);\n            inc(v);\n            return r;\n          } else {\n            return nil;\n          }\n        });\n      });\n    };\n  })();\n  list = function(xs) {\n    var it, n, results, results1, x;\n    if (xs instanceof Array) {\n      return xs;\n    } else if (typeof xs === 'function') {\n      it = xs[Symbol.iterator]();\n      results = [];\n      while ((x = it()) !== nil) {\n        results.push(x);\n      }\n      return results;\n    } else if (xs[Symbol.iterator] != null) {\n      it = lazy(xs)[Symbol.iterator]();\n      results1 = [];\n      while ((x = it()) !== nil) {\n        results1.push(x);\n      }\n      return results1;\n    } else if (typeof xs === 'number') {\n      n = xs;\n      return function(xs) {\n        return list(take(n)(xs));\n      };\n    } else {\n      throw Error('list(xs): xs is neither LazyList nor Array');\n    }\n  };\n  head = function(xs) {\n    var iter, ref1;\n    if (xs[Symbol.iterator] == null) {\n      return (ref1 = xs[0]) != null ? ref1 : nil;\n    } else {\n      iter = lazy(xs)[Symbol.iterator]();\n      return iter();\n    }\n  };\n  last = function(xs) {\n    var iter, r, ref1, x;\n    if (xs[Symbol.iterator] == null) {\n      return (ref1 = xs[xs.length - 1]) != null ? ref1 : nil;\n    } else {\n      iter = lazy(xs)[Symbol.iterator]();\n      r = nil;\n      while ((x = iter()) !== nil) {\n        r = x;\n      }\n      return r;\n    }\n  };\n  length = function(xs) {\n    var iter, r, x;\n    if (xs[Symbol.iterator] == null) {\n      return xs.length;\n    } else {\n      iter = lazy(xs)[Symbol.iterator]();\n      r = 0;\n      while ((x = iter()) !== nil) {\n        ++r;\n      }\n      return r;\n    }\n  };\n  foldl = function(f, init) {\n    return function(xs) {\n      var iter, r, x;\n      r = init;\n      iter = lazy(xs)[Symbol.iterator]();\n      while ((x = iter()) !== nil) {\n        r = f(r, x);\n      }\n      return r;\n    };\n  };\n  best = function(better) {\n    return function(xs) {\n      var it, iter, r;\n      iter = lazy(xs)[Symbol.iterator]();\n      if ((r = iter()) === nil) {\n        return null;\n      }\n      while ((it = iter()) !== nil) {\n        r = better(it, r) ? it : r;\n      }\n      return r;\n    };\n  };\n  all = function(f) {\n    if (typeof f !== 'function') {\n      f = (function(x) {\n        return x === f;\n      });\n    }\n    return function(xs) {\n      var iter, x;\n      iter = lazy(xs)[Symbol.iterator]();\n      while ((x = iter()) !== nil) {\n        if (!f(x)) {\n          return false;\n        }\n      }\n      return true;\n    };\n  };\n  any = function(f) {\n    var all_not;\n    all_not = all(function(x) {\n      return !f(x);\n    });\n    return function(xs) {\n      return !(all_not(xs));\n    };\n  };\n  brk = function() {\n    return brk;\n  };\n  brk.toString = function() {\n    return 'foreach.break';\n  };\n  foreach = function(xs, callback, fruit) {\n    var iter, x;\n    iter = lazy(xs)[Symbol.iterator]();\n    while ((x = iter()) !== nil) {\n      if (callback(x, fruit) === brk) {\n        break;\n      }\n    }\n    return fruit;\n  };\n  Object.defineProperties(foreach, {\n    \"break\": {\n      writable: false,\n      configurable: false,\n      enumerable: false,\n      value: brk\n    }\n  });\n  return {\n    nil: nil,\n    LazyList: LazyList,\n    Iterator: Iterator,\n    Symbol: Symbol,\n    naturals: naturals,\n    range: range,\n    primes: primes,\n    lazy: lazy,\n    enumerate: enumerate,\n    repeat: repeat,\n    iterate: iterate,\n    random_gen: random_gen,\n    ranged_random_gen: ranged_random_gen,\n    permutation_gen: permutation_gen,\n    cons: cons,\n    map: map,\n    filter: filter,\n    take: take,\n    takeWhile: takeWhile,\n    drop: drop,\n    dropWhile: dropWhile,\n    scanl: scanl,\n    streak: streak,\n    reverse: reverse,\n    sort: sort,\n    sortOn: sortOn,\n    group: group,\n    groupBy: groupBy,\n    groupOn: groupOn,\n    partition: partition,\n    concat: concat,\n    zip: zip,\n    zipWith: zipWith,\n    cartProd: cartProd,\n    list: list,\n    head: head,\n    last: last,\n    length: length,\n    foldl: foldl,\n    best: best,\n    all: all,\n    any: any,\n    foreach: foreach\n  };\n};\n\nmodule.exports = this_module({\n  Symbol: typeof Symbol !== \"undefined\" && Symbol !== null ? Symbol : {\n    iterator: 'iter'\n  }\n});\n\n\n},{}]},{},[1])(1)\n});\n\n\n//# sourceMappingURL=lazy.js.map","this_module = ({best}) ->\n\t# transformers\n\tflip = (f) ->\n\t\t(x) -> (y) -> f(y)(x)\n\n\tcombine = (f) -> (g) ->\n\t\t(x) -> f g(x)\n\n\tcurry2 = (f) ->\n\t\t(a) -> (b) -> f(a, b)\n\n\tcurry3 = (f) ->\n\t\t(a) -> (b) -> (c) -> f(a, b, c)\n\n\tuncurry2 = (f) ->\n\t\t(a, b) -> f(a)(b)\n\n\tuncurry3 = (f) ->\n\t\t(a, b, c) -> f(a)(b)(c)\n\n\tpack = (f) ->\n\t\t(arr) -> f(arr...)\n\n\tunpack = (f) ->\n\t\t(arr...) -> f(arr)\n\n\t# seek & pluck in Array or Object\n\tseek = (arr) ->\n\t\t(i) -> arr[i]\n\n\tpluck = (attr) ->\n\t\t(d) -> d[attr]\n\n\t# compare\n\tequal = (it) ->\n\t\t(x) -> x == it\n\n\tnotEqual = (it) ->\n\t\t(x) -> x != it\n\n\tlessThan = (it) ->\n\t\t(x) -> x < it\n\n\tgreaterThan = (it) ->\n\t\t(x) -> x > it\n\n\tlessEqual = (it) ->\n\t\t(x) -> x <= it\n\n\tgreaterEqual = (it) ->\n\t\t(x) -> x >= it\n\n\t# math\n\tplus = (it) ->\n\t\t(x) -> x + it\n\n\tminus = (it) ->\n\t\t(x) -> x - it\n\n\tabs = Math.abs\n\tfloor = Math.floor\n\tceil = Math.ceil\n\n\tprecise = (n) ->\n\t\t(x) -> parseFloat x.toPrecision(n)\n\n\taccept_multi_or_array = (f) ->\n\t\t(arr...) ->\n\t\t\tf(if arr.length == 1 and arr.first instanceof Array then arr.first else arr)\n\n\tsum = accept_multi_or_array (arr) ->\n\t\tarr = arr.first if arr.length == 1 and arr.first instanceof Array\n\t\tr = 0\n\t\tr += x for x in arr\n\t\tr\n\n\tmax = accept_multi_or_array (arr) ->\n\t\tbest((a, b) -> a > b) arr\n\n\tmin = accept_multi_or_array (arr) ->\n\t\tbest((a, b) -> a < b) arr\n\n\tmax_index = accept_multi_or_array (arr) ->\n\t\tbest((i, j) -> arr[i] > arr[j]) [0...arr.length]\n\n\tmin_index = accept_multi_or_array (arr) ->\n\t\tbest((i, j) -> arr[i] < arr[j]) [0...arr.length]\n\n\treturn {\n\t\tflip, combine,\n\t\tcurry2, curry3, uncurry2, uncurry3, pack, unpack,\n\t\tseek, pluck,\n\t\tequal, notEqual, lessThan, lessEqual, greaterThan, greaterEqual,\n\t\tplus, minus, abs, floor, ceil, precise,\n\t\tsum, max, min, max_index, min_index,\n\t}\n\nmodule.exports = this_module\n\tbest: require('lazy.coffee').best\n\n","this_module = () ->\n\tint = (s, base) -> if typeof(s) == 'string' then (r = parseInt(s, base); unless s.slice? and r == parseInt(s.slice(0,-1), base) then r else null) else parseInt(0 + s)\n\tfloat = (s) -> if /^-?[0-9]*(\\.[0-9]+)?([eE]-?[0-9]+)?$/.test(s) then parseFloat(s) else null\n\tstr = (x, base) -> x.toString(base)\n\tbool = (x) -> if x in [true, false] then x else null\n\thex = (x) -> x.toString(16)\n\tord = (c) -> c.charCodeAt()\n\tchr = (x) -> String.fromCharCode(x)\n\tjson = (it, indent) -> JSON.stringify(it, null, indent)\n\tobj = (s) -> JSON.parse(s)\n\n\treturn {\n\t\tint, float, bool, str, hex, ord, chr, json, obj,\n\t}\n\nmodule.exports = this_module()\n\n","this_module = () ->\n\tchurch = (n) -> #the nth church number\n\t\titer = (f, n, r) ->\n\t\t\tif n == 0 then r else iter(f, n - 1, f(r))\n\t\t(f) ->\n\t\t\t(x) -> iter(f, n + 0, x)\n\n\tY = (f) -> #the Y combinator\n\t\t((x) -> (x x)) ((x) -> (f ((y) -> ((x x) y))))\n\n\tmemoize = (f, get_key = ((args...) -> json(args))) ->\n\t\tcache = {}\n\t\t(args...) ->\n\t\t\tkey = get_key(args...)\n\t\t\tcached = cache[key]\n\t\t\tif cached?\n\t\t\t\tcached\n\t\t\telse\n\t\t\t\tr = f(args...)\n\t\t\t\tcache[key] = r\n\t\t\t\tr\n\n\treturn {\n\t\tchurch, Y, memoize,\n\t}\n\nmodule.exports = this_module()\n\n","this_module = () ->\n\turi_encoder = (component_packer = str) ->\n\t\t(obj) ->\n\t\t\t(\"#{encodeURIComponent(k)}=#{encodeURIComponent component_packer v}\" for k, v of obj).join('&')\n\n\turi_decoder = (component_unpacker = ((s) -> s)) ->\n\t\t(str) ->\n\t\t\td = {}\n\t\t\tfor s in (str.match /[^?=&]+=[^&]*/g) ? []\n\t\t\t\t[..., k, v] = s.match /([^=]+)=(.*)/\n\t\t\t\td[decodeURIComponent(k)] = (component_unpacker decodeURIComponent v)\n\t\t\treturn d\n\n\treturn {\n\t\turi_encoder, uri_decoder,\n\t}\n\nmodule.exports = this_module()\n\n","this_module = () ->\n\tfunction_literal = (f) ->\n\t\texpr = f.toString().replace(/^\\s*function\\s?\\(\\s?\\)\\s?{\\s*return\\s*([^]*?);?\\s*}$/, '$1')\n\t\texpr = expr.replace(/[\\r\\n]{1,2}\\s*/g, '') if expr.length <= 100\n\t\treturn expr\n\n\ttime_now = ->\n\t\t(new Date).getTime()\n\n\tlog = do -> #log an expression with it's literal and time used\n\t\tdye = do ->\n\t\t\t# ANSI Terminal Colors.\n\t\t\tcavailable = (not window?) and process? and not process.env.NODE_DISABLE_COLORS\n\t\t\tpalette =\n\t\t\t\tbold: '\\x1B[0;1m'\n\t\t\t\tred: '\\x1B[0;31m'\n\t\t\t\tgreen: '\\x1B[0;32m'\n\t\t\t\tyellow: '\\x1B[0;33m'\n\t\t\t\tblue: '\\x1B[0;34m'\n\t\t\t\tbold_grey: '\\x1B[1;30m'\n\t\t\tif not cavailable\n\t\t\t\t(color) -> (s) -> s\n\t\t\telse\n\t\t\t\t(color) ->\n\t\t\t\t\t(s) -> \"#{palette[color]}#{s}#{'\\x1B[0m'}\"\n\n\t\tlog_label = do ->\n\t\t\tflag_palette =\n\t\t\t\t'#': 'bold_grey'\n\t\t\t\t'I': 'green'\n\t\t\t\t'E': 'red'\n\t\t\t\t'W': 'yellow'\n\t\t\top_flag = (op) ->\n\t\t\t\tif op == 'log' then '#' else op[0].toUpperCase()\n\t\t\t(op) ->\n\t\t\t\tflag = op_flag(op)\n\t\t\t\tdye(flag_palette[flag]) flag\n\n\t\thistories = []\n\t\tfactory = (op) ->\n\t\t\tprefix = \"#{dye('bold_grey') '#'}#{log_label op}\"\n\t\t\t(args...) ->\n\t\t\t\tball = []\n\t\t\t\tfor f in args\n\t\t\t\t\tif typeof f == 'function'\n\t\t\t\t\t\texpr = function_literal(f)\n\t\t\t\t\t\tstart_time = time_now()\n\t\t\t\t\t\teval_result = f()\n\t\t\t\t\t\ttime_used = time_now() - start_time\n\t\t\t\t\t\tball.push(\"#{prefix} #{dye('green') expr} #{dye('bold_grey') '==>'}\", eval_result)\n\t\t\t\t\t\tball.push(dye('yellow') \"[#{time_used}ms]\") if time_used > 0\n\t\t\t\t\telse\n\t\t\t\t\t\tball.push(\"#{prefix}\", f)\n\t\t\t\tconsole[op] ball...\n\t\t\t\thistories.push(ball)\n\t\t\t\thistories.shift() if histories.length >= 10\n\t\t\t\treturn null\n\t\tgot = factory('log')\n\t\tgot.histories = histories\n\t\tgot.info = factory('info')\n\t\tgot.warn = factory('warn')\n\t\tgot.error = got.err = factory('error')\n\t\treturn got\n\n\tassert = (f, msg) ->\n\t\t[f, msg] = [msg, f] if f not instanceof Function\n\t\ttry\n\t\t\tr = f()\n\t\tcatch e\n\t\t\tthrow Error \"Assertion #{msg ? function_literal(f)} Unknown:\\n#{e}\"\n\t\tif not r\n\t\t\tthrow Error \"Assertion #{msg ? function_literal(f)} Failed!\"\n\n\tassertEq = (l, r) ->\n\t\ttry\n\t\t\tlv = l()\n\t\t\trv = r()\n\t\tcatch e\n\t\t\tthrow Error \"Equation Between #{function_literal(l)} And #{function_literal(r)} Unknown:\\n#{e}\"\n\t\tif lv isnt rv\n\t\t\tthrow Error \"Equation Failed:\\n\\t#{function_literal(l)} IS #{lv} BUT\\n\\t#{function_literal(r)} IS #{rv}.\"\n\n\tassertEqOn = (f) -> (l, r) ->\n\t\ttry\n\t\t\tlv = l()\n\t\t\trv = r()\n\t\t\tflv = f(lv)\n\t\t\tfrv = f(rv)\n\t\tcatch e\n\t\t\tthrow Error \"MAPPED Equation Between #{function_literal(l)} And #{function_literal(r)} Unknown:\\n#{e}\"\n\t\tif flv isnt frv\n\t\t\tthrow Error \"Equation Failed:\\n\\t#{function_literal(l)} IS #{lv} AND MAPPED TO #{flv} BUT\\n\\t#{function_literal(r)} IS #{rv} AND MAPPED TO #{frv}.\"\n\n\tsecurely = (f) -> # ensure a function not to modify it's arguments\n\t\t(args...) ->\n\t\t\targs = deepcopy args\n\t\t\tf(args...)\n\n\tdict = (pairs) -> #for dict comprehensions\n\t\td = {}\n\t\td[k] = v for [k, v] in pairs\n\t\treturn d\n\n\t{copy, deepcopy} = do ->\n\t\tcp = (root, dep) ->\n\t\t\treturn root if dep == 0 or not root? or typeof(root) != 'object'\n\t\t\tif root instanceof Array\n\t\t\t\tr = (cp(v, dep-1) for v in root)\n\t\t\telse\n\t\t\t\tr = {}\n\t\t\t\tr[k] = cp(v, dep-1) for k, v of root\n\t\t\treturn r\n\t\tcopy: (obj, depth=1) -> cp(obj, depth)\n\t\tdeepcopy: (obj, depth=Infinity) -> cp(obj, depth)\n\n\textend = (base) -> (defaults...) -> #NOTE: modified inplace, use copy() to protect it.\n\t\tfor d in defaults when d?\n\t\t\tbase[k] ?= v for k, v of d #NOTE: null values will be replaced if a default value exists.\n\t\treturn base\n\n\tupdate = (base) -> (updates...) -> #NOTE: modified inplace, use copy() to protect it.\n\t\tfor d in updates when d?\n\t\t\tbase[k] = v for k, v of d\n\t\treturn base\n\n\toverride = (_d) ->\n\t\td = copy _d\n\t\tfallback = d['_']\n\t\tif fallback?\n\t\t\t(args...) ->\n\t\t\t\t(d[args.length] ? fallback) args...\n\t\telse\n\t\t\t(args...) ->\n\t\t\t\tf = d[args.length]\n\t\t\t\tif not f?\n\t\t\t\t\tthrow Error \"This Function Can't Accept #{args.length} Args\"\n\t\t\t\telse\n\t\t\t\t\treturn f args...\n\n\treturn {\n\t\tlog, assert, assertEq, assertEqOn, dict, copy, deepcopy, securely, extend, update, override,\n\t}\n\nmodule.exports = this_module()\n\n"],"sourceRoot":"/source/"}